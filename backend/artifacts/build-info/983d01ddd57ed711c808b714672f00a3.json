{"id":"983d01ddd57ed711c808b714672f00a3","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/extensions/GovernorCountingSimple.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for simple, 3 options, vote counting.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorCountingSimple is Governor {\n    /**\n     * @dev Supported vote types. Matches Governor Bravo ordering.\n     */\n    enum VoteType {\n        Against,\n        For,\n        Abstain\n    }\n\n    struct ProposalVote {\n        uint256 againstVotes;\n        uint256 forVotes;\n        uint256 abstainVotes;\n        mapping(address => bool) hasVoted;\n    }\n\n    mapping(uint256 => ProposalVote) private _proposalVotes;\n\n    /**\n     * @dev See {IGovernor-COUNTING_MODE}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public pure virtual override returns (string memory) {\n        return \"support=bravo&quorum=for,abstain\";\n    }\n\n    /**\n     * @dev See {IGovernor-hasVoted}.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual override returns (bool) {\n        return _proposalVotes[proposalId].hasVoted[account];\n    }\n\n    /**\n     * @dev Accessor to the internal vote counts.\n     */\n    function proposalVotes(\n        uint256 proposalId\n    ) public view virtual returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes) {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n        return (proposalVote.againstVotes, proposalVote.forVotes, proposalVote.abstainVotes);\n    }\n\n    /**\n     * @dev See {Governor-_quorumReached}.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        return quorum(proposalSnapshot(proposalId)) <= proposalVote.forVotes + proposalVote.abstainVotes;\n    }\n\n    /**\n     * @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        return proposalVote.forVotes > proposalVote.againstVotes;\n    }\n\n    /**\n     * @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo).\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory // params\n    ) internal virtual override {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        require(!proposalVote.hasVoted[account], \"GovernorVotingSimple: vote already cast\");\n        proposalVote.hasVoted[account] = true;\n\n        if (support == uint8(VoteType.Against)) {\n            proposalVote.againstVotes += weight;\n        } else if (support == uint8(VoteType.For)) {\n            proposalVote.forVotes += weight;\n        } else if (support == uint8(VoteType.Abstain)) {\n            proposalVote.abstainVotes += weight;\n        } else {\n            revert(\"GovernorVotingSimple: invalid value for enum VoteType\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/extensions/GovernorSettings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for settings updatable through governance.\n *\n * _Available since v4.4._\n */\nabstract contract GovernorSettings is Governor {\n    uint256 private _votingDelay;\n    uint256 private _votingPeriod;\n    uint256 private _proposalThreshold;\n\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\n    event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\n\n    /**\n     * @dev Initialize the governance parameters.\n     */\n    constructor(uint256 initialVotingDelay, uint256 initialVotingPeriod, uint256 initialProposalThreshold) {\n        _setVotingDelay(initialVotingDelay);\n        _setVotingPeriod(initialVotingPeriod);\n        _setProposalThreshold(initialProposalThreshold);\n    }\n\n    /**\n     * @dev See {IGovernor-votingDelay}.\n     */\n    function votingDelay() public view virtual override returns (uint256) {\n        return _votingDelay;\n    }\n\n    /**\n     * @dev See {IGovernor-votingPeriod}.\n     */\n    function votingPeriod() public view virtual override returns (uint256) {\n        return _votingPeriod;\n    }\n\n    /**\n     * @dev See {Governor-proposalThreshold}.\n     */\n    function proposalThreshold() public view virtual override returns (uint256) {\n        return _proposalThreshold;\n    }\n\n    /**\n     * @dev Update the voting delay. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function setVotingDelay(uint256 newVotingDelay) public virtual onlyGovernance {\n        _setVotingDelay(newVotingDelay);\n    }\n\n    /**\n     * @dev Update the voting period. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function setVotingPeriod(uint256 newVotingPeriod) public virtual onlyGovernance {\n        _setVotingPeriod(newVotingPeriod);\n    }\n\n    /**\n     * @dev Update the proposal threshold. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function setProposalThreshold(uint256 newProposalThreshold) public virtual onlyGovernance {\n        _setProposalThreshold(newProposalThreshold);\n    }\n\n    /**\n     * @dev Internal setter for the voting delay.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function _setVotingDelay(uint256 newVotingDelay) internal virtual {\n        emit VotingDelaySet(_votingDelay, newVotingDelay);\n        _votingDelay = newVotingDelay;\n    }\n\n    /**\n     * @dev Internal setter for the voting period.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function _setVotingPeriod(uint256 newVotingPeriod) internal virtual {\n        // voting period must be at least one block long\n        require(newVotingPeriod > 0, \"GovernorSettings: voting period too low\");\n        emit VotingPeriodSet(_votingPeriod, newVotingPeriod);\n        _votingPeriod = newVotingPeriod;\n    }\n\n    /**\n     * @dev Internal setter for the proposal threshold.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function _setProposalThreshold(uint256 newProposalThreshold) internal virtual {\n        emit ProposalThresholdSet(_proposalThreshold, newProposalThreshold);\n        _proposalThreshold = newProposalThreshold;\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\nimport \"../../interfaces/IERC5805.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotes is Governor {\n    IERC5805 public immutable token;\n\n    constructor(IVotes tokenAddress) {\n        token = IERC5805(address(tokenAddress));\n    }\n\n    /**\n     * @dev Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token\n     * does not implement EIP-6372.\n     */\n    function clock() public view virtual override returns (uint48) {\n        try token.clock() returns (uint48 timepoint) {\n            return timepoint;\n        } catch {\n            return SafeCast.toUint48(block.number);\n        }\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        try token.CLOCK_MODE() returns (string memory clockmode) {\n            return clockmode;\n        } catch {\n            return \"mode=blocknumber&from=default\";\n        }\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes}).\n     */\n    function _getVotes(\n        address account,\n        uint256 timepoint,\n        bytes memory /*params*/\n    ) internal view virtual override returns (uint256) {\n        return token.getPastVotes(account, timepoint);\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/extensions/GovernorVotesQuorumFraction.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./GovernorVotes.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/math/SafeCast.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a\n * fraction of the total supply.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotesQuorumFraction is GovernorVotes {\n    using Checkpoints for Checkpoints.Trace224;\n\n    uint256 private _quorumNumerator; // DEPRECATED in favor of _quorumNumeratorHistory\n\n    /// @custom:oz-retyped-from Checkpoints.History\n    Checkpoints.Trace224 private _quorumNumeratorHistory;\n\n    event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator);\n\n    /**\n     * @dev Initialize quorum as a fraction of the token's total supply.\n     *\n     * The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is\n     * specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be\n     * customized by overriding {quorumDenominator}.\n     */\n    constructor(uint256 quorumNumeratorValue) {\n        _updateQuorumNumerator(quorumNumeratorValue);\n    }\n\n    /**\n     * @dev Returns the current quorum numerator. See {quorumDenominator}.\n     */\n    function quorumNumerator() public view virtual returns (uint256) {\n        return _quorumNumeratorHistory._checkpoints.length == 0 ? _quorumNumerator : _quorumNumeratorHistory.latest();\n    }\n\n    /**\n     * @dev Returns the quorum numerator at a specific timepoint. See {quorumDenominator}.\n     */\n    function quorumNumerator(uint256 timepoint) public view virtual returns (uint256) {\n        // If history is empty, fallback to old storage\n        uint256 length = _quorumNumeratorHistory._checkpoints.length;\n        if (length == 0) {\n            return _quorumNumerator;\n        }\n\n        // Optimistic search, check the latest checkpoint\n        Checkpoints.Checkpoint224 memory latest = _quorumNumeratorHistory._checkpoints[length - 1];\n        if (latest._key <= timepoint) {\n            return latest._value;\n        }\n\n        // Otherwise, do the binary search\n        return _quorumNumeratorHistory.upperLookupRecent(SafeCast.toUint32(timepoint));\n    }\n\n    /**\n     * @dev Returns the quorum denominator. Defaults to 100, but may be overridden.\n     */\n    function quorumDenominator() public view virtual returns (uint256) {\n        return 100;\n    }\n\n    /**\n     * @dev Returns the quorum for a timepoint, in terms of number of votes: `supply * numerator / denominator`.\n     */\n    function quorum(uint256 timepoint) public view virtual override returns (uint256) {\n        return (token.getPastTotalSupply(timepoint) * quorumNumerator(timepoint)) / quorumDenominator();\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - Must be called through a governance proposal.\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function updateQuorumNumerator(uint256 newQuorumNumerator) external virtual onlyGovernance {\n        _updateQuorumNumerator(newQuorumNumerator);\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function _updateQuorumNumerator(uint256 newQuorumNumerator) internal virtual {\n        require(\n            newQuorumNumerator <= quorumDenominator(),\n            \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\"\n        );\n\n        uint256 oldQuorumNumerator = quorumNumerator();\n\n        // Make sure we keep track of the original numerator in contracts upgraded from a version without checkpoints.\n        if (oldQuorumNumerator != 0 && _quorumNumeratorHistory._checkpoints.length == 0) {\n            _quorumNumeratorHistory._checkpoints.push(\n                Checkpoints.Checkpoint224({_key: 0, _value: SafeCast.toUint224(oldQuorumNumerator)})\n            );\n        }\n\n        // Set new quorum for future proposals\n        _quorumNumeratorHistory.push(SafeCast.toUint32(clock()), SafeCast.toUint224(newQuorumNumerator));\n\n        emit QuorumNumeratorUpdated(oldQuorumNumerator, newQuorumNumerator);\n    }\n}\n"},"@openzeppelin/contracts/governance/Governor.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/Governor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721Receiver.sol\";\nimport \"../token/ERC1155/IERC1155Receiver.sol\";\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/EIP712.sol\";\nimport \"../utils/introspection/ERC165.sol\";\nimport \"../utils/math/SafeCast.sol\";\nimport \"../utils/structs/DoubleEndedQueue.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\nimport \"./IGovernor.sol\";\n\n/**\n * @dev Core of the governance system, designed to be extended though various modules.\n *\n * This contract is abstract and requires several functions to be implemented in various modules:\n *\n * - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\n * - A voting module must implement {_getVotes}\n * - Additionally, {votingPeriod} must also be implemented\n *\n * _Available since v4.3._\n */\nabstract contract Governor is Context, ERC165, EIP712, IGovernor, IERC721Receiver, IERC1155Receiver {\n    using DoubleEndedQueue for DoubleEndedQueue.Bytes32Deque;\n\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\n    bytes32 public constant EXTENDED_BALLOT_TYPEHASH =\n        keccak256(\"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\");\n\n    // solhint-disable var-name-mixedcase\n    struct ProposalCore {\n        // --- start retyped from Timers.BlockNumber at offset 0x00 ---\n        uint64 voteStart;\n        address proposer;\n        bytes4 __gap_unused0;\n        // --- start retyped from Timers.BlockNumber at offset 0x20 ---\n        uint64 voteEnd;\n        bytes24 __gap_unused1;\n        // --- Remaining fields starting at offset 0x40 ---------------\n        bool executed;\n        bool canceled;\n    }\n    // solhint-enable var-name-mixedcase\n\n    string private _name;\n\n    /// @custom:oz-retyped-from mapping(uint256 => Governor.ProposalCore)\n    mapping(uint256 => ProposalCore) private _proposals;\n\n    // This queue keeps track of the governor operating on itself. Calls to functions protected by the\n    // {onlyGovernance} modifier needs to be whitelisted in this queue. Whitelisting is set in {_beforeExecute},\n    // consumed by the {onlyGovernance} modifier and eventually reset in {_afterExecute}. This ensures that the\n    // execution of {onlyGovernance} protected calls can only be achieved through successful proposals.\n    DoubleEndedQueue.Bytes32Deque private _governanceCall;\n\n    /**\n     * @dev Restricts a function so it can only be executed through governance proposals. For example, governance\n     * parameter setters in {GovernorSettings} are protected using this modifier.\n     *\n     * The governance executing address may be different from the Governor's own address, for example it could be a\n     * timelock. This can be customized by modules by overriding {_executor}. The executor is only able to invoke these\n     * functions during the execution of the governor's {execute} function, and not under any other circumstances. Thus,\n     * for example, additional timelock proposers are not able to change governance parameters without going through the\n     * governance protocol (since v4.6).\n     */\n    modifier onlyGovernance() {\n        require(_msgSender() == _executor(), \"Governor: onlyGovernance\");\n        if (_executor() != address(this)) {\n            bytes32 msgDataHash = keccak256(_msgData());\n            // loop until popping the expected operation - throw if deque is empty (operation not authorized)\n            while (_governanceCall.popFront() != msgDataHash) {}\n        }\n        _;\n    }\n\n    /**\n     * @dev Sets the value for {name} and {version}\n     */\n    constructor(string memory name_) EIP712(name_, version()) {\n        _name = name_;\n    }\n\n    /**\n     * @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)\n     */\n    receive() external payable virtual {\n        require(_executor() == address(this), \"Governor: must send to executor\");\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        bytes4 governorCancelId = this.cancel.selector ^ this.proposalProposer.selector;\n\n        bytes4 governorParamsId = this.castVoteWithReasonAndParams.selector ^\n            this.castVoteWithReasonAndParamsBySig.selector ^\n            this.getVotesWithParams.selector;\n\n        // The original interface id in v4.3.\n        bytes4 governor43Id = type(IGovernor).interfaceId ^\n            type(IERC6372).interfaceId ^\n            governorCancelId ^\n            governorParamsId;\n\n        // An updated interface id in v4.6, with params added.\n        bytes4 governor46Id = type(IGovernor).interfaceId ^ type(IERC6372).interfaceId ^ governorCancelId;\n\n        // For the updated interface id in v4.9, we use governorCancelId directly.\n\n        return\n            interfaceId == governor43Id ||\n            interfaceId == governor46Id ||\n            interfaceId == governorCancelId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IGovernor-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IGovernor-version}.\n     */\n    function version() public view virtual override returns (string memory) {\n        return \"1\";\n    }\n\n    /**\n     * @dev See {IGovernor-hashProposal}.\n     *\n     * The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array\n     * and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\n     * can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\n     * advance, before the proposal is submitted.\n     *\n     * Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\n     * same proposal (with same operation and same description) will have the same id if submitted on multiple governors\n     * across multiple networks. This also means that in order to execute the same operation twice (on the same\n     * governor) the proposer will have to change the description in order to avoid proposal id conflicts.\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual override returns (uint256) {\n        return uint256(keccak256(abi.encode(targets, values, calldatas, descriptionHash)));\n    }\n\n    /**\n     * @dev See {IGovernor-state}.\n     */\n    function state(uint256 proposalId) public view virtual override returns (ProposalState) {\n        ProposalCore storage proposal = _proposals[proposalId];\n\n        if (proposal.executed) {\n            return ProposalState.Executed;\n        }\n\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        }\n\n        uint256 snapshot = proposalSnapshot(proposalId);\n\n        if (snapshot == 0) {\n            revert(\"Governor: unknown proposal id\");\n        }\n\n        uint256 currentTimepoint = clock();\n\n        if (snapshot >= currentTimepoint) {\n            return ProposalState.Pending;\n        }\n\n        uint256 deadline = proposalDeadline(proposalId);\n\n        if (deadline >= currentTimepoint) {\n            return ProposalState.Active;\n        }\n\n        if (_quorumReached(proposalId) && _voteSucceeded(proposalId)) {\n            return ProposalState.Succeeded;\n        } else {\n            return ProposalState.Defeated;\n        }\n    }\n\n    /**\n     * @dev Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_.\n     */\n    function proposalThreshold() public view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev See {IGovernor-proposalSnapshot}.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteStart;\n    }\n\n    /**\n     * @dev See {IGovernor-proposalDeadline}.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteEnd;\n    }\n\n    /**\n     * @dev Returns the account that created a given proposal.\n     */\n    function proposalProposer(uint256 proposalId) public view virtual override returns (address) {\n        return _proposals[proposalId].proposer;\n    }\n\n    /**\n     * @dev Amount of votes already cast passes the threshold limit.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Is the proposal successful or not.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Get the voting weight of `account` at a specific `timepoint`, for a vote as described by `params`.\n     */\n    function _getVotes(address account, uint256 timepoint, bytes memory params) internal view virtual returns (uint256);\n\n    /**\n     * @dev Register a vote for `proposalId` by `account` with a given `support`, voting `weight` and voting `params`.\n     *\n     * Note: Support is generic and can represent various things depending on the voting system used.\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory params\n    ) internal virtual;\n\n    /**\n     * @dev Default additional encoded parameters used by castVote methods that don't include them\n     *\n     * Note: Should be overridden by specific implementations to use an appropriate value, the\n     * meaning of the additional params, in the context of that implementation\n     */\n    function _defaultParams() internal view virtual returns (bytes memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IGovernor-propose}.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual override returns (uint256) {\n        address proposer = _msgSender();\n        uint256 currentTimepoint = clock();\n\n        require(\n            getVotes(proposer, currentTimepoint - 1) >= proposalThreshold(),\n            \"Governor: proposer votes below proposal threshold\"\n        );\n\n        uint256 proposalId = hashProposal(targets, values, calldatas, keccak256(bytes(description)));\n\n        require(targets.length == values.length, \"Governor: invalid proposal length\");\n        require(targets.length == calldatas.length, \"Governor: invalid proposal length\");\n        require(targets.length > 0, \"Governor: empty proposal\");\n        require(_proposals[proposalId].voteStart == 0, \"Governor: proposal already exists\");\n\n        uint256 snapshot = currentTimepoint + votingDelay();\n        uint256 deadline = snapshot + votingPeriod();\n\n        _proposals[proposalId] = ProposalCore({\n            proposer: proposer,\n            voteStart: SafeCast.toUint64(snapshot),\n            voteEnd: SafeCast.toUint64(deadline),\n            executed: false,\n            canceled: false,\n            __gap_unused0: 0,\n            __gap_unused1: 0\n        });\n\n        emit ProposalCreated(\n            proposalId,\n            proposer,\n            targets,\n            values,\n            new string[](targets.length),\n            calldatas,\n            snapshot,\n            deadline,\n            description\n        );\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-execute}.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual override returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n\n        ProposalState currentState = state(proposalId);\n        require(\n            currentState == ProposalState.Succeeded || currentState == ProposalState.Queued,\n            \"Governor: proposal not successful\"\n        );\n        _proposals[proposalId].executed = true;\n\n        emit ProposalExecuted(proposalId);\n\n        _beforeExecute(proposalId, targets, values, calldatas, descriptionHash);\n        _execute(proposalId, targets, values, calldatas, descriptionHash);\n        _afterExecute(proposalId, targets, values, calldatas, descriptionHash);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-cancel}.\n     */\n    function cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public virtual override returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n        require(state(proposalId) == ProposalState.Pending, \"Governor: too late to cancel\");\n        require(_msgSender() == _proposals[proposalId].proposer, \"Governor: only proposer can cancel\");\n        return _cancel(targets, values, calldatas, descriptionHash);\n    }\n\n    /**\n     * @dev Internal execution mechanism. Can be overridden to implement different execution mechanism\n     */\n    function _execute(\n        uint256 /* proposalId */,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        string memory errorMessage = \"Governor: call reverted without message\";\n        for (uint256 i = 0; i < targets.length; ++i) {\n            (bool success, bytes memory returndata) = targets[i].call{value: values[i]}(calldatas[i]);\n            Address.verifyCallResult(success, returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Hook before execution is triggered.\n     */\n    function _beforeExecute(\n        uint256 /* proposalId */,\n        address[] memory targets,\n        uint256[] memory /* values */,\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            for (uint256 i = 0; i < targets.length; ++i) {\n                if (targets[i] == address(this)) {\n                    _governanceCall.pushBack(keccak256(calldatas[i]));\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook after execution is triggered.\n     */\n    function _afterExecute(\n        uint256 /* proposalId */,\n        address[] memory /* targets */,\n        uint256[] memory /* values */,\n        bytes[] memory /* calldatas */,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            if (!_governanceCall.empty()) {\n                _governanceCall.clear();\n            }\n        }\n    }\n\n    /**\n     * @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\n     * canceled to allow distinguishing it from executed proposals.\n     *\n     * Emits a {IGovernor-ProposalCanceled} event.\n     */\n    function _cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) internal virtual returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n\n        ProposalState currentState = state(proposalId);\n\n        require(\n            currentState != ProposalState.Canceled &&\n                currentState != ProposalState.Expired &&\n                currentState != ProposalState.Executed,\n            \"Governor: proposal not active\"\n        );\n        _proposals[proposalId].canceled = true;\n\n        emit ProposalCanceled(proposalId);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-getVotes}.\n     */\n    function getVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        return _getVotes(account, timepoint, _defaultParams());\n    }\n\n    /**\n     * @dev See {IGovernor-getVotesWithParams}.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 timepoint,\n        bytes memory params\n    ) public view virtual override returns (uint256) {\n        return _getVotes(account, timepoint, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVote}.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReason}.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParams}.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteBySig}.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support))),\n            v,\n            r,\n            s\n        );\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParamsBySig}.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(\n                keccak256(\n                    abi.encode(\n                        EXTENDED_BALLOT_TYPEHASH,\n                        proposalId,\n                        support,\n                        keccak256(bytes(reason)),\n                        keccak256(params)\n                    )\n                )\n            ),\n            v,\n            r,\n            s\n        );\n\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function. Uses the _defaultParams().\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason\n    ) internal virtual returns (uint256) {\n        return _castVote(proposalId, account, support, reason, _defaultParams());\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason,\n        bytes memory params\n    ) internal virtual returns (uint256) {\n        ProposalCore storage proposal = _proposals[proposalId];\n        require(state(proposalId) == ProposalState.Active, \"Governor: vote not currently active\");\n\n        uint256 weight = _getVotes(account, proposal.voteStart, params);\n        _countVote(proposalId, account, support, weight, params);\n\n        if (params.length == 0) {\n            emit VoteCast(account, proposalId, support, weight, reason);\n        } else {\n            emit VoteCastWithParams(account, proposalId, support, weight, reason, params);\n        }\n\n        return weight;\n    }\n\n    /**\n     * @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\n     * is some contract other than the governor itself, like when using a timelock, this function can be invoked\n     * in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\n     * Note that if the executor is simply the governor itself, use of `relay` is redundant.\n     */\n    function relay(address target, uint256 value, bytes calldata data) external payable virtual onlyGovernance {\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        Address.verifyCallResult(success, returndata, \"Governor: relay reverted without message\");\n    }\n\n    /**\n     * @dev Address through which the governor executes action. Will be overloaded by module that execute actions\n     * through another contract such as a timelock.\n     */\n    function _executor() internal view virtual returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155Received}.\n     */\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155BatchReceived}.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"},"@openzeppelin/contracts/governance/IGovernor.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/IGovernor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC165.sol\";\nimport \"../interfaces/IERC6372.sol\";\n\n/**\n * @dev Interface of the {Governor} core.\n *\n * _Available since v4.3._\n */\nabstract contract IGovernor is IERC165, IERC6372 {\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n\n    /**\n     * @dev Emitted when a proposal is created.\n     */\n    event ProposalCreated(\n        uint256 proposalId,\n        address proposer,\n        address[] targets,\n        uint256[] values,\n        string[] signatures,\n        bytes[] calldatas,\n        uint256 voteStart,\n        uint256 voteEnd,\n        string description\n    );\n\n    /**\n     * @dev Emitted when a proposal is canceled.\n     */\n    event ProposalCanceled(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a proposal is executed.\n     */\n    event ProposalExecuted(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a vote is cast without params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     */\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason);\n\n    /**\n     * @dev Emitted when a vote is cast with params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     * `params` are additional encoded parameters. Their interpepretation also depends on the voting module used.\n     */\n    event VoteCastWithParams(\n        address indexed voter,\n        uint256 proposalId,\n        uint8 support,\n        uint256 weight,\n        string reason,\n        bytes params\n    );\n\n    /**\n     * @notice module:core\n     * @dev Name of the governor instance (used in building the ERC712 domain separator).\n     */\n    function name() public view virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \"1\"\n     */\n    function version() public view virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev See {IERC6372}\n     */\n    function clock() public view virtual override returns (uint48);\n\n    /**\n     * @notice module:core\n     * @dev See EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory);\n\n    /**\n     * @notice module:voting\n     * @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\n     * be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\n     * key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\n     *\n     * There are 2 standard keys: `support` and `quorum`.\n     *\n     * - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\n     * - `quorum=bravo` means that only For votes are counted towards quorum.\n     * - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\n     *\n     * If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique\n     * name that describes the behavior. For example:\n     *\n     * - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain.\n     * - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote.\n     *\n     * NOTE: The string can be decoded by the standard\n     * https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\n     * JavaScript class.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public view virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Hashing function used to (re)build the proposal id from the proposal details..\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Current state of a proposal, following Compound's convention\n     */\n    function state(uint256 proposalId) public view virtual returns (ProposalState);\n\n    /**\n     * @notice module:core\n     * @dev Timepoint used to retrieve user's votes and quorum. If using block number (as per Compound's Comp), the\n     * snapshot is performed at the end of this block. Hence, voting for this proposal starts at the beginning of the\n     * following block.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Timepoint at which votes close. If using block number, votes close at the end of this block, so it is\n     * possible to cast a vote during this block.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev The account that created a proposal.\n     */\n    function proposalProposer(uint256 proposalId) public view virtual returns (address);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends\n     * on the clock (see EIP-6372) this contract uses.\n     *\n     * This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a\n     * proposal starts.\n     */\n    function votingDelay() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock\n     * (see EIP-6372) this contract uses.\n     *\n     * NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\n     * duration compared to the voting delay.\n     */\n    function votingPeriod() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Minimum number of cast voted required for a proposal to be successful.\n     *\n     * NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the\n     * quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\n     */\n    function quorum(uint256 timepoint) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `timepoint`.\n     *\n     * Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\n     * multiple), {ERC20Votes} tokens.\n     */\n    function getVotes(address account, uint256 timepoint) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `timepoint` given additional encoded parameters.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 timepoint,\n        bytes memory params\n    ) public view virtual returns (uint256);\n\n    /**\n     * @notice module:voting\n     * @dev Returns whether `account` has cast a vote on `proposalId`.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual returns (bool);\n\n    /**\n     * @dev Create a new proposal. Vote start after a delay specified by {IGovernor-votingDelay} and lasts for a\n     * duration specified by {IGovernor-votingPeriod}.\n     *\n     * Emits a {ProposalCreated} event.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\n     * deadline to be reached.\n     *\n     * Emits a {ProposalExecuted} event.\n     *\n     * Note: some module can modify the requirements for execution, for example by adding an additional timelock.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Cancel a proposal. A proposal is cancellable by the proposer, but only while it is Pending state, i.e.\n     * before the vote starts.\n     *\n     * Emits a {ProposalCanceled} event.\n     */\n    function cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Cast a vote\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n     * block, the requested block number must be in the past, excluding the current block.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n     * checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n     * checkpoints.\n     */\n    function getAtProbablyRecentBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        return _insert(self._checkpoints, SafeCast.toUint32(block.number), SafeCast.toUint224(value));\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(\n        History storage self\n    ) internal view returns (bool exists, uint32 _blockNumber, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._blockNumber, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(History storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._blockNumber <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._blockNumber == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint({_blockNumber: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint({_blockNumber: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage self, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._key <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._key <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/DoubleEndedQueue.sol)\npragma solidity ^0.8.4;\n\nimport \"../math/SafeCast.sol\";\n\n/**\n * @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n * the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n * FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n * the existing queue contents are left in storage.\n *\n * The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n * used in storage, and not in memory.\n * ```solidity\n * DoubleEndedQueue.Bytes32Deque queue;\n * ```\n *\n * _Available since v4.6._\n */\nlibrary DoubleEndedQueue {\n    /**\n     * @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty.\n     */\n    error Empty();\n\n    /**\n     * @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\n     */\n    error OutOfBounds();\n\n    /**\n     * @dev Indices are signed integers because the queue can grow in any direction. They are 128 bits so begin and end\n     * are packed in a single storage slot for efficient access. Since the items are added one at a time we can safely\n     * assume that these 128-bit indices will not overflow, and use unchecked arithmetic.\n     *\n     * Struct members have an underscore prefix indicating that they are \"private\" and should not be read or written to\n     * directly. Use the functions provided below instead. Modifying the struct manually may violate assumptions and\n     * lead to unexpected behavior.\n     *\n     * Indices are in the range [begin, end) which means the first item is at data[begin] and the last item is at\n     * data[end - 1].\n     */\n    struct Bytes32Deque {\n        int128 _begin;\n        int128 _end;\n        mapping(int128 => bytes32) _data;\n    }\n\n    /**\n     * @dev Inserts an item at the end of the queue.\n     */\n    function pushBack(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 backIndex = deque._end;\n        deque._data[backIndex] = value;\n        unchecked {\n            deque._end = backIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Removes the item at the end of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popBack(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        value = deque._data[backIndex];\n        delete deque._data[backIndex];\n        deque._end = backIndex;\n    }\n\n    /**\n     * @dev Inserts an item at the beginning of the queue.\n     */\n    function pushFront(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 frontIndex;\n        unchecked {\n            frontIndex = deque._begin - 1;\n        }\n        deque._data[frontIndex] = value;\n        deque._begin = frontIndex;\n    }\n\n    /**\n     * @dev Removes the item at the beginning of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popFront(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        value = deque._data[frontIndex];\n        delete deque._data[frontIndex];\n        unchecked {\n            deque._begin = frontIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Returns the item at the beginning of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function front(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        return deque._data[frontIndex];\n    }\n\n    /**\n     * @dev Returns the item at the end of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function back(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        return deque._data[backIndex];\n    }\n\n    /**\n     * @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n     * `length(deque) - 1`.\n     *\n     * Reverts with `OutOfBounds` if the index is out of bounds.\n     */\n    function at(Bytes32Deque storage deque, uint256 index) internal view returns (bytes32 value) {\n        // int256(deque._begin) is a safe upcast\n        int128 idx = SafeCast.toInt128(int256(deque._begin) + SafeCast.toInt256(index));\n        if (idx >= deque._end) revert OutOfBounds();\n        return deque._data[idx];\n    }\n\n    /**\n     * @dev Resets the queue back to being empty.\n     *\n     * NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n     * out on potential gas refunds.\n     */\n    function clear(Bytes32Deque storage deque) internal {\n        deque._begin = 0;\n        deque._end = 0;\n    }\n\n    /**\n     * @dev Returns the number of items in the queue.\n     */\n    function length(Bytes32Deque storage deque) internal view returns (uint256) {\n        // The interface preserves the invariant that begin <= end so we assume this will not overflow.\n        // We also assume there are at most int256.max items in the queue.\n        unchecked {\n            return uint256(int256(deque._end) - int256(deque._begin));\n        }\n    }\n\n    /**\n     * @dev Returns true if the queue is empty.\n     */\n    function empty(Bytes32Deque storage deque) internal view returns (bool) {\n        return deque._end <= deque._begin;\n    }\n}\n"},"contracts/SinDAO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/governance/Governor.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract SinDAO is\n    Governor,\n    GovernorSettings,\n    GovernorCountingSimple,\n    GovernorVotes,\n    GovernorVotesQuorumFraction,\n    AccessControl\n{\n    using Counters for Counters.Counter;\n    enum MonthlyPaymentStatusEnum {\n        GENERATED,\n        OPEN,\n        PAYED,\n        OWNED\n    }\n    enum SpaceStatusEnum {\n        AVAILABLE,\n        REFORMING,\n        UNAVAILABLE,\n        DESCONTINUED\n    }\n    bytes32 public constant USER_ROLE = keccak256(\"USER_ROLE\");\n    bytes32 public constant CARETAKER_ROLE = keccak256(\"CARETAKER_ROLE\");\n    bytes32 public constant MODERATOR_ROLE = keccak256(\"MODERATOR_ROLE\");\n\n    struct User {\n        string name;\n        bool active;\n        bool canInteract;\n        // how to get owned and deleguee apartments?\n    }\n\n    struct Sale {\n        string description;\n        uint256 value;\n        string referenceUrl;\n    }\n\n    struct MoneyMovement {\n        string description;\n        uint256 value;\n        address payee;\n        address receiver;\n    }\n\n    struct Reservation {\n        uint256 apartment;\n        uint256 spaceId;\n        uint date;\n        uint256 value;\n    }\n\n    struct Space {\n        string name;\n        string description;\n        Reservation[] reservations;\n        uint256 reservationValue;\n        SpaceStatusEnum status;\n    }\n\n    struct MonthlyPayment {\n        MoneyMovement[] bills;\n        MonthlyPaymentStatusEnum status;\n        address payee;\n    }\n\n    MoneyMovement[] public bills;\n    MoneyMovement[] public archivedBills;\n    mapping(address => User) public users;\n    Counters.Counter private _spaceIdCounter;\n    mapping(uint256 => Space) public spaces;\n    mapping(uint256 => mapping(uint => MonthlyPayment))\n        public apartamentToDateToMonthlyPayments;\n    mapping(uint => mapping(uint256 => MonthlyPayment))\n        public dateToApartamentToMonthlyPayments;\n    address private _stableCoinAddress;\n    address private _pollingTokenAddress;\n\n    constructor(IVotes _token)\n    Governor(\"SinDAO\")\n    GovernorSettings(7200 /* 1 day */, 50400 /* 1 week */, 0)\n    GovernorVotes(_token)\n    GovernorVotesQuorumFraction(4)\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n    \n\n    // The following functions are overrides required by Solidity.\n\n    function votingDelay()\n        public\n        view\n        override(IGovernor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.votingDelay();\n    }\n\n    function votingPeriod()\n        public\n        view\n        override(IGovernor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.votingPeriod();\n    }\n\n    function quorum(\n        uint256 blockNumber\n    )\n        public\n        view\n        override(IGovernor, GovernorVotesQuorumFraction)\n        returns (uint256)\n    {\n        return super.quorum(blockNumber);\n    }\n\n    function proposalThreshold()\n        public\n        view\n        override(Governor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.proposalThreshold();\n    }\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view override(AccessControl, Governor) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[4937],"ERC165":[6160],"IAccessControl":[388],"IERC165":[6172],"Math":[7038],"SignedMath":[8684],"Strings":[5566]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":4938,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":5567,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":6161,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4937,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":6160,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,6160,6172,388,4937],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[6159],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6159,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5566_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":5540,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5566_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":5520,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/governance/Governor.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","exportedSymbols":{"Address":[3374],"Context":[4937],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":1801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../token/ERC721/IERC721Receiver.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":3045,"src":"132:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../token/ERC1155/IERC1155Receiver.sol","id":392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":3027,"src":"178:47:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../utils/cryptography/ECDSA.sol","id":393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":5933,"src":"226:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../utils/cryptography/EIP712.sol","id":394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":6137,"src":"268:42:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":6161,"src":"311:43:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../utils/math/SafeCast.sol","id":396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":8580,"src":"355:36:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","file":"../utils/structs/DoubleEndedQueue.sol","id":397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":9026,"src":"392:47:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":3375,"src":"440:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":4938,"src":"471:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/IGovernor.sol","file":"./IGovernor.sol","id":400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1801,"sourceUnit":2140,"src":"502:25:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":402,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":4937,"src":"995:7:2"},"id":403,"nodeType":"InheritanceSpecifier","src":"995:7:2"},{"baseName":{"id":404,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":6160,"src":"1004:6:2"},"id":405,"nodeType":"InheritanceSpecifier","src":"1004:6:2"},{"baseName":{"id":406,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"1012:6:2"},"id":407,"nodeType":"InheritanceSpecifier","src":"1012:6:2"},{"baseName":{"id":408,"name":"IGovernor","nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"1020:9:2"},"id":409,"nodeType":"InheritanceSpecifier","src":"1020:9:2"},{"baseName":{"id":410,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":3044,"src":"1031:15:2"},"id":411,"nodeType":"InheritanceSpecifier","src":"1031:15:2"},{"baseName":{"id":412,"name":"IERC1155Receiver","nodeType":"IdentifierPath","referencedDeclaration":3026,"src":"1048:16:2"},"id":413,"nodeType":"InheritanceSpecifier","src":"1048:16:2"}],"canonicalName":"Governor","contractDependencies":[],"contractKind":"contract","documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"529:435:2","text":" @dev Core of the governance system, designed to be extended though various modules.\n This contract is abstract and requires several functions to be implemented in various modules:\n - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\n - A voting module must implement {_getVotes}\n - Additionally, {votingPeriod} must also be implemented\n _Available since v4.3._"},"fullyImplemented":false,"id":1800,"linearizedBaseContracts":[1800,3026,3044,2139,2985,6136,2961,6160,6172,4937],"name":"Governor","nameLocation":"983:8:2","nodeType":"ContractDefinition","nodes":[{"id":417,"libraryName":{"id":414,"name":"DoubleEndedQueue","nodeType":"IdentifierPath","referencedDeclaration":9025,"src":"1077:16:2"},"nodeType":"UsingForDirective","src":"1071:57:2","typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"1098:29:2"},"referencedDeclaration":8703,"src":"1098:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},{"constant":true,"functionSelector":"deaaa7cc","id":422,"mutability":"constant","name":"BALLOT_TYPEHASH","nameLocation":"1158:15:2","nodeType":"VariableDeclaration","scope":1800,"src":"1134:95:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1134:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"42616c6c6f742875696e743235362070726f706f73616c49642c75696e743820737570706f727429","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1186:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f","typeString":"literal_string \"Ballot(uint256 proposalId,uint8 support)\""},"value":"Ballot(uint256 proposalId,uint8 support)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f","typeString":"literal_string \"Ballot(uint256 proposalId,uint8 support)\""}],"id":419,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1176:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2fe3e261","id":427,"mutability":"constant","name":"EXTENDED_BALLOT_TYPEHASH","nameLocation":"1259:24:2","nodeType":"VariableDeclaration","scope":1800,"src":"1235:147:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"457874656e64656442616c6c6f742875696e743235362070726f706f73616c49642c75696e743820737570706f72742c737472696e6720726561736f6e2c627974657320706172616d7329","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1304:77:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88","typeString":"literal_string \"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\""},"value":"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88","typeString":"literal_string \"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\""}],"id":424,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1294:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1294:88:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"Governor.ProposalCore","id":442,"members":[{"constant":false,"id":429,"mutability":"mutable","name":"voteStart","nameLocation":"1540:9:2","nodeType":"VariableDeclaration","scope":442,"src":"1533:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":428,"name":"uint64","nodeType":"ElementaryTypeName","src":"1533:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"proposer","nameLocation":"1567:8:2","nodeType":"VariableDeclaration","scope":442,"src":"1559:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"__gap_unused0","nameLocation":"1592:13:2","nodeType":"VariableDeclaration","scope":442,"src":"1585:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":432,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1585:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"voteEnd","nameLocation":"1694:7:2","nodeType":"VariableDeclaration","scope":442,"src":"1687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":434,"name":"uint64","nodeType":"ElementaryTypeName","src":"1687:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"__gap_unused1","nameLocation":"1719:13:2","nodeType":"VariableDeclaration","scope":442,"src":"1711:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes24","typeString":"bytes24"},"typeName":{"id":436,"name":"bytes24","nodeType":"ElementaryTypeName","src":"1711:7:2","typeDescriptions":{"typeIdentifier":"t_bytes24","typeString":"bytes24"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"executed","nameLocation":"1819:8:2","nodeType":"VariableDeclaration","scope":442,"src":"1814:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":438,"name":"bool","nodeType":"ElementaryTypeName","src":"1814:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"canceled","nameLocation":"1842:8:2","nodeType":"VariableDeclaration","scope":442,"src":"1837:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"1837:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ProposalCore","nameLocation":"1438:12:2","nodeType":"StructDefinition","scope":1800,"src":"1431:426:2","visibility":"public"},{"constant":false,"id":444,"mutability":"mutable","name":"_name","nameLocation":"1919:5:2","nodeType":"VariableDeclaration","scope":1800,"src":"1904:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":443,"name":"string","nodeType":"ElementaryTypeName","src":"1904:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"1931:69:2","text":"@custom:oz-retyped-from mapping(uint256 => Governor.ProposalCore)"},"id":450,"mutability":"mutable","name":"_proposals","nameLocation":"2046:10:2","nodeType":"VariableDeclaration","scope":1800,"src":"2005:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore)"},"typeName":{"id":449,"keyType":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2005:32:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore)"},"valueType":{"id":448,"nodeType":"UserDefinedTypeName","pathNode":{"id":447,"name":"ProposalCore","nodeType":"IdentifierPath","referencedDeclaration":442,"src":"2024:12:2"},"referencedDeclaration":442,"src":"2024:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore"}}},"visibility":"private"},{"constant":false,"id":453,"mutability":"mutable","name":"_governanceCall","nameLocation":"2533:15:2","nodeType":"VariableDeclaration","scope":1800,"src":"2495:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":452,"nodeType":"UserDefinedTypeName","pathNode":{"id":451,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"2495:29:2"},"referencedDeclaration":8703,"src":"2495:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"private"},{"body":{"id":489,"nodeType":"Block","src":"3319:378:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"3337:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":459,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3353:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3353:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3337:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a206f6e6c79476f7665726e616e6365","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3366:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","typeString":"literal_string \"Governor: onlyGovernance\""},"value":"Governor: onlyGovernance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","typeString":"literal_string \"Governor: onlyGovernance\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3329:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3329:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"3329:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":465,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3407:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":469,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3430:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3422:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"3422:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3422:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3407:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":487,"nodeType":"IfStatement","src":"3403:277:2","trueBody":{"id":486,"nodeType":"Block","src":"3437:243:2","statements":[{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"msgDataHash","nameLocation":"3459:11:2","nodeType":"VariableDeclaration","scope":486,"src":"3451:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3451:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":478,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":475,"name":"_msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"3483:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3483:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":474,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3473:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3473:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3451:43:2"},{"body":{"id":484,"nodeType":"Block","src":"3668:2:2","statements":[]},"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":479,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3625:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"popFront","nodeType":"MemberAccess","referencedDeclaration":8861,"src":"3625:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$8703_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3625:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":482,"name":"msgDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"3655:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3625:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":485,"nodeType":"WhileStatement","src":"3618:52:2"}]}},{"id":488,"nodeType":"PlaceholderStatement","src":"3689:1:2"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2555:733:2","text":" @dev Restricts a function so it can only be executed through governance proposals. For example, governance\n parameter setters in {GovernorSettings} are protected using this modifier.\n The governance executing address may be different from the Governor's own address, for example it could be a\n timelock. This can be customized by modules by overriding {_executor}. The executor is only able to invoke these\n functions during the execution of the governor's {execute} function, and not under any other circumstances. Thus,\n for example, additional timelock proposers are not able to change governance parameters without going through the\n governance protocol (since v4.6)."},"id":490,"name":"onlyGovernance","nameLocation":"3302:14:2","nodeType":"ModifierDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"3316:2:2"},"src":"3293:404:2","virtual":false,"visibility":"internal"},{"body":{"id":505,"nodeType":"Block","src":"3829:30:2","statements":[{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":501,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3839:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":502,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3847:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3839:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":504,"nodeType":"ExpressionStatement","src":"3839:13:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3703:63:2","text":" @dev Sets the value for {name} and {version}"},"id":506,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":496,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3811:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":497,"name":"version","nodeType":"Identifier","overloadedDeclarations":[632],"referencedDeclaration":632,"src":"3818:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":499,"kind":"baseConstructorSpecifier","modifierName":{"id":495,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"3804:6:2"},"nodeType":"ModifierInvocation","src":"3804:24:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"name_","nameLocation":"3797:5:2","nodeType":"VariableDeclaration","scope":506,"src":"3783:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":492,"name":"string","nodeType":"ElementaryTypeName","src":"3783:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3782:21:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3829:0:2"},"scope":1800,"src":"3771:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"4038:89:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4056:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4056:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4079:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4071:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"4071:7:2","typeDescriptions":{}}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4071:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4056:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a206d7573742073656e6420746f206578656375746f72","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4086:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d2e29ce59569b0aa60766c059f36bf339acf9681f1221eaac1078daa5d3d129","typeString":"literal_string \"Governor: must send to executor\""},"value":"Governor: must send to executor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d2e29ce59569b0aa60766c059f36bf339acf9681f1221eaac1078daa5d3d129","typeString":"literal_string \"Governor: must send to executor\""}],"id":510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4048:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4048:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"4048:72:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"3865:133:2","text":" @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)"},"id":522,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[],"src":"4010:2:2"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"4038:0:2"},"scope":1800,"src":"4003:124:2","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[6159,6171],"body":{"id":611,"nodeType":"Block","src":"4302:1010:2","statements":[{"assignments":[534],"declarations":[{"constant":false,"id":534,"mutability":"mutable","name":"governorCancelId","nameLocation":"4319:16:2","nodeType":"VariableDeclaration","scope":611,"src":"4312:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":533,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4312:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":542,"initialValue":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4338:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cancel","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"4338:11:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) external returns (uint256)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4338:20:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4361:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposalProposer","nodeType":"MemberAccess","referencedDeclaration":808,"src":"4361:21:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4361:30:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4338:53:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4312:79:2"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"governorParamsId","nameLocation":"4409:16:2","nodeType":"VariableDeclaration","scope":611,"src":"4402:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":543,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4402:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":556,"initialValue":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":545,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4428:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"castVoteWithReasonAndParams","nodeType":"MemberAccess","referencedDeclaration":1486,"src":"4428:32:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint8,string memory,bytes memory) external returns (uint256)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4428:41:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":548,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4484:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"castVoteWithReasonAndParamsBySig","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"4484:37:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (uint256,uint8,string memory,bytes memory,uint8,bytes32,bytes32) external returns (uint256)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4484:46:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4428:102:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4545:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getVotesWithParams","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"4545:23:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view external returns (uint256)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4545:32:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4428:149:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4402:175:2"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"governor43Id","nameLocation":"4641:12:2","nodeType":"VariableDeclaration","scope":611,"src":"4634:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":557,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4634:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":572,"initialValue":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":560,"name":"IGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4661:9:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGovernor_$2139_$","typeString":"type(contract IGovernor)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IGovernor_$2139_$","typeString":"type(contract IGovernor)"}],"id":559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4656:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4656:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IGovernor_$2139","typeString":"type(contract IGovernor)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"4656:27:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"arguments":[{"id":564,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4703:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6372_$2985_$","typeString":"type(contract IERC6372)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6372_$2985_$","typeString":"type(contract IERC6372)"}],"id":563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4698:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4698:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6372_$2985","typeString":"type(contract IERC6372)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"4698:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4656:68:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":568,"name":"governorCancelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4739:16:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4656:99:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":570,"name":"governorParamsId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4770:16:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4656:130:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4634:152:2"},{"assignments":[574],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"governor46Id","nameLocation":"4867:12:2","nodeType":"VariableDeclaration","scope":611,"src":"4860:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":573,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4860:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":586,"initialValue":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":576,"name":"IGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4887:9:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGovernor_$2139_$","typeString":"type(contract IGovernor)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IGovernor_$2139_$","typeString":"type(contract IGovernor)"}],"id":575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4882:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4882:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IGovernor_$2139","typeString":"type(contract IGovernor)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"4882:27:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"arguments":[{"id":580,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4917:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6372_$2985_$","typeString":"type(contract IERC6372)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6372_$2985_$","typeString":"type(contract IERC6372)"}],"id":579,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4912:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4912:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6372_$2985","typeString":"type(contract IERC6372)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"4912:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4882:56:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":584,"name":"governorCancelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4941:16:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4882:75:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4860:97:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5071:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":588,"name":"governor43Id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5086:12:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5071:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5114:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":591,"name":"governor46Id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5129:12:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5114:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5071:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5157:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":595,"name":"governorCancelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"5172:16:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5157:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5071:117:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5204:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":600,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5224:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3026_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3026_$","typeString":"type(contract IERC1155Receiver)"}],"id":599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5219:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5219:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$3026","typeString":"type(contract IERC1155Receiver)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"5219:34:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5204:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5071:182:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":607,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5293:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":605,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5269:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Governor_$1800_$","typeString":"type(contract super Governor)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6159,"src":"5269:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5269:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5071:234:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":532,"id":610,"nodeType":"Return","src":"5052:253:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"4133:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4203:17:2","nodeType":"FunctionDefinition","overrides":{"id":529,"nodeType":"OverrideSpecifier","overrides":[{"id":527,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":6172,"src":"4270:7:2"},{"id":528,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":6160,"src":"4279:6:2"}],"src":"4261:25:2"},"parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"interfaceId","nameLocation":"4228:11:2","nodeType":"VariableDeclaration","scope":612,"src":"4221:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":524,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4221:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4220:20:2"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"4296:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":530,"name":"bool","nodeType":"ElementaryTypeName","src":"4296:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4295:6:2"},"scope":1800,"src":"4194:1118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1887],"body":{"id":621,"nodeType":"Block","src":"5437:29:2","statements":[{"expression":{"id":619,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5454:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":618,"id":620,"nodeType":"Return","src":"5447:12:2"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"5318:45:2","text":" @dev See {IGovernor-name}."},"functionSelector":"06fdde03","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"5377:4:2","nodeType":"FunctionDefinition","overrides":{"id":615,"nodeType":"OverrideSpecifier","overrides":[],"src":"5404:8:2"},"parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"5381:2:2"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":622,"src":"5422:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":616,"name":"string","nodeType":"ElementaryTypeName","src":"5422:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5421:15:2"},"scope":1800,"src":"5368:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1893],"body":{"id":631,"nodeType":"Block","src":"5597:27:2","statements":[{"expression":{"hexValue":"31","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5614:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"},"functionReturnParameters":628,"id":630,"nodeType":"Return","src":"5607:10:2"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"5472:48:2","text":" @dev See {IGovernor-version}."},"functionSelector":"54fd4d50","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"5534:7:2","nodeType":"FunctionDefinition","overrides":{"id":625,"nodeType":"OverrideSpecifier","overrides":[],"src":"5564:8:2"},"parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"5541:2:2"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"5582:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":626,"name":"string","nodeType":"ElementaryTypeName","src":"5582:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5581:15:2"},"scope":1800,"src":"5525:99:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1930],"body":{"id":663,"nodeType":"Block","src":"6778:99:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":655,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"6824:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":656,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"6833:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":657,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6841:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":658,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6852:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":653,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6813:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6813:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6813:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":652,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6803:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6795:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6795:7:2","typeDescriptions":{}}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6795:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":649,"id":662,"nodeType":"Return","src":"6788:82:2"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"5630:934:2","text":" @dev See {IGovernor-hashProposal}.\n The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array\n and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\n can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\n advance, before the proposal is submitted.\n Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\n same proposal (with same operation and same description) will have the same id if submitted on multiple governors\n across multiple networks. This also means that in order to execute the same operation twice (on the same\n governor) the proposer will have to change the description in order to avoid proposal id conflicts."},"functionSelector":"c59057e4","id":664,"implemented":true,"kind":"function","modifiers":[],"name":"hashProposal","nameLocation":"6578:12:2","nodeType":"FunctionDefinition","overrides":{"id":646,"nodeType":"OverrideSpecifier","overrides":[],"src":"6751:8:2"},"parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"targets","nameLocation":"6617:7:2","nodeType":"VariableDeclaration","scope":664,"src":"6600:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":635,"nodeType":"ArrayTypeName","src":"6600:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"values","nameLocation":"6651:6:2","nodeType":"VariableDeclaration","scope":664,"src":"6634:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"6634:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ArrayTypeName","src":"6634:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"calldatas","nameLocation":"6682:9:2","nodeType":"VariableDeclaration","scope":664,"src":"6667:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":640,"name":"bytes","nodeType":"ElementaryTypeName","src":"6667:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":641,"nodeType":"ArrayTypeName","src":"6667:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"descriptionHash","nameLocation":"6709:15:2","nodeType":"VariableDeclaration","scope":664,"src":"6701:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6701:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6590:140:2"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"6769:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6768:9:2"},"scope":1800,"src":"6569:308:2","stateMutability":"pure","virtual":true,"visibility":"public"},{"baseFunctions":[1939],"body":{"id":753,"nodeType":"Block","src":"7022:879:2","statements":[{"assignments":[676],"declarations":[{"constant":false,"id":676,"mutability":"mutable","name":"proposal","nameLocation":"7053:8:2","nodeType":"VariableDeclaration","scope":753,"src":"7032:29:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore"},"typeName":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"ProposalCore","nodeType":"IdentifierPath","referencedDeclaration":442,"src":"7032:12:2"},"referencedDeclaration":442,"src":"7032:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore"}},"visibility":"internal"}],"id":680,"initialValue":{"baseExpression":{"id":677,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7064:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":679,"indexExpression":{"id":678,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7075:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7064:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7032:54:2"},{"condition":{"expression":{"id":681,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"7101:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":439,"src":"7101:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"nodeType":"IfStatement","src":"7097:77:2","trueBody":{"id":686,"nodeType":"Block","src":"7120:54:2","statements":[{"expression":{"expression":{"id":683,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7141:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Executed","nodeType":"MemberAccess","referencedDeclaration":1817,"src":"7141:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":685,"nodeType":"Return","src":"7134:29:2"}]}},{"condition":{"expression":{"id":688,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"7188:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"canceled","nodeType":"MemberAccess","referencedDeclaration":441,"src":"7188:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"7184:77:2","trueBody":{"id":693,"nodeType":"Block","src":"7207:54:2","statements":[{"expression":{"expression":{"id":690,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7228:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"7228:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":692,"nodeType":"Return","src":"7221:29:2"}]}},{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"snapshot","nameLocation":"7279:8:2","nodeType":"VariableDeclaration","scope":753,"src":"7271:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"7271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"initialValue":{"arguments":[{"id":698,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7307:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"proposalSnapshot","nodeType":"Identifier","overloadedDeclarations":[778],"referencedDeclaration":778,"src":"7290:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7290:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7271:47:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7333:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7345:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7333:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"7329:83:2","trueBody":{"id":708,"nodeType":"Block","src":"7348:64:2","statements":[{"expression":{"arguments":[{"hexValue":"476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7369:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","typeString":"literal_string \"Governor: unknown proposal id\""},"value":"Governor: unknown proposal id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","typeString":"literal_string \"Governor: unknown proposal id\""}],"id":704,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7362:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7362:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"7362:39:2"}]}},{"assignments":[711],"declarations":[{"constant":false,"id":711,"mutability":"mutable","name":"currentTimepoint","nameLocation":"7430:16:2","nodeType":"VariableDeclaration","scope":753,"src":"7422:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"7422:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":712,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7449:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7449:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"7422:34:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7471:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":716,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7483:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7471:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"IfStatement","src":"7467:87:2","trueBody":{"id":721,"nodeType":"Block","src":"7501:53:2","statements":[{"expression":{"expression":{"id":718,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7522:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"7522:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":720,"nodeType":"Return","src":"7515:28:2"}]}},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"deadline","nameLocation":"7572:8:2","nodeType":"VariableDeclaration","scope":753,"src":"7564:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"7564:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":728,"initialValue":{"arguments":[{"id":726,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7600:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":725,"name":"proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[793],"referencedDeclaration":793,"src":"7583:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7583:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7564:47:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7626:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":730,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7638:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7626:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"nodeType":"IfStatement","src":"7622:86:2","trueBody":{"id":735,"nodeType":"Block","src":"7656:52:2","statements":[{"expression":{"expression":{"id":732,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7677:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1811,"src":"7677:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":734,"nodeType":"Return","src":"7670:27:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":738,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7737:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":737,"name":"_quorumReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7722:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7722:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":741,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7767:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"_voteSucceeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7752:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7752:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7722:56:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":751,"nodeType":"Block","src":"7841:54:2","statements":[{"expression":{"expression":{"id":748,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7862:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Defeated","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"7862:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":750,"nodeType":"Return","src":"7855:29:2"}]},"id":752,"nodeType":"IfStatement","src":"7718:177:2","trueBody":{"id":747,"nodeType":"Block","src":"7780:55:2","statements":[{"expression":{"expression":{"id":744,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7801:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Succeeded","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"7801:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":673,"id":746,"nodeType":"Return","src":"7794:30:2"}]}}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"6883:46:2","text":" @dev See {IGovernor-state}."},"functionSelector":"3e4f49e6","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"state","nameLocation":"6943:5:2","nodeType":"FunctionDefinition","overrides":{"id":669,"nodeType":"OverrideSpecifier","overrides":[],"src":"6989:8:2"},"parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"proposalId","nameLocation":"6957:10:2","nodeType":"VariableDeclaration","scope":754,"src":"6949:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"6949:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6948:20:2"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"7007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":671,"nodeType":"UserDefinedTypeName","pathNode":{"id":670,"name":"ProposalState","nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"7007:13:2"},"referencedDeclaration":1818,"src":"7007:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"src":"7006:15:2"},"scope":1800,"src":"6934:967:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":762,"nodeType":"Block","src":"8118:25:2","statements":[{"expression":{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8135:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":759,"id":761,"nodeType":"Return","src":"8128:8:2"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"7907:139:2","text":" @dev Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."},"functionSelector":"b58131b0","id":763,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"8060:17:2","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"8077:2:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"8109:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"8109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8108:9:2"},"scope":1800,"src":"8051:92:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1947],"body":{"id":777,"nodeType":"Block","src":"8304:56:2","statements":[{"expression":{"expression":{"baseExpression":{"id":772,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8321:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":774,"indexExpression":{"id":773,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"8332:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":429,"src":"8321:32:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":771,"id":776,"nodeType":"Return","src":"8314:39:2"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"8149:57:2","text":" @dev See {IGovernor-proposalSnapshot}."},"functionSelector":"2d63f693","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"proposalSnapshot","nameLocation":"8220:16:2","nodeType":"FunctionDefinition","overrides":{"id":768,"nodeType":"OverrideSpecifier","overrides":[],"src":"8277:8:2"},"parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"proposalId","nameLocation":"8245:10:2","nodeType":"VariableDeclaration","scope":778,"src":"8237:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"8237:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8236:20:2"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"8295:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"8295:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8294:9:2"},"scope":1800,"src":"8211:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1955],"body":{"id":792,"nodeType":"Block","src":"8521:54:2","statements":[{"expression":{"expression":{"baseExpression":{"id":787,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8538:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":789,"indexExpression":{"id":788,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"8549:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8538:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteEnd","nodeType":"MemberAccess","referencedDeclaration":435,"src":"8538:30:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":786,"id":791,"nodeType":"Return","src":"8531:37:2"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"8366:57:2","text":" @dev See {IGovernor-proposalDeadline}."},"functionSelector":"c01f9e37","id":793,"implemented":true,"kind":"function","modifiers":[],"name":"proposalDeadline","nameLocation":"8437:16:2","nodeType":"FunctionDefinition","overrides":{"id":783,"nodeType":"OverrideSpecifier","overrides":[],"src":"8494:8:2"},"parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"proposalId","nameLocation":"8462:10:2","nodeType":"VariableDeclaration","scope":793,"src":"8454:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8453:20:2"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"8512:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8511:9:2"},"scope":1800,"src":"8428:147:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1963],"body":{"id":807,"nodeType":"Block","src":"8753:55:2","statements":[{"expression":{"expression":{"baseExpression":{"id":802,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8770:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":804,"indexExpression":{"id":803,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8781:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8770:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":431,"src":"8770:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":801,"id":806,"nodeType":"Return","src":"8763:38:2"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"8581:74:2","text":" @dev Returns the account that created a given proposal."},"functionSelector":"143489d0","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"proposalProposer","nameLocation":"8669:16:2","nodeType":"FunctionDefinition","overrides":{"id":798,"nodeType":"OverrideSpecifier","overrides":[],"src":"8726:8:2"},"parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"proposalId","nameLocation":"8694:10:2","nodeType":"VariableDeclaration","scope":808,"src":"8686:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"8686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8685:20:2"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"8744:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8743:9:2"},"scope":1800,"src":"8660:148:2","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"8814:80:2","text":" @dev Amount of votes already cast passes the threshold limit."},"id":816,"implemented":false,"kind":"function","modifiers":[],"name":"_quorumReached","nameLocation":"8908:14:2","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"proposalId","nameLocation":"8931:10:2","nodeType":"VariableDeclaration","scope":816,"src":"8923:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"8923:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8922:20:2"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"8974:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"8974:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8973:6:2"},"scope":1800,"src":"8899:81:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"8986:58:2","text":" @dev Is the proposal successful or not."},"id":824,"implemented":false,"kind":"function","modifiers":[],"name":"_voteSucceeded","nameLocation":"9058:14:2","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"proposalId","nameLocation":"9081:10:2","nodeType":"VariableDeclaration","scope":824,"src":"9073:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"9073:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9072:20:2"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":824,"src":"9124:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":821,"name":"bool","nodeType":"ElementaryTypeName","src":"9124:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9123:6:2"},"scope":1800,"src":"9049:81:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"9136:122:2","text":" @dev Get the voting weight of `account` at a specific `timepoint`, for a vote as described by `params`."},"id":836,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotes","nameLocation":"9272:9:2","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"account","nameLocation":"9290:7:2","nodeType":"VariableDeclaration","scope":836,"src":"9282:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"9282:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"timepoint","nameLocation":"9307:9:2","nodeType":"VariableDeclaration","scope":836,"src":"9299:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"9299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"params","nameLocation":"9331:6:2","nodeType":"VariableDeclaration","scope":836,"src":"9318:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"9318:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9281:57:2"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"9370:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"9370:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9369:9:2"},"scope":1800,"src":"9263:116:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"9385:239:2","text":" @dev Register a vote for `proposalId` by `account` with a given `support`, voting `weight` and voting `params`.\n Note: Support is generic and can represent various things depending on the voting system used."},"id":850,"implemented":false,"kind":"function","modifiers":[],"name":"_countVote","nameLocation":"9638:10:2","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"proposalId","nameLocation":"9666:10:2","nodeType":"VariableDeclaration","scope":850,"src":"9658:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"9658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"account","nameLocation":"9694:7:2","nodeType":"VariableDeclaration","scope":850,"src":"9686:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"9686:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"support","nameLocation":"9717:7:2","nodeType":"VariableDeclaration","scope":850,"src":"9711:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":842,"name":"uint8","nodeType":"ElementaryTypeName","src":"9711:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"weight","nameLocation":"9742:6:2","nodeType":"VariableDeclaration","scope":850,"src":"9734:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"9734:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"params","nameLocation":"9771:6:2","nodeType":"VariableDeclaration","scope":850,"src":"9758:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"9758:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9648:135:2"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"9800:0:2"},"scope":1800,"src":"9629:172:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":858,"nodeType":"Block","src":"10174:26:2","statements":[{"expression":{"hexValue":"","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10191:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":855,"id":857,"nodeType":"Return","src":"10184:9:2"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"9807:291:2","text":" @dev Default additional encoded parameters used by castVote methods that don't include them\n Note: Should be overridden by specific implementations to use an appropriate value, the\n meaning of the additional params, in the context of that implementation"},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"_defaultParams","nameLocation":"10112:14:2","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"10126:2:2"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"10160:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"10160:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10159:14:2"},"scope":1800,"src":"10103:97:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2032],"body":{"id":1003,"nodeType":"Block","src":"10460:1419:2","statements":[{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"proposer","nameLocation":"10478:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"10470:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"10470:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":879,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"10489:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10489:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10470:31:2"},{"assignments":[883],"declarations":[{"constant":false,"id":883,"mutability":"mutable","name":"currentTimepoint","nameLocation":"10519:16:2","nodeType":"VariableDeclaration","scope":1003,"src":"10511:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"10511:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":884,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"10538:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10538:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"10511:34:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":889,"name":"proposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10586:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"10596:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10596:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"name":"getVotes","nodeType":"Identifier","overloadedDeclarations":[1387],"referencedDeclaration":1387,"src":"10577:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10577:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":894,"name":"proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10621:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10621:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10577:63:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73657220766f7465732062656c6f772070726f706f73616c207468726573686f6c64","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10654:51:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","typeString":"literal_string \"Governor: proposer votes below proposal threshold\""},"value":"Governor: proposer votes below proposal threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","typeString":"literal_string \"Governor: proposer votes below proposal threshold\""}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10556:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10556:159:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"10556:159:2"},{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"proposalId","nameLocation":"10734:10:2","nodeType":"VariableDeclaration","scope":1003,"src":"10726:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"10726:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[{"id":903,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10760:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":904,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"10769:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":905,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10777:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"arguments":[{"arguments":[{"id":909,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"10804:11:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10798:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"10798:5:2","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10798:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":906,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10788:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10788:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":902,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[664],"referencedDeclaration":664,"src":"10747:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10747:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10726:92:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":915,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10837:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10837:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":917,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"10855:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10855:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10837:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10870:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""},"value":"Governor: invalid proposal length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""}],"id":914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10829:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"10829:77:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":924,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10924:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10924:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":926,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10942:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10942:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10924:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10960:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""},"value":"Governor: invalid proposal length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""}],"id":923,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10916:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10916:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"10916:80:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":933,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"11014:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11014:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11031:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11014:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20656d7074792070726f706f73616c","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11034:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","typeString":"literal_string \"Governor: empty proposal\""},"value":"Governor: empty proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","typeString":"literal_string \"Governor: empty proposal\""}],"id":932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11006:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11006:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"11006:55:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":941,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"11079:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":943,"indexExpression":{"id":942,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11090:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11079:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":429,"src":"11079:32:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11115:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11079:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c20616c726561647920657869737473","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11118:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","typeString":"literal_string \"Governor: proposal already exists\""},"value":"Governor: proposal already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","typeString":"literal_string \"Governor: proposal already exists\""}],"id":940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11071:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11071:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"11071:83:2"},{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"snapshot","nameLocation":"11173:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"11165:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"11165:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":956,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11184:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":953,"name":"votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"11203:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11184:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11165:51:2"},{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"deadline","nameLocation":"11234:8:2","nodeType":"VariableDeclaration","scope":1003,"src":"11226:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11226:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":963,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11245:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"11256:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11256:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11245:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11226:44:2"},{"expression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":964,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"11281:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":966,"indexExpression":{"id":965,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11292:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11281:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":968,"name":"proposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"11343:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":971,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11394:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":969,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"11376:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":7641,"src":"11376:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$","typeString":"function (uint256) pure returns (uint64)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11376:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"id":975,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11444:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":973,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"11426:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":7641,"src":"11426:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$","typeString":"function (uint256) pure returns (uint64)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11426:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"66616c7365","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11477:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11506:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11540:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11570:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"name":"ProposalCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"11306:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProposalCore_$442_storage_ptr_$","typeString":"type(struct Governor.ProposalCore storage pointer)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["proposer","voteStart","voteEnd","executed","canceled","__gap_unused0","__gap_unused1"],"nodeType":"FunctionCall","src":"11306:276:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_memory_ptr","typeString":"struct Governor.ProposalCore memory"}},"src":"11281:301:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":983,"nodeType":"ExpressionStatement","src":"11281:301:2"},{"eventCall":{"arguments":[{"id":985,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11627:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":986,"name":"proposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"11651:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"11673:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":988,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11694:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"expression":{"id":992,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"11727:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11727:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11714:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":989,"name":"string","nodeType":"ElementaryTypeName","src":"11718:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":990,"nodeType":"ArrayTypeName","src":"11718:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11714:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":995,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"11756:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":996,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11779:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":997,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11801:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":998,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"11823:11:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":984,"name":"ProposalCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"11598:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address[] memory,uint256[] memory,string memory[] memory,bytes memory[] memory,uint256,uint256,string memory)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11598:246:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"EmitStatement","src":"11593:251:2"},{"expression":{"id":1001,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11862:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":876,"id":1002,"nodeType":"Return","src":"11855:17:2"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"10206:48:2","text":" @dev See {IGovernor-propose}."},"functionSelector":"7d5e81e2","id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"propose","nameLocation":"10268:7:2","nodeType":"FunctionDefinition","overrides":{"id":873,"nodeType":"OverrideSpecifier","overrides":[],"src":"10433:8:2"},"parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"targets","nameLocation":"10302:7:2","nodeType":"VariableDeclaration","scope":1004,"src":"10285:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"10285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":862,"nodeType":"ArrayTypeName","src":"10285:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"values","nameLocation":"10336:6:2","nodeType":"VariableDeclaration","scope":1004,"src":"10319:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":865,"nodeType":"ArrayTypeName","src":"10319:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"calldatas","nameLocation":"10367:9:2","nodeType":"VariableDeclaration","scope":1004,"src":"10352:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"10352:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":868,"nodeType":"ArrayTypeName","src":"10352:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"description","nameLocation":"10400:11:2","nodeType":"VariableDeclaration","scope":1004,"src":"10386:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"10386:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10275:142:2"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"10451:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"10451:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10450:9:2"},"scope":1800,"src":"10259:1620:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2049],"body":{"id":1088,"nodeType":"Block","src":"12145:678:2","statements":[{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"proposalId","nameLocation":"12163:10:2","nodeType":"VariableDeclaration","scope":1088,"src":"12155:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"12155:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"arguments":[{"id":1025,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12189:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1026,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12198:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1027,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12206:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1028,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"12217:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1024,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[664],"referencedDeclaration":664,"src":"12176:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12176:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12155:78:2"},{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"currentState","nameLocation":"12258:12:2","nodeType":"VariableDeclaration","scope":1088,"src":"12244:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":1032,"nodeType":"UserDefinedTypeName","pathNode":{"id":1031,"name":"ProposalState","nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"12244:13:2"},"referencedDeclaration":1818,"src":"12244:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"id":1037,"initialValue":{"arguments":[{"id":1035,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12279:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"state","nodeType":"Identifier","overloadedDeclarations":[754],"referencedDeclaration":754,"src":"12273:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1818_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12273:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"VariableDeclarationStatement","src":"12244:46:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"currentState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12321:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1040,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"12337:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Succeeded","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"12337:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"12321:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"currentState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12364:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1044,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"12380:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Queued","nodeType":"MemberAccess","referencedDeclaration":1815,"src":"12380:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"12364:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12321:79:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756c","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12414:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","typeString":"literal_string \"Governor: proposal not successful\""},"value":"Governor: proposal not successful"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","typeString":"literal_string \"Governor: proposal not successful\""}],"id":1038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12300:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12300:159:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"12300:159:2"},{"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1051,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"12469:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":1053,"indexExpression":{"id":1052,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12480:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12469:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":1054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":439,"src":"12469:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12503:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12469:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"nodeType":"ExpressionStatement","src":"12469:38:2"},{"eventCall":{"arguments":[{"id":1059,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12540:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1058,"name":"ProposalExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"12523:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12523:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"EmitStatement","src":"12518:33:2"},{"expression":{"arguments":[{"id":1063,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12577:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1064,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12589:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1065,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12598:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1066,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12606:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1067,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"12617:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1062,"name":"_beforeExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"12562:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12562:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"12562:71:2"},{"expression":{"arguments":[{"id":1071,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12652:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1072,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12664:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1073,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12673:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1074,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12681:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1075,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"12692:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1070,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12643:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12643:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"12643:65:2"},{"expression":{"arguments":[{"id":1079,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12732:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1080,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12744:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1081,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12753:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1082,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12761:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1083,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"12772:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1078,"name":"_afterExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"12718:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12718:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"12718:70:2"},{"expression":{"id":1086,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12806:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1021,"id":1087,"nodeType":"Return","src":"12799:17:2"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"11885:48:2","text":" @dev See {IGovernor-execute}."},"functionSelector":"2656227d","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"11947:7:2","nodeType":"FunctionDefinition","overrides":{"id":1018,"nodeType":"OverrideSpecifier","overrides":[],"src":"12118:8:2"},"parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"targets","nameLocation":"11981:7:2","nodeType":"VariableDeclaration","scope":1089,"src":"11964:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"11964:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1007,"nodeType":"ArrayTypeName","src":"11964:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"values","nameLocation":"12015:6:2","nodeType":"VariableDeclaration","scope":1089,"src":"11998:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ArrayTypeName","src":"11998:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"calldatas","nameLocation":"12046:9:2","nodeType":"VariableDeclaration","scope":1089,"src":"12031:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"12031:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1013,"nodeType":"ArrayTypeName","src":"12031:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"descriptionHash","nameLocation":"12073:15:2","nodeType":"VariableDeclaration","scope":1089,"src":"12065:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12065:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11954:140:2"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"12136:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12135:9:2"},"scope":1800,"src":"11938:885:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[2066],"body":{"id":1144,"nodeType":"Block","src":"13079:361:2","statements":[{"assignments":[1108],"declarations":[{"constant":false,"id":1108,"mutability":"mutable","name":"proposalId","nameLocation":"13097:10:2","nodeType":"VariableDeclaration","scope":1144,"src":"13089:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"13089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[{"id":1110,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"13123:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1111,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"13132:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1112,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13140:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1113,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"13151:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1109,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[664],"referencedDeclaration":664,"src":"13110:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13110:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13089:78:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1118,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13191:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1117,"name":"state","nodeType":"Identifier","overloadedDeclarations":[754],"referencedDeclaration":754,"src":"13185:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1818_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13185:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1120,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"13206:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"13206:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"13185:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20746f6f206c61746520746f2063616e63656c","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13229:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_397853bd9e6f0888f5fdcc37d267617a8f74b5e4540887757482a2da22f4cdfc","typeString":"literal_string \"Governor: too late to cancel\""},"value":"Governor: too late to cancel"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_397853bd9e6f0888f5fdcc37d267617a8f74b5e4540887757482a2da22f4cdfc","typeString":"literal_string \"Governor: too late to cancel\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13177:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13177:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"13177:83:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1127,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"13278:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13278:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":1129,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"13294:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":1131,"indexExpression":{"id":1130,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13305:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13294:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":1132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":431,"src":"13294:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13278:47:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a206f6e6c792070726f706f7365722063616e2063616e63656c","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13327:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3fd25dc9791b847d14d0815e84967e87bbf815be3a68ecdd58e99f67196ddc7","typeString":"literal_string \"Governor: only proposer can cancel\""},"value":"Governor: only proposer can cancel"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3fd25dc9791b847d14d0815e84967e87bbf815be3a68ecdd58e99f67196ddc7","typeString":"literal_string \"Governor: only proposer can cancel\""}],"id":1126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13270:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13270:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"13270:94:2"},{"expression":{"arguments":[{"id":1138,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"13389:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"13398:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1140,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13406:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1141,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"13417:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1137,"name":"_cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"13381:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) returns (uint256)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13381:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1106,"id":1143,"nodeType":"Return","src":"13374:59:2"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"12829:47:2","text":" @dev See {IGovernor-cancel}."},"functionSelector":"452115d6","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"12890:6:2","nodeType":"FunctionDefinition","overrides":{"id":1103,"nodeType":"OverrideSpecifier","overrides":[],"src":"13052:8:2"},"parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"targets","nameLocation":"12923:7:2","nodeType":"VariableDeclaration","scope":1145,"src":"12906:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"12906:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1092,"nodeType":"ArrayTypeName","src":"12906:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"values","nameLocation":"12957:6:2","nodeType":"VariableDeclaration","scope":1145,"src":"12940:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"12940:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ArrayTypeName","src":"12940:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"calldatas","nameLocation":"12988:9:2","nodeType":"VariableDeclaration","scope":1145,"src":"12973:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1097,"name":"bytes","nodeType":"ElementaryTypeName","src":"12973:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1098,"nodeType":"ArrayTypeName","src":"12973:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"descriptionHash","nameLocation":"13015:15:2","nodeType":"VariableDeclaration","scope":1145,"src":"13007:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13007:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12896:140:2"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"13070:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"13070:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13069:9:2"},"scope":1800,"src":"12881:559:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1204,"nodeType":"Block","src":"13778:328:2","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"errorMessage","nameLocation":"13802:12:2","nodeType":"VariableDeclaration","scope":1204,"src":"13788:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1162,"name":"string","nodeType":"ElementaryTypeName","src":"13788:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1165,"initialValue":{"hexValue":"476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13817:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_60bfcc3776c91812db2df5ee8e14efc111acb8df47a38be82f94cf8f4bc73336","typeString":"literal_string \"Governor: call reverted without message\""},"value":"Governor: call reverted without message"},"nodeType":"VariableDeclarationStatement","src":"13788:70:2"},{"body":{"id":1202,"nodeType":"Block","src":"13913:187:2","statements":[{"assignments":[1178,1180],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"success","nameLocation":"13933:7:2","nodeType":"VariableDeclaration","scope":1202,"src":"13928:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"13928:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"returndata","nameLocation":"13955:10:2","nodeType":"VariableDeclaration","scope":1202,"src":"13942:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1179,"name":"bytes","nodeType":"ElementaryTypeName","src":"13942:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"baseExpression":{"id":1189,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"14003:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1191,"indexExpression":{"id":1190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14013:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14003:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":1181,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13969:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1183,"indexExpression":{"id":1182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13977:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13969:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"13969:15:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"baseExpression":{"id":1185,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"13992:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1187,"indexExpression":{"id":1186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13999:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13992:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13969:33:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13969:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13927:89:2"},{"expression":{"arguments":[{"id":1197,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"14055:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1198,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"14064:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1199,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"14076:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1194,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"14030:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3374_$","typeString":"type(library Address)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"14030:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14030:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1201,"nodeType":"ExpressionStatement","src":"14030:59:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13888:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1171,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13892:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13892:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13888:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"initializationExpression":{"assignments":[1167],"declarations":[{"constant":false,"id":1167,"mutability":"mutable","name":"i","nameLocation":"13881:1:2","nodeType":"VariableDeclaration","scope":1203,"src":"13873:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1169,"initialValue":{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13885:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13873:13:2"},"loopExpression":{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13908:3:2","subExpression":{"id":1174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13910:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ExpressionStatement","src":"13908:3:2"},"nodeType":"ForStatement","src":"13868:232:2"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"13446:114:2","text":" @dev Internal execution mechanism. Can be overridden to implement different execution mechanism"},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"13574:8:2","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"13592:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13592:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"targets","nameLocation":"13643:7:2","nodeType":"VariableDeclaration","scope":1205,"src":"13626:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"13626:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1150,"nodeType":"ArrayTypeName","src":"13626:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"values","nameLocation":"13677:6:2","nodeType":"VariableDeclaration","scope":1205,"src":"13660:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"13660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ArrayTypeName","src":"13660:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"calldatas","nameLocation":"13708:9:2","nodeType":"VariableDeclaration","scope":1205,"src":"13693:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"13693:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1156,"nodeType":"ArrayTypeName","src":"13693:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"13727:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13727:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13582:178:2"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"13778:0:2"},"scope":1800,"src":"13565:541:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"14401:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1222,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"14415:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14415:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1226,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14438:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14430:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"14430:7:2","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14430:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14415:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"IfStatement","src":"14411:258:2","trueBody":{"id":1262,"nodeType":"Block","src":"14445:224:2","statements":[{"body":{"id":1260,"nodeType":"Block","src":"14504:155:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1240,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14526:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1242,"indexExpression":{"id":1241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14534:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14526:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1245,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14548:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14540:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"14540:7:2","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14540:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14526:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"IfStatement","src":"14522:123:2","trueBody":{"id":1258,"nodeType":"Block","src":"14555:90:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1252,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"14612:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1254,"indexExpression":{"id":1253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14622:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14612:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1251,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14602:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14602:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1248,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"14577:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pushBack","nodeType":"MemberAccess","referencedDeclaration":8735,"src":"14577:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$8703_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$8703_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14577:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"14577:49:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14479:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1234,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14483:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14483:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14479:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"initializationExpression":{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"i","nameLocation":"14472:1:2","nodeType":"VariableDeclaration","scope":1261,"src":"14464:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"14464:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14476:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14464:13:2"},"loopExpression":{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14499:3:2","subExpression":{"id":1237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14501:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1239,"nodeType":"ExpressionStatement","src":"14499:3:2"},"nodeType":"ForStatement","src":"14459:200:2"}]}}]},"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"14112:59:2","text":" @dev Hook before execution is triggered."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeExecute","nameLocation":"14185:14:2","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"14209:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"14209:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"targets","nameLocation":"14260:7:2","nodeType":"VariableDeclaration","scope":1265,"src":"14243:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"14243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1210,"nodeType":"ArrayTypeName","src":"14243:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"14277:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"14277:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1213,"nodeType":"ArrayTypeName","src":"14277:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"calldatas","nameLocation":"14331:9:2","nodeType":"VariableDeclaration","scope":1265,"src":"14316:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"14316:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1216,"nodeType":"ArrayTypeName","src":"14316:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"14350:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14350:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14199:184:2"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"14401:0:2"},"scope":1800,"src":"14176:499:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"14980:160:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1282,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"14994:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14994:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1286,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15017:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15009:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"15009:7:2","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15009:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14994:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1301,"nodeType":"IfStatement","src":"14990:144:2","trueBody":{"id":1300,"nodeType":"Block","src":"15024:110:2","statements":[{"condition":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15042:24:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1289,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"15043:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":1290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"empty","nodeType":"MemberAccess","referencedDeclaration":9024,"src":"15043:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Deque_$8703_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15043:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"nodeType":"IfStatement","src":"15038:86:2","trueBody":{"id":1298,"nodeType":"Block","src":"15068:56:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1293,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"15086:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":1295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"clear","nodeType":"MemberAccess","referencedDeclaration":8982,"src":"15086:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$__$bound_to$_t_struct$_Bytes32Deque_$8703_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15086:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"15086:23:2"}]}}]}}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"14681:58:2","text":" @dev Hook after execution is triggered."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_afterExecute","nameLocation":"14753:13:2","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"14776:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"14776:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"14810:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"14810:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1270,"nodeType":"ArrayTypeName","src":"14810:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"14850:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"14850:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ArrayTypeName","src":"14850:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"14889:14:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1275,"name":"bytes","nodeType":"ElementaryTypeName","src":"14889:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1276,"nodeType":"ArrayTypeName","src":"14889:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"14929:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14929:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14766:196:2"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"14980:0:2"},"scope":1800,"src":"14744:396:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1367,"nodeType":"Block","src":"15599:512:2","statements":[{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"proposalId","nameLocation":"15617:10:2","nodeType":"VariableDeclaration","scope":1367,"src":"15609:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"15609:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"id":1323,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"15643:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1324,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"15652:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1325,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"15660:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":1326,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"15671:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1322,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[664],"referencedDeclaration":664,"src":"15630:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15630:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15609:78:2"},{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"currentState","nameLocation":"15712:12:2","nodeType":"VariableDeclaration","scope":1367,"src":"15698:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":1330,"nodeType":"UserDefinedTypeName","pathNode":{"id":1329,"name":"ProposalState","nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"15698:13:2"},"referencedDeclaration":1818,"src":"15698:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"id":1335,"initialValue":{"arguments":[{"id":1333,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"15733:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"name":"state","nodeType":"Identifier","overloadedDeclarations":[754],"referencedDeclaration":754,"src":"15727:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1818_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15727:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"VariableDeclarationStatement","src":"15698:46:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1337,"name":"currentState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"15776:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1338,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"15792:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"15792:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"15776:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"currentState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"15834:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1342,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"15850:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Expired","nodeType":"MemberAccess","referencedDeclaration":1816,"src":"15850:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"15834:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15776:95:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"currentState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"15891:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1347,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"15907:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Executed","nodeType":"MemberAccess","referencedDeclaration":1817,"src":"15907:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"15891:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15776:153:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f7420616374697665","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15943:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b","typeString":"literal_string \"Governor: proposal not active\""},"value":"Governor: proposal not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b","typeString":"literal_string \"Governor: proposal not active\""}],"id":1336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15755:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15755:229:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"15755:229:2"},{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1354,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"15994:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":1356,"indexExpression":{"id":1355,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"16005:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15994:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":1357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"canceled","nodeType":"MemberAccess","referencedDeclaration":441,"src":"15994:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16028:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15994:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1360,"nodeType":"ExpressionStatement","src":"15994:38:2"},{"eventCall":{"arguments":[{"id":1362,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"16065:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1361,"name":"ProposalCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"16048:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16048:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1364,"nodeType":"EmitStatement","src":"16043:33:2"},{"expression":{"id":1365,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"16094:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1319,"id":1366,"nodeType":"Return","src":"16087:17:2"}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"15146:256:2","text":" @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\n canceled to allow distinguishing it from executed proposals.\n Emits a {IGovernor-ProposalCanceled} event."},"id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"_cancel","nameLocation":"15416:7:2","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"targets","nameLocation":"15450:7:2","nodeType":"VariableDeclaration","scope":1368,"src":"15433:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"15433:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1306,"nodeType":"ArrayTypeName","src":"15433:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"values","nameLocation":"15484:6:2","nodeType":"VariableDeclaration","scope":1368,"src":"15467:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"15467:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1309,"nodeType":"ArrayTypeName","src":"15467:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"calldatas","nameLocation":"15515:9:2","nodeType":"VariableDeclaration","scope":1368,"src":"15500:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1311,"name":"bytes","nodeType":"ElementaryTypeName","src":"15500:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1312,"nodeType":"ArrayTypeName","src":"15500:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"descriptionHash","nameLocation":"15542:15:2","nodeType":"VariableDeclaration","scope":1368,"src":"15534:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15534:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15423:140:2"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"15590:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"15590:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15589:9:2"},"scope":1800,"src":"15407:704:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1993],"body":{"id":1386,"nodeType":"Block","src":"16272:71:2","statements":[{"expression":{"arguments":[{"id":1380,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"16299:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"16308:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1382,"name":"_defaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"16319:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_memory_ptr_$","typeString":"function () view returns (bytes memory)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16319:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1379,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"16289:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16289:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1385,"nodeType":"Return","src":"16282:54:2"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"16117:49:2","text":" @dev See {IGovernor-getVotes}."},"functionSelector":"eb9019d4","id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"16180:8:2","nodeType":"FunctionDefinition","overrides":{"id":1375,"nodeType":"OverrideSpecifier","overrides":[],"src":"16245:8:2"},"parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"account","nameLocation":"16197:7:2","nodeType":"VariableDeclaration","scope":1387,"src":"16189:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"16189:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"timepoint","nameLocation":"16214:9:2","nodeType":"VariableDeclaration","scope":1387,"src":"16206:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"16206:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16188:36:2"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"16263:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"16263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16262:9:2"},"scope":1800,"src":"16171:172:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2005],"body":{"id":1406,"nodeType":"Block","src":"16575:61:2","statements":[{"expression":{"arguments":[{"id":1401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"16602:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1402,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"16611:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1403,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"16622:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1400,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"16592:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16592:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1399,"id":1405,"nodeType":"Return","src":"16585:44:2"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"16349:59:2","text":" @dev See {IGovernor-getVotesWithParams}."},"functionSelector":"9a802a6d","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"getVotesWithParams","nameLocation":"16422:18:2","nodeType":"FunctionDefinition","overrides":{"id":1396,"nodeType":"OverrideSpecifier","overrides":[],"src":"16548:8:2"},"parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"account","nameLocation":"16458:7:2","nodeType":"VariableDeclaration","scope":1407,"src":"16450:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"16450:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"timepoint","nameLocation":"16483:9:2","nodeType":"VariableDeclaration","scope":1407,"src":"16475:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"16475:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"params","nameLocation":"16515:6:2","nodeType":"VariableDeclaration","scope":1407,"src":"16502:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"16502:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16440:87:2"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"16566:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"16566:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16565:9:2"},"scope":1800,"src":"16413:223:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2076],"body":{"id":1430,"nodeType":"Block","src":"16791:103:2","statements":[{"assignments":[1419],"declarations":[{"constant":false,"id":1419,"mutability":"mutable","name":"voter","nameLocation":"16809:5:2","nodeType":"VariableDeclaration","scope":1430,"src":"16801:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"16801:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1422,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1420,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"16817:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16817:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16801:28:2"},{"expression":{"arguments":[{"id":1424,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"16856:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1425,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"16868:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1426,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"16875:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16884:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1423,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1612,"src":"16846:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16846:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1417,"id":1429,"nodeType":"Return","src":"16839:48:2"}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"16642:49:2","text":" @dev See {IGovernor-castVote}."},"functionSelector":"56781388","id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"16705:8:2","nodeType":"FunctionDefinition","overrides":{"id":1414,"nodeType":"OverrideSpecifier","overrides":[],"src":"16764:8:2"},"parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"proposalId","nameLocation":"16722:10:2","nodeType":"VariableDeclaration","scope":1431,"src":"16714:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"16714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"support","nameLocation":"16740:7:2","nodeType":"VariableDeclaration","scope":1431,"src":"16734:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1411,"name":"uint8","nodeType":"ElementaryTypeName","src":"16734:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16713:35:2"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"16782:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"16782:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16781:9:2"},"scope":1800,"src":"16696:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2088],"body":{"id":1456,"nodeType":"Block","src":"17123:107:2","statements":[{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"voter","nameLocation":"17141:5:2","nodeType":"VariableDeclaration","scope":1456,"src":"17133:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"17133:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1448,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1446,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"17149:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17149:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17133:28:2"},{"expression":{"arguments":[{"id":1450,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"17188:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1451,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"17200:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"17207:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1453,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"17216:6:2","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1449,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1612,"src":"17178:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17178:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1443,"id":1455,"nodeType":"Return","src":"17171:52:2"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"16900:59:2","text":" @dev See {IGovernor-castVoteWithReason}."},"functionSelector":"7b3c71d3","id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReason","nameLocation":"16973:18:2","nodeType":"FunctionDefinition","overrides":{"id":1440,"nodeType":"OverrideSpecifier","overrides":[],"src":"17096:8:2"},"parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"proposalId","nameLocation":"17009:10:2","nodeType":"VariableDeclaration","scope":1457,"src":"17001:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"17001:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"support","nameLocation":"17035:7:2","nodeType":"VariableDeclaration","scope":1457,"src":"17029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1435,"name":"uint8","nodeType":"ElementaryTypeName","src":"17029:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"reason","nameLocation":"17068:6:2","nodeType":"VariableDeclaration","scope":1457,"src":"17052:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1437,"name":"string","nodeType":"ElementaryTypeName","src":"17052:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16991:89:2"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"17114:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"17114:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17113:9:2"},"scope":1800,"src":"16964:266:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2102],"body":{"id":1485,"nodeType":"Block","src":"17506:115:2","statements":[{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"voter","nameLocation":"17524:5:2","nodeType":"VariableDeclaration","scope":1485,"src":"17516:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"17516:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1474,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"17532:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17532:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17516:28:2"},{"expression":{"arguments":[{"id":1478,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"17571:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1479,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"17583:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"17590:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1481,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"17599:6:2","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1482,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"17607:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1477,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1689,"src":"17561:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17561:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1471,"id":1484,"nodeType":"Return","src":"17554:60:2"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"17236:68:2","text":" @dev See {IGovernor-castVoteWithReasonAndParams}."},"functionSelector":"5f398a14","id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParams","nameLocation":"17318:27:2","nodeType":"FunctionDefinition","overrides":{"id":1468,"nodeType":"OverrideSpecifier","overrides":[],"src":"17479:8:2"},"parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"proposalId","nameLocation":"17363:10:2","nodeType":"VariableDeclaration","scope":1486,"src":"17355:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"17355:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"support","nameLocation":"17389:7:2","nodeType":"VariableDeclaration","scope":1486,"src":"17383:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1461,"name":"uint8","nodeType":"ElementaryTypeName","src":"17383:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"reason","nameLocation":"17422:6:2","nodeType":"VariableDeclaration","scope":1486,"src":"17406:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1463,"name":"string","nodeType":"ElementaryTypeName","src":"17406:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"params","nameLocation":"17451:6:2","nodeType":"VariableDeclaration","scope":1486,"src":"17438:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1465,"name":"bytes","nodeType":"ElementaryTypeName","src":"17438:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17345:118:2"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"17497:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"17497:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17496:9:2"},"scope":1800,"src":"17309:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2118],"body":{"id":1529,"nodeType":"Block","src":"17863:250:2","statements":[{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"voter","nameLocation":"17881:5:2","nodeType":"VariableDeclaration","scope":1529,"src":"17873:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"17873:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1511,"name":"BALLOT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"17954:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1512,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"17971:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1513,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"17983:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1509,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17943:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"17943:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17943:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1508,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17933:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17933:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1507,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"17916:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17916:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1517,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"18007:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1518,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"18022:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1519,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"18037:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1505,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"17889:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5932_$","typeString":"type(library ECDSA)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":5867,"src":"17889:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17889:159:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17873:175:2"},{"expression":{"arguments":[{"id":1523,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"18075:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1524,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18087:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"18094:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18103:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1522,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1612,"src":"18065:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18065:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1502,"id":1528,"nodeType":"Return","src":"18058:48:2"}]},"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"17627:54:2","text":" @dev See {IGovernor-castVoteBySig}."},"functionSelector":"3bccf4fd","id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteBySig","nameLocation":"17695:13:2","nodeType":"FunctionDefinition","overrides":{"id":1499,"nodeType":"OverrideSpecifier","overrides":[],"src":"17836:8:2"},"parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"proposalId","nameLocation":"17726:10:2","nodeType":"VariableDeclaration","scope":1530,"src":"17718:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"support","nameLocation":"17752:7:2","nodeType":"VariableDeclaration","scope":1530,"src":"17746:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1490,"name":"uint8","nodeType":"ElementaryTypeName","src":"17746:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"v","nameLocation":"17775:1:2","nodeType":"VariableDeclaration","scope":1530,"src":"17769:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1492,"name":"uint8","nodeType":"ElementaryTypeName","src":"17769:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"r","nameLocation":"17794:1:2","nodeType":"VariableDeclaration","scope":1530,"src":"17786:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17786:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"s","nameLocation":"17813:1:2","nodeType":"VariableDeclaration","scope":1530,"src":"17805:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17805:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17708:112:2"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"17854:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"17854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17853:9:2"},"scope":1800,"src":"17686:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2138],"body":{"id":1587,"nodeType":"Block","src":"18454:527:2","statements":[{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"voter","nameLocation":"18472:5:2","nodeType":"VariableDeclaration","scope":1587,"src":"18464:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"18464:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1578,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1559,"name":"EXTENDED_BALLOT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"18608:24:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1560,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"18658:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1561,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"18694:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"id":1565,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18743:6:2","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18737:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"18737:5:2","typeDescriptions":{}}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18737:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1562,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18727:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18727:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1569,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"18787:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1568,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18777:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18777:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1557,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18572:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"18572:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18572:244:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1556,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18541:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18541:293:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1555,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"18507:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18507:341:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1574,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"18862:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1575,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"18877:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1576,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"18892:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1553,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"18480:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5932_$","typeString":"type(library ECDSA)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":5867,"src":"18480:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18480:423:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18464:439:2"},{"expression":{"arguments":[{"id":1580,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"18931:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1581,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"18943:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"18950:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1583,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18959:6:2","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1584,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"18967:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1579,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1689,"src":"18921:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18921:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1550,"id":1586,"nodeType":"Return","src":"18914:60:2"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"18119:73:2","text":" @dev See {IGovernor-castVoteWithReasonAndParamsBySig}."},"functionSelector":"03420181","id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParamsBySig","nameLocation":"18206:32:2","nodeType":"FunctionDefinition","overrides":{"id":1547,"nodeType":"OverrideSpecifier","overrides":[],"src":"18427:8:2"},"parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"proposalId","nameLocation":"18256:10:2","nodeType":"VariableDeclaration","scope":1588,"src":"18248:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"18248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"support","nameLocation":"18282:7:2","nodeType":"VariableDeclaration","scope":1588,"src":"18276:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1534,"name":"uint8","nodeType":"ElementaryTypeName","src":"18276:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"reason","nameLocation":"18315:6:2","nodeType":"VariableDeclaration","scope":1588,"src":"18299:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"18299:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"params","nameLocation":"18344:6:2","nodeType":"VariableDeclaration","scope":1588,"src":"18331:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1538,"name":"bytes","nodeType":"ElementaryTypeName","src":"18331:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"v","nameLocation":"18366:1:2","nodeType":"VariableDeclaration","scope":1588,"src":"18360:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1540,"name":"uint8","nodeType":"ElementaryTypeName","src":"18360:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"r","nameLocation":"18385:1:2","nodeType":"VariableDeclaration","scope":1588,"src":"18377:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18377:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"s","nameLocation":"18404:1:2","nodeType":"VariableDeclaration","scope":1588,"src":"18396:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18396:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18238:173:2"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"18445:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"18445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18444:9:2"},"scope":1800,"src":"18197:784:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1611,"nodeType":"Block","src":"19456:89:2","statements":[{"expression":{"arguments":[{"id":1603,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"19483:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1604,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"19495:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1605,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"19504:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1606,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"19513:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1607,"name":"_defaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"19521:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_memory_ptr_$","typeString":"function () view returns (bytes memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19521:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1602,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1612,1689],"referencedDeclaration":1689,"src":"19473:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19473:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1601,"id":1610,"nodeType":"Return","src":"19466:72:2"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"18987:298:2","text":" @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n voting weight using {IGovernor-getVotes} and call the {_countVote} internal function. Uses the _defaultParams().\n Emits a {IGovernor-VoteCast} event."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"_castVote","nameLocation":"19299:9:2","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"proposalId","nameLocation":"19326:10:2","nodeType":"VariableDeclaration","scope":1612,"src":"19318:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"19318:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"account","nameLocation":"19354:7:2","nodeType":"VariableDeclaration","scope":1612,"src":"19346:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"19346:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"support","nameLocation":"19377:7:2","nodeType":"VariableDeclaration","scope":1612,"src":"19371:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1594,"name":"uint8","nodeType":"ElementaryTypeName","src":"19371:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"reason","nameLocation":"19408:6:2","nodeType":"VariableDeclaration","scope":1612,"src":"19394:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"19394:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19308:112:2"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"19447:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"19447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19446:9:2"},"scope":1800,"src":"19290:255:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"20022:560:2","statements":[{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"proposal","nameLocation":"20053:8:2","nodeType":"VariableDeclaration","scope":1688,"src":"20032:29:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore"},"typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"ProposalCore","nodeType":"IdentifierPath","referencedDeclaration":442,"src":"20032:12:2"},"referencedDeclaration":442,"src":"20032:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore"}},"visibility":"internal"}],"id":1634,"initialValue":{"baseExpression":{"id":1631,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"20064:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$442_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":1633,"indexExpression":{"id":1632,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"20075:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20064:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20032:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1637,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"20110:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1636,"name":"state","nodeType":"Identifier","overloadedDeclarations":[754],"referencedDeclaration":754,"src":"20104:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1818_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20104:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1639,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"20125:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1818_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1811,"src":"20125:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"src":"20104:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20766f7465206e6f742063757272656e746c7920616374697665","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20147:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","typeString":"literal_string \"Governor: vote not currently active\""},"value":"Governor: vote not currently active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","typeString":"literal_string \"Governor: vote not currently active\""}],"id":1635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20096:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20096:89:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"ExpressionStatement","src":"20096:89:2"},{"assignments":[1646],"declarations":[{"constant":false,"id":1646,"mutability":"mutable","name":"weight","nameLocation":"20204:6:2","nodeType":"VariableDeclaration","scope":1688,"src":"20196:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"20196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1653,"initialValue":{"arguments":[{"id":1648,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"20223:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1649,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"20232:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$442_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":429,"src":"20232:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1651,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"20252:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1647,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"20213:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20213:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20196:63:2"},{"expression":{"arguments":[{"id":1655,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"20280:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1656,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"20292:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"20301:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1658,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"20310:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"20318:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1654,"name":"_countVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"20269:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint8,uint256,bytes memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20269:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"20269:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1662,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"20340:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20340:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20357:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20340:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1684,"nodeType":"Block","src":"20450:102:2","statements":[{"eventCall":{"arguments":[{"id":1676,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"20488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"20497:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1678,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"20509:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1679,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"20518:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1680,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"20526:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1681,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"20534:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1675,"name":"VoteCastWithParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"20469:18:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint8,uint256,string memory,bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20469:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"EmitStatement","src":"20464:77:2"}]},"id":1685,"nodeType":"IfStatement","src":"20336:216:2","trueBody":{"id":1674,"nodeType":"Block","src":"20360:84:2","statements":[{"eventCall":{"arguments":[{"id":1667,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"20388:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"20397:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1669,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"20409:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1670,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"20418:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1671,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"20426:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1666,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"20379:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint8,uint256,string memory)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20379:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"EmitStatement","src":"20374:59:2"}]}},{"expression":{"id":1686,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"20569:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1627,"id":1687,"nodeType":"Return","src":"20562:13:2"}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"19551:271:2","text":" @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\n Emits a {IGovernor-VoteCast} event."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"_castVote","nameLocation":"19836:9:2","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"proposalId","nameLocation":"19863:10:2","nodeType":"VariableDeclaration","scope":1689,"src":"19855:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"19855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"account","nameLocation":"19891:7:2","nodeType":"VariableDeclaration","scope":1689,"src":"19883:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"19883:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"support","nameLocation":"19914:7:2","nodeType":"VariableDeclaration","scope":1689,"src":"19908:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1618,"name":"uint8","nodeType":"ElementaryTypeName","src":"19908:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"reason","nameLocation":"19945:6:2","nodeType":"VariableDeclaration","scope":1689,"src":"19931:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1620,"name":"string","nodeType":"ElementaryTypeName","src":"19931:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"params","nameLocation":"19974:6:2","nodeType":"VariableDeclaration","scope":1689,"src":"19961:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1622,"name":"bytes","nodeType":"ElementaryTypeName","src":"19961:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19845:141:2"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"20013:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"20013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20012:9:2"},"scope":1800,"src":"19827:755:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1720,"nodeType":"Block","src":"21140:189:2","statements":[{"assignments":[1702,1704],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"success","nameLocation":"21156:7:2","nodeType":"VariableDeclaration","scope":1720,"src":"21151:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"21151:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"returndata","nameLocation":"21178:10:2","nodeType":"VariableDeclaration","scope":1720,"src":"21165:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"21165:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1711,"initialValue":{"arguments":[{"id":1709,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"21218:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1705,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"21192:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"21192:11:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"21211:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"21192:25:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21192:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21150:73:2"},{"expression":{"arguments":[{"id":1715,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"21258:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1716,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"21267:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21279:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_188c83882c79ccd2b8efe669664a276c8f2b924bc8cf22525168ceaa78c2598f","typeString":"literal_string \"Governor: relay reverted without message\""},"value":"Governor: relay reverted without message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_188c83882c79ccd2b8efe669664a276c8f2b924bc8cf22525168ceaa78c2598f","typeString":"literal_string \"Governor: relay reverted without message\""}],"expression":{"id":1712,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"21233:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3374_$","typeString":"type(library Address)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":3353,"src":"21233:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21233:89:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1719,"nodeType":"ExpressionStatement","src":"21233:89:2"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"20588:440:2","text":" @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\n is some contract other than the governor itself, like when using a timelock, this function can be invoked\n in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\n Note that if the executor is simply the governor itself, use of `relay` is redundant."},"functionSelector":"c28bc2fa","id":1721,"implemented":true,"kind":"function","modifiers":[{"id":1699,"kind":"modifierInvocation","modifierName":{"id":1698,"name":"onlyGovernance","nodeType":"IdentifierPath","referencedDeclaration":490,"src":"21125:14:2"},"nodeType":"ModifierInvocation","src":"21125:14:2"}],"name":"relay","nameLocation":"21042:5:2","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"target","nameLocation":"21056:6:2","nodeType":"VariableDeclaration","scope":1721,"src":"21048:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"21048:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"value","nameLocation":"21072:5:2","nodeType":"VariableDeclaration","scope":1721,"src":"21064:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"21064:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"data","nameLocation":"21094:4:2","nodeType":"VariableDeclaration","scope":1721,"src":"21079:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1695,"name":"bytes","nodeType":"ElementaryTypeName","src":"21079:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21047:52:2"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"21140:0:2"},"scope":1800,"src":"21033:296:2","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1732,"nodeType":"Block","src":"21578:37:2","statements":[{"expression":{"arguments":[{"id":1729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21603:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21595:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"21595:7:2","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21595:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1726,"id":1731,"nodeType":"Return","src":"21588:20:2"}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"21335:177:2","text":" @dev Address through which the governor executes action. Will be overloaded by module that execute actions\n through another contract such as a timelock."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"_executor","nameLocation":"21526:9:2","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"21535:2:2"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"21569:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"21569:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21568:9:2"},"scope":1800,"src":"21517:98:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3043],"body":{"id":1752,"nodeType":"Block","src":"21797:54:2","statements":[{"expression":{"expression":{"expression":{"id":1748,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21814:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1753,"src":"21814:21:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"21814:30:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1747,"id":1751,"nodeType":"Return","src":"21807:37:2"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"21621:63:2","text":" @dev See {IERC721Receiver-onERC721Received}."},"functionSelector":"150b7a02","id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"21698:16:2","nodeType":"FunctionDefinition","overrides":{"id":1744,"nodeType":"OverrideSpecifier","overrides":[],"src":"21771:8:2"},"parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"21715:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"21715:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"21724:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"21724:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"21733:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"21733:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"21742:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1741,"name":"bytes","nodeType":"ElementaryTypeName","src":"21742:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21714:41:2"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"21789:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1745,"name":"bytes4","nodeType":"ElementaryTypeName","src":"21789:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"21788:8:2"},"scope":1800,"src":"21689:162:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3007],"body":{"id":1774,"nodeType":"Block","src":"22091:55:2","statements":[{"expression":{"expression":{"expression":{"id":1770,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22108:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"22108:22:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"22108:31:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1769,"id":1773,"nodeType":"Return","src":"22101:38:2"}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"21857:65:2","text":" @dev See {IERC1155Receiver-onERC1155Received}."},"functionSelector":"f23a6e61","id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"21936:17:2","nodeType":"FunctionDefinition","overrides":{"id":1766,"nodeType":"OverrideSpecifier","overrides":[],"src":"22065:8:2"},"parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"21963:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"21963:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"21980:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"21980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"21997:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"21997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"22014:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"22014:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"22031:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"22031:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21953:96:2"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"22083:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1767,"name":"bytes4","nodeType":"ElementaryTypeName","src":"22083:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"22082:8:2"},"scope":1800,"src":"21927:219:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3025],"body":{"id":1798,"nodeType":"Block","src":"22414:60:2","statements":[{"expression":{"expression":{"expression":{"id":1794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22431:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1800","typeString":"contract Governor"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1799,"src":"22431:27:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"22431:36:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1793,"id":1797,"nodeType":"Return","src":"22424:43:2"}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"22152:70:2","text":" @dev See {IERC1155Receiver-onERC1155BatchReceived}."},"functionSelector":"bc197c81","id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"22236:22:2","nodeType":"FunctionDefinition","overrides":{"id":1790,"nodeType":"OverrideSpecifier","overrides":[],"src":"22388:8:2"},"parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22268:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"22268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22285:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"22285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22302:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"22302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1782,"nodeType":"ArrayTypeName","src":"22302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22328:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"22328:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ArrayTypeName","src":"22328:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22354:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"22354:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22258:114:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"22406:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1791,"name":"bytes4","nodeType":"ElementaryTypeName","src":"22406:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"22405:8:2"},"scope":1800,"src":"22227:247:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1801,"src":"965:21511:2","usedErrors":[5024,5026,8691]}],"src":"107:22370:2"},"id":2},"@openzeppelin/contracts/governance/IGovernor.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/IGovernor.sol","exportedSymbols":{"IERC165":[6172],"IERC6372":[2985],"IGovernor":[2139]},"id":2140,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1802,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../interfaces/IERC165.sol","id":1803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2140,"sourceUnit":2937,"src":"133:35:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"../interfaces/IERC6372.sol","id":1804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2140,"sourceUnit":2986,"src":"169:36:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1806,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":6172,"src":"318:7:3"},"id":1807,"nodeType":"InheritanceSpecifier","src":"318:7:3"},{"baseName":{"id":1808,"name":"IERC6372","nodeType":"IdentifierPath","referencedDeclaration":2985,"src":"327:8:3"},"id":1809,"nodeType":"InheritanceSpecifier","src":"327:8:3"}],"canonicalName":"IGovernor","contractDependencies":[],"contractKind":"contract","documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"207:79:3","text":" @dev Interface of the {Governor} core.\n _Available since v4.3._"},"fullyImplemented":false,"id":2139,"linearizedBaseContracts":[2139,2985,6172],"name":"IGovernor","nameLocation":"305:9:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGovernor.ProposalState","id":1818,"members":[{"id":1810,"name":"Pending","nameLocation":"371:7:3","nodeType":"EnumValue","src":"371:7:3"},{"id":1811,"name":"Active","nameLocation":"388:6:3","nodeType":"EnumValue","src":"388:6:3"},{"id":1812,"name":"Canceled","nameLocation":"404:8:3","nodeType":"EnumValue","src":"404:8:3"},{"id":1813,"name":"Defeated","nameLocation":"422:8:3","nodeType":"EnumValue","src":"422:8:3"},{"id":1814,"name":"Succeeded","nameLocation":"440:9:3","nodeType":"EnumValue","src":"440:9:3"},{"id":1815,"name":"Queued","nameLocation":"459:6:3","nodeType":"EnumValue","src":"459:6:3"},{"id":1816,"name":"Expired","nameLocation":"475:7:3","nodeType":"EnumValue","src":"475:7:3"},{"id":1817,"name":"Executed","nameLocation":"492:8:3","nodeType":"EnumValue","src":"492:8:3"}],"name":"ProposalState","nameLocation":"347:13:3","nodeType":"EnumDefinition","src":"342:164:3"},{"anonymous":false,"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"512:59:3","text":" @dev Emitted when a proposal is created."},"id":1843,"name":"ProposalCreated","nameLocation":"582:15:3","nodeType":"EventDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"615:10:3","nodeType":"VariableDeclaration","scope":1843,"src":"607:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1823,"indexed":false,"mutability":"mutable","name":"proposer","nameLocation":"643:8:3","nodeType":"VariableDeclaration","scope":1843,"src":"635:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"indexed":false,"mutability":"mutable","name":"targets","nameLocation":"671:7:3","nodeType":"VariableDeclaration","scope":1843,"src":"661:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1825,"nodeType":"ArrayTypeName","src":"661:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1829,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"698:6:3","nodeType":"VariableDeclaration","scope":1843,"src":"688:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ArrayTypeName","src":"688:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1832,"indexed":false,"mutability":"mutable","name":"signatures","nameLocation":"723:10:3","nodeType":"VariableDeclaration","scope":1843,"src":"714:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1830,"name":"string","nodeType":"ElementaryTypeName","src":"714:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1831,"nodeType":"ArrayTypeName","src":"714:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1835,"indexed":false,"mutability":"mutable","name":"calldatas","nameLocation":"751:9:3","nodeType":"VariableDeclaration","scope":1843,"src":"743:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"743:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1834,"nodeType":"ArrayTypeName","src":"743:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1837,"indexed":false,"mutability":"mutable","name":"voteStart","nameLocation":"778:9:3","nodeType":"VariableDeclaration","scope":1843,"src":"770:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1839,"indexed":false,"mutability":"mutable","name":"voteEnd","nameLocation":"805:7:3","nodeType":"VariableDeclaration","scope":1843,"src":"797:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1841,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"829:11:3","nodeType":"VariableDeclaration","scope":1843,"src":"822:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1840,"name":"string","nodeType":"ElementaryTypeName","src":"822:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"597:249:3"},"src":"576:271:3"},{"anonymous":false,"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"853:60:3","text":" @dev Emitted when a proposal is canceled."},"id":1848,"name":"ProposalCanceled","nameLocation":"924:16:3","nodeType":"EventDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"949:10:3","nodeType":"VariableDeclaration","scope":1848,"src":"941:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"940:20:3"},"src":"918:43:3"},{"anonymous":false,"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"967:60:3","text":" @dev Emitted when a proposal is executed."},"id":1853,"name":"ProposalExecuted","nameLocation":"1038:16:3","nodeType":"EventDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1063:10:3","nodeType":"VariableDeclaration","scope":1853,"src":"1055:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1054:20:3"},"src":"1032:43:3"},{"anonymous":false,"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"1081:187:3","text":" @dev Emitted when a vote is cast without params.\n Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used."},"id":1866,"name":"VoteCast","nameLocation":"1279:8:3","nodeType":"EventDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1304:5:3","nodeType":"VariableDeclaration","scope":1866,"src":"1288:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1319:10:3","nodeType":"VariableDeclaration","scope":1866,"src":"1311:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1860,"indexed":false,"mutability":"mutable","name":"support","nameLocation":"1337:7:3","nodeType":"VariableDeclaration","scope":1866,"src":"1331:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1859,"name":"uint8","nodeType":"ElementaryTypeName","src":"1331:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1862,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1354:6:3","nodeType":"VariableDeclaration","scope":1866,"src":"1346:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1864,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1369:6:3","nodeType":"VariableDeclaration","scope":1866,"src":"1362:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1863,"name":"string","nodeType":"ElementaryTypeName","src":"1362:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1287:89:3"},"src":"1273:104:3"},{"anonymous":false,"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"1383:298:3","text":" @dev Emitted when a vote is cast with params.\n Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n `params` are additional encoded parameters. Their interpepretation also depends on the voting module used."},"id":1881,"name":"VoteCastWithParams","nameLocation":"1692:18:3","nodeType":"EventDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1736:5:3","nodeType":"VariableDeclaration","scope":1881,"src":"1720:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"1720:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1871,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1759:10:3","nodeType":"VariableDeclaration","scope":1881,"src":"1751:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1873,"indexed":false,"mutability":"mutable","name":"support","nameLocation":"1785:7:3","nodeType":"VariableDeclaration","scope":1881,"src":"1779:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1872,"name":"uint8","nodeType":"ElementaryTypeName","src":"1779:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1875,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1810:6:3","nodeType":"VariableDeclaration","scope":1881,"src":"1802:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1877,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1833:6:3","nodeType":"VariableDeclaration","scope":1881,"src":"1826:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1876,"name":"string","nodeType":"ElementaryTypeName","src":"1826:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1879,"indexed":false,"mutability":"mutable","name":"params","nameLocation":"1855:6:3","nodeType":"VariableDeclaration","scope":1881,"src":"1849:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"1849:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1710:157:3"},"src":"1686:182:3"},{"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"1874:128:3","text":" @notice module:core\n @dev Name of the governor instance (used in building the ERC712 domain separator)."},"functionSelector":"06fdde03","id":1887,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"2016:4:3","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"2020:2:3"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"2052:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1884,"name":"string","nodeType":"ElementaryTypeName","src":"2052:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2051:15:3"},"scope":2139,"src":"2007:60:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"2073:144:3","text":" @notice module:core\n @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \"1\""},"functionSelector":"54fd4d50","id":1893,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"2231:7:3","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"2238:2:3"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"2270:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1890,"name":"string","nodeType":"ElementaryTypeName","src":"2270:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2269:15:3"},"scope":2139,"src":"2222:63:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2978],"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"2291:65:3","text":" @notice module:core\n @dev See {IERC6372}"},"functionSelector":"91ddadf4","id":1900,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2370:5:3","nodeType":"FunctionDefinition","overrides":{"id":1896,"nodeType":"OverrideSpecifier","overrides":[],"src":"2398:8:3"},"parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"2375:2:3"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"2416:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1897,"name":"uint48","nodeType":"ElementaryTypeName","src":"2416:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2415:8:3"},"scope":2139,"src":"2361:63:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2984],"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"2430:64:3","text":" @notice module:core\n @dev See EIP-6372."},"functionSelector":"4bf5d7e9","id":1907,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2561:10:3","nodeType":"FunctionDefinition","overrides":{"id":1903,"nodeType":"OverrideSpecifier","overrides":[],"src":"2594:8:3"},"parameters":{"id":1902,"nodeType":"ParameterList","parameters":[],"src":"2571:2:3"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1907,"src":"2612:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1904,"name":"string","nodeType":"ElementaryTypeName","src":"2612:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2611:15:3"},"scope":2139,"src":"2552:75:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"2633:1315:3","text":" @notice module:voting\n @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\n be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\n key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\n There are 2 standard keys: `support` and `quorum`.\n - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\n - `quorum=bravo` means that only For votes are counted towards quorum.\n - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\n If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique\n name that describes the behavior. For example:\n - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain.\n - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote.\n NOTE: The string can be decoded by the standard\n https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\n JavaScript class."},"functionSelector":"dd4e2ba5","id":1913,"implemented":false,"kind":"function","modifiers":[],"name":"COUNTING_MODE","nameLocation":"4015:13:3","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[],"src":"4028:2:3"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"4060:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"4060:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4059:15:3"},"scope":2139,"src":"4006:69:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"4081:129:3","text":" @notice module:core\n @dev Hashing function used to (re)build the proposal id from the proposal details.."},"functionSelector":"c59057e4","id":1930,"implemented":false,"kind":"function","modifiers":[],"name":"hashProposal","nameLocation":"4224:12:3","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"targets","nameLocation":"4263:7:3","nodeType":"VariableDeclaration","scope":1930,"src":"4246:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"4246:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"nodeType":"ArrayTypeName","src":"4246:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"values","nameLocation":"4297:6:3","nodeType":"VariableDeclaration","scope":1930,"src":"4280:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ArrayTypeName","src":"4280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"calldatas","nameLocation":"4328:9:3","nodeType":"VariableDeclaration","scope":1930,"src":"4313:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"4313:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1922,"nodeType":"ArrayTypeName","src":"4313:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"descriptionHash","nameLocation":"4355:15:3","nodeType":"VariableDeclaration","scope":1930,"src":"4347:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4347:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4236:140:3"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"4406:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4405:9:3"},"scope":2139,"src":"4215:200:3","stateMutability":"pure","virtual":true,"visibility":"public"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"4421:111:3","text":" @notice module:core\n @dev Current state of a proposal, following Compound's convention"},"functionSelector":"3e4f49e6","id":1939,"implemented":false,"kind":"function","modifiers":[],"name":"state","nameLocation":"4546:5:3","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"proposalId","nameLocation":"4560:10:3","nodeType":"VariableDeclaration","scope":1939,"src":"4552:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4551:20:3"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"4601:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":1936,"nodeType":"UserDefinedTypeName","pathNode":{"id":1935,"name":"ProposalState","nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"4601:13:3"},"referencedDeclaration":1818,"src":"4601:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1818","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"src":"4600:15:3"},"scope":2139,"src":"4537:79:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"4622:296:3","text":" @notice module:core\n @dev Timepoint used to retrieve user's votes and quorum. If using block number (as per Compound's Comp), the\n snapshot is performed at the end of this block. Hence, voting for this proposal starts at the beginning of the\n following block."},"functionSelector":"2d63f693","id":1947,"implemented":false,"kind":"function","modifiers":[],"name":"proposalSnapshot","nameLocation":"4932:16:3","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"proposalId","nameLocation":"4957:10:3","nodeType":"VariableDeclaration","scope":1947,"src":"4949:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"4949:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4948:20:3"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"4998:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:3"},"scope":2139,"src":"4923:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"5013:202:3","text":" @notice module:core\n @dev Timepoint at which votes close. If using block number, votes close at the end of this block, so it is\n possible to cast a vote during this block."},"functionSelector":"c01f9e37","id":1955,"implemented":false,"kind":"function","modifiers":[],"name":"proposalDeadline","nameLocation":"5229:16:3","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"proposalId","nameLocation":"5254:10:3","nodeType":"VariableDeclaration","scope":1955,"src":"5246:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5245:20:3"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"5295:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5295:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5294:9:3"},"scope":2139,"src":"5220:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"5310:87:3","text":" @notice module:core\n @dev The account that created a proposal."},"functionSelector":"143489d0","id":1963,"implemented":false,"kind":"function","modifiers":[],"name":"proposalProposer","nameLocation":"5411:16:3","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"proposalId","nameLocation":"5436:10:3","nodeType":"VariableDeclaration","scope":1963,"src":"5428:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"5428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5427:20:3"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"5477:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"5477:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5476:9:3"},"scope":2139,"src":"5402:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"5492:363:3","text":" @notice module:user-config\n @dev Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends\n on the clock (see EIP-6372) this contract uses.\n This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a\n proposal starts."},"functionSelector":"3932abb1","id":1969,"implemented":false,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"5869:11:3","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"5880:2:3"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"5912:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5912:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5911:9:3"},"scope":2139,"src":"5860:61:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"5927:367:3","text":" @notice module:user-config\n @dev Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock\n (see EIP-6372) this contract uses.\n NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\n duration compared to the voting delay."},"functionSelector":"02a251a3","id":1975,"implemented":false,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"6308:12:3","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[],"src":"6320:2:3"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1975,"src":"6352:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6352:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6351:9:3"},"scope":2139,"src":"6299:62:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"6367:358:3","text":" @notice module:user-config\n @dev Minimum number of cast voted required for a proposal to be successful.\n NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the\n quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes})."},"functionSelector":"f8ce560a","id":1983,"implemented":false,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"6739:6:3","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"timepoint","nameLocation":"6754:9:3","nodeType":"VariableDeclaration","scope":1983,"src":"6746:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6745:19:3"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"6794:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1980,"name":"uint256","nodeType":"ElementaryTypeName","src":"6794:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6793:9:3"},"scope":2139,"src":"6730:73:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"6809:274:3","text":" @notice module:reputation\n @dev Voting power of an `account` at a specific `timepoint`.\n Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\n multiple), {ERC20Votes} tokens."},"functionSelector":"eb9019d4","id":1993,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"7097:8:3","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"account","nameLocation":"7114:7:3","nodeType":"VariableDeclaration","scope":1993,"src":"7106:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"timepoint","nameLocation":"7131:9:3","nodeType":"VariableDeclaration","scope":1993,"src":"7123:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7123:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7105:36:3"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"7171:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7170:9:3"},"scope":2139,"src":"7088:92:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"7186:148:3","text":" @notice module:reputation\n @dev Voting power of an `account` at a specific `timepoint` given additional encoded parameters."},"functionSelector":"9a802a6d","id":2005,"implemented":false,"kind":"function","modifiers":[],"name":"getVotesWithParams","nameLocation":"7348:18:3","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"account","nameLocation":"7384:7:3","nodeType":"VariableDeclaration","scope":2005,"src":"7376:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"7376:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"timepoint","nameLocation":"7409:9:3","nodeType":"VariableDeclaration","scope":2005,"src":"7401:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"7401:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"params","nameLocation":"7441:6:3","nodeType":"VariableDeclaration","scope":2005,"src":"7428:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"7428:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7366:87:3"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"7483:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7482:9:3"},"scope":2139,"src":"7339:153:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"7498:111:3","text":" @notice module:voting\n @dev Returns whether `account` has cast a vote on `proposalId`."},"functionSelector":"43859632","id":2015,"implemented":false,"kind":"function","modifiers":[],"name":"hasVoted","nameLocation":"7623:8:3","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"proposalId","nameLocation":"7640:10:3","nodeType":"VariableDeclaration","scope":2015,"src":"7632:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"7632:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"account","nameLocation":"7660:7:3","nodeType":"VariableDeclaration","scope":2015,"src":"7652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"7652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7631:37:3"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"7698:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2012,"name":"bool","nodeType":"ElementaryTypeName","src":"7698:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7697:6:3"},"scope":2139,"src":"7614:90:3","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"7710:226:3","text":" @dev Create a new proposal. Vote start after a delay specified by {IGovernor-votingDelay} and lasts for a\n duration specified by {IGovernor-votingPeriod}.\n Emits a {ProposalCreated} event."},"functionSelector":"7d5e81e2","id":2032,"implemented":false,"kind":"function","modifiers":[],"name":"propose","nameLocation":"7950:7:3","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"targets","nameLocation":"7984:7:3","nodeType":"VariableDeclaration","scope":2032,"src":"7967:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"7967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2018,"nodeType":"ArrayTypeName","src":"7967:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"values","nameLocation":"8018:6:3","nodeType":"VariableDeclaration","scope":2032,"src":"8001:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"8001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ArrayTypeName","src":"8001:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"calldatas","nameLocation":"8049:9:3","nodeType":"VariableDeclaration","scope":2032,"src":"8034:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"8034:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2024,"nodeType":"ArrayTypeName","src":"8034:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"description","nameLocation":"8082:11:3","nodeType":"VariableDeclaration","scope":2032,"src":"8068:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"8068:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7957:142:3"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"proposalId","nameLocation":"8132:10:3","nodeType":"VariableDeclaration","scope":2032,"src":"8124:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"8124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8123:20:3"},"scope":2139,"src":"7941:203:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"8150:329:3","text":" @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\n deadline to be reached.\n Emits a {ProposalExecuted} event.\n Note: some module can modify the requirements for execution, for example by adding an additional timelock."},"functionSelector":"2656227d","id":2049,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"8493:7:3","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"targets","nameLocation":"8527:7:3","nodeType":"VariableDeclaration","scope":2049,"src":"8510:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"8510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2035,"nodeType":"ArrayTypeName","src":"8510:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"values","nameLocation":"8561:6:3","nodeType":"VariableDeclaration","scope":2049,"src":"8544:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"8544:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ArrayTypeName","src":"8544:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"calldatas","nameLocation":"8592:9:3","nodeType":"VariableDeclaration","scope":2049,"src":"8577:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2040,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2041,"nodeType":"ArrayTypeName","src":"8577:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"descriptionHash","nameLocation":"8619:15:3","nodeType":"VariableDeclaration","scope":2049,"src":"8611:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8611:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8500:140:3"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"proposalId","nameLocation":"8681:10:3","nodeType":"VariableDeclaration","scope":2049,"src":"8673:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"8673:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8672:20:3"},"scope":2139,"src":"8484:209:3","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"8699:205:3","text":" @dev Cancel a proposal. A proposal is cancellable by the proposer, but only while it is Pending state, i.e.\n before the vote starts.\n Emits a {ProposalCanceled} event."},"functionSelector":"452115d6","id":2066,"implemented":false,"kind":"function","modifiers":[],"name":"cancel","nameLocation":"8918:6:3","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"targets","nameLocation":"8951:7:3","nodeType":"VariableDeclaration","scope":2066,"src":"8934:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"8934:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2052,"nodeType":"ArrayTypeName","src":"8934:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"values","nameLocation":"8985:6:3","nodeType":"VariableDeclaration","scope":2066,"src":"8968:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"8968:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ArrayTypeName","src":"8968:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"calldatas","nameLocation":"9016:9:3","nodeType":"VariableDeclaration","scope":2066,"src":"9001:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"9001:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2058,"nodeType":"ArrayTypeName","src":"9001:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"descriptionHash","nameLocation":"9043:15:3","nodeType":"VariableDeclaration","scope":2066,"src":"9035:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9035:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8924:140:3"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"proposalId","nameLocation":"9097:10:3","nodeType":"VariableDeclaration","scope":2066,"src":"9089:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9088:20:3"},"scope":2139,"src":"8909:200:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"9115:75:3","text":" @dev Cast a vote\n Emits a {VoteCast} event."},"functionSelector":"56781388","id":2076,"implemented":false,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"9204:8:3","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"proposalId","nameLocation":"9221:10:3","nodeType":"VariableDeclaration","scope":2076,"src":"9213:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"9213:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"support","nameLocation":"9239:7:3","nodeType":"VariableDeclaration","scope":2076,"src":"9233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2070,"name":"uint8","nodeType":"ElementaryTypeName","src":"9233:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9212:35:3"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"balance","nameLocation":"9280:7:3","nodeType":"VariableDeclaration","scope":2076,"src":"9272:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9271:17:3"},"scope":2139,"src":"9195:94:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"9295:89:3","text":" @dev Cast a vote with a reason\n Emits a {VoteCast} event."},"functionSelector":"7b3c71d3","id":2088,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReason","nameLocation":"9398:18:3","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"proposalId","nameLocation":"9434:10:3","nodeType":"VariableDeclaration","scope":2088,"src":"9426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"9426:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"support","nameLocation":"9460:7:3","nodeType":"VariableDeclaration","scope":2088,"src":"9454:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2080,"name":"uint8","nodeType":"ElementaryTypeName","src":"9454:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"reason","nameLocation":"9493:6:3","nodeType":"VariableDeclaration","scope":2088,"src":"9477:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2082,"name":"string","nodeType":"ElementaryTypeName","src":"9477:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9416:89:3"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"balance","nameLocation":"9538:7:3","nodeType":"VariableDeclaration","scope":2088,"src":"9530:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"9530:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9529:17:3"},"scope":2139,"src":"9389:158:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"9553:181:3","text":" @dev Cast a vote with a reason and additional encoded parameters\n Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params."},"functionSelector":"5f398a14","id":2102,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParams","nameLocation":"9748:27:3","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"proposalId","nameLocation":"9793:10:3","nodeType":"VariableDeclaration","scope":2102,"src":"9785:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"9785:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"support","nameLocation":"9819:7:3","nodeType":"VariableDeclaration","scope":2102,"src":"9813:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2092,"name":"uint8","nodeType":"ElementaryTypeName","src":"9813:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"reason","nameLocation":"9852:6:3","nodeType":"VariableDeclaration","scope":2102,"src":"9836:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2094,"name":"string","nodeType":"ElementaryTypeName","src":"9836:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"params","nameLocation":"9881:6:3","nodeType":"VariableDeclaration","scope":2102,"src":"9868:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"9868:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9775:118:3"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"balance","nameLocation":"9926:7:3","nodeType":"VariableDeclaration","scope":2102,"src":"9918:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"9918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9917:17:3"},"scope":2139,"src":"9739:196:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"9941:117:3","text":" @dev Cast a vote using the user's cryptographic signature.\n Emits a {VoteCast} event."},"functionSelector":"3bccf4fd","id":2118,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteBySig","nameLocation":"10072:13:3","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"proposalId","nameLocation":"10103:10:3","nodeType":"VariableDeclaration","scope":2118,"src":"10095:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"10095:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"support","nameLocation":"10129:7:3","nodeType":"VariableDeclaration","scope":2118,"src":"10123:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2106,"name":"uint8","nodeType":"ElementaryTypeName","src":"10123:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"v","nameLocation":"10152:1:3","nodeType":"VariableDeclaration","scope":2118,"src":"10146:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2108,"name":"uint8","nodeType":"ElementaryTypeName","src":"10146:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"r","nameLocation":"10171:1:3","nodeType":"VariableDeclaration","scope":2118,"src":"10163:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10163:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"s","nameLocation":"10190:1:3","nodeType":"VariableDeclaration","scope":2118,"src":"10182:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10182:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10085:112:3"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"balance","nameLocation":"10230:7:3","nodeType":"VariableDeclaration","scope":2118,"src":"10222:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10221:17:3"},"scope":2139,"src":"10063:176:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"10245:223:3","text":" @dev Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature.\n Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params."},"functionSelector":"03420181","id":2138,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParamsBySig","nameLocation":"10482:32:3","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"proposalId","nameLocation":"10532:10:3","nodeType":"VariableDeclaration","scope":2138,"src":"10524:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"10524:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"support","nameLocation":"10558:7:3","nodeType":"VariableDeclaration","scope":2138,"src":"10552:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2122,"name":"uint8","nodeType":"ElementaryTypeName","src":"10552:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"reason","nameLocation":"10591:6:3","nodeType":"VariableDeclaration","scope":2138,"src":"10575:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2124,"name":"string","nodeType":"ElementaryTypeName","src":"10575:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"params","nameLocation":"10620:6:3","nodeType":"VariableDeclaration","scope":2138,"src":"10607:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"10607:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"v","nameLocation":"10642:1:3","nodeType":"VariableDeclaration","scope":2138,"src":"10636:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2128,"name":"uint8","nodeType":"ElementaryTypeName","src":"10636:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"r","nameLocation":"10661:1:3","nodeType":"VariableDeclaration","scope":2138,"src":"10653:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10653:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"s","nameLocation":"10680:1:3","nodeType":"VariableDeclaration","scope":2138,"src":"10672:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10514:173:3"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"balance","nameLocation":"10720:7:3","nodeType":"VariableDeclaration","scope":2138,"src":"10712:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10712:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10711:17:3"},"scope":2139,"src":"10473:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2140,"src":"287:10444:3","usedErrors":[]}],"src":"108:10624:3"},"id":3},"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","exportedSymbols":{"Address":[3374],"Context":[4937],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"GovernorCountingSimple":[2365],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":2366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2141,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"132:23:4"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":2142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2366,"sourceUnit":1801,"src":"157:25:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2144,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"336:8:4"},"id":2145,"nodeType":"InheritanceSpecifier","src":"336:8:4"}],"canonicalName":"GovernorCountingSimple","contractDependencies":[],"contractKind":"contract","documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"184:107:4","text":" @dev Extension of {Governor} for simple, 3 options, vote counting.\n _Available since v4.3._"},"fullyImplemented":false,"id":2365,"linearizedBaseContracts":[2365,1800,3026,3044,2139,2985,6136,2961,6160,6172,4937],"name":"GovernorCountingSimple","nameLocation":"310:22:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GovernorCountingSimple.VoteType","id":2149,"members":[{"id":2146,"name":"Against","nameLocation":"458:7:4","nodeType":"EnumValue","src":"458:7:4"},{"id":2147,"name":"For","nameLocation":"475:3:4","nodeType":"EnumValue","src":"475:3:4"},{"id":2148,"name":"Abstain","nameLocation":"488:7:4","nodeType":"EnumValue","src":"488:7:4"}],"name":"VoteType","nameLocation":"439:8:4","nodeType":"EnumDefinition","src":"434:67:4"},{"canonicalName":"GovernorCountingSimple.ProposalVote","id":2160,"members":[{"constant":false,"id":2151,"mutability":"mutable","name":"againstVotes","nameLocation":"545:12:4","nodeType":"VariableDeclaration","scope":2160,"src":"537:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"forVotes","nameLocation":"575:8:4","nodeType":"VariableDeclaration","scope":2160,"src":"567:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"abstainVotes","nameLocation":"601:12:4","nodeType":"VariableDeclaration","scope":2160,"src":"593:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"hasVoted","nameLocation":"648:8:4","nodeType":"VariableDeclaration","scope":2160,"src":"623:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2158,"keyType":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"623:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ProposalVote","nameLocation":"514:12:4","nodeType":"StructDefinition","scope":2365,"src":"507:156:4","visibility":"public"},{"constant":false,"id":2165,"mutability":"mutable","name":"_proposalVotes","nameLocation":"710:14:4","nodeType":"VariableDeclaration","scope":2365,"src":"669:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote)"},"typeName":{"id":2164,"keyType":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"669:32:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote)"},"valueType":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"ProposalVote","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"688:12:4"},"referencedDeclaration":2160,"src":"688:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}}},"visibility":"private"},{"baseFunctions":[1913],"body":{"id":2174,"nodeType":"Block","src":"921:58:4","statements":[{"expression":{"hexValue":"737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"938:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3816e28b29b48b8e7bf93291116c21473ef28186248d173042d1986430466e1","typeString":"literal_string \"support=bravo&quorum=for,abstain\""},"value":"support=bravo&quorum=for,abstain"},"functionReturnParameters":2171,"id":2173,"nodeType":"Return","src":"931:41:4"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"731:54:4","text":" @dev See {IGovernor-COUNTING_MODE}."},"functionSelector":"dd4e2ba5","id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"COUNTING_MODE","nameLocation":"852:13:4","nodeType":"FunctionDefinition","overrides":{"id":2168,"nodeType":"OverrideSpecifier","overrides":[],"src":"888:8:4"},"parameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"865:2:4"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"906:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"906:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"905:15:4"},"scope":2365,"src":"843:136:4","stateMutability":"pure","virtual":true,"visibility":"public"},{"baseFunctions":[2015],"body":{"id":2193,"nodeType":"Block","src":"1138:68:4","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":2186,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1155:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":2188,"indexExpression":{"id":2187,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1170:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1155:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"id":2189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"1155:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2191,"indexExpression":{"id":2190,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1191:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1155:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2185,"id":2192,"nodeType":"Return","src":"1148:51:4"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"985:49:4","text":" @dev See {IGovernor-hasVoted}."},"functionSelector":"43859632","id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"hasVoted","nameLocation":"1048:8:4","nodeType":"FunctionDefinition","overrides":{"id":2182,"nodeType":"OverrideSpecifier","overrides":[],"src":"1114:8:4"},"parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"proposalId","nameLocation":"1065:10:4","nodeType":"VariableDeclaration","scope":2194,"src":"1057:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"account","nameLocation":"1085:7:4","nodeType":"VariableDeclaration","scope":2194,"src":"1077:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1056:37:4"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"1132:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"1132:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1131:6:4"},"scope":2365,"src":"1039:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2221,"nodeType":"Block","src":"1426:173:4","statements":[{"assignments":[2208],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"proposalVote","nameLocation":"1457:12:4","nodeType":"VariableDeclaration","scope":2221,"src":"1436:33:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":2207,"nodeType":"UserDefinedTypeName","pathNode":{"id":2206,"name":"ProposalVote","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"1436:12:4"},"referencedDeclaration":2160,"src":"1436:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":2212,"initialValue":{"baseExpression":{"id":2209,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1472:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":2211,"indexExpression":{"id":2210,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1487:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1472:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1436:62:4"},{"expression":{"components":[{"expression":{"id":2213,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1516:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":2151,"src":"1516:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2215,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1543:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"1543:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2217,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1566:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"1566:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1515:77:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":2205,"id":2220,"nodeType":"Return","src":"1508:84:4"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"1212:61:4","text":" @dev Accessor to the internal vote counts."},"functionSelector":"544ffc9c","id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"proposalVotes","nameLocation":"1287:13:4","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"proposalId","nameLocation":"1318:10:4","nodeType":"VariableDeclaration","scope":2222,"src":"1310:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:34:4"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"againstVotes","nameLocation":"1372:12:4","nodeType":"VariableDeclaration","scope":2222,"src":"1364:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"forVotes","nameLocation":"1394:8:4","nodeType":"VariableDeclaration","scope":2222,"src":"1386:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"abstainVotes","nameLocation":"1412:12:4","nodeType":"VariableDeclaration","scope":2222,"src":"1404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1363:62:4"},"scope":2365,"src":"1278:321:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[816],"body":{"id":2250,"nodeType":"Block","src":"1754:186:4","statements":[{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"proposalVote","nameLocation":"1785:12:4","nodeType":"VariableDeclaration","scope":2250,"src":"1764:33:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":2232,"nodeType":"UserDefinedTypeName","pathNode":{"id":2231,"name":"ProposalVote","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"1764:12:4"},"referencedDeclaration":2160,"src":"1764:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":2237,"initialValue":{"baseExpression":{"id":2234,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1800:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":2236,"indexExpression":{"id":2235,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1815:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1800:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1764:62:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2240,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1868:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2239,"name":"proposalSnapshot","nodeType":"Identifier","overloadedDeclarations":[778],"referencedDeclaration":778,"src":"1851:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"quorum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1844:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1844:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2243,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"1884:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"1884:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2245,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"1908:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"1908:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1884:49:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1844:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2230,"id":2249,"nodeType":"Return","src":"1837:96:4"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"1605:54:4","text":" @dev See {Governor-_quorumReached}."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"_quorumReached","nameLocation":"1673:14:4","nodeType":"FunctionDefinition","overrides":{"id":2227,"nodeType":"OverrideSpecifier","overrides":[],"src":"1730:8:4"},"parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"proposalId","nameLocation":"1696:10:4","nodeType":"VariableDeclaration","scope":2251,"src":"1688:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1687:20:4"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"1748:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"1748:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1747:6:4"},"scope":2365,"src":"1664:276:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[824],"body":{"id":2273,"nodeType":"Block","src":"2164:146:4","statements":[{"assignments":[2262],"declarations":[{"constant":false,"id":2262,"mutability":"mutable","name":"proposalVote","nameLocation":"2195:12:4","nodeType":"VariableDeclaration","scope":2273,"src":"2174:33:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":2261,"nodeType":"UserDefinedTypeName","pathNode":{"id":2260,"name":"ProposalVote","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"2174:12:4"},"referencedDeclaration":2160,"src":"2174:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":2266,"initialValue":{"baseExpression":{"id":2263,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2210:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":2265,"indexExpression":{"id":2264,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"2225:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2210:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2174:62:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2267,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2254:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"2254:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2269,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2278:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":2151,"src":"2278:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2254:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2259,"id":2272,"nodeType":"Return","src":"2247:56:4"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"1946:123:4","text":" @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes."},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"_voteSucceeded","nameLocation":"2083:14:4","nodeType":"FunctionDefinition","overrides":{"id":2256,"nodeType":"OverrideSpecifier","overrides":[],"src":"2140:8:4"},"parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"proposalId","nameLocation":"2106:10:4","nodeType":"VariableDeclaration","scope":2274,"src":"2098:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:20:4"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"2158:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"2158:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2157:6:4"},"scope":2365,"src":"2074:236:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[850],"body":{"id":2363,"nodeType":"Block","src":"2634:628:4","statements":[{"assignments":[2291],"declarations":[{"constant":false,"id":2291,"mutability":"mutable","name":"proposalVote","nameLocation":"2665:12:4","nodeType":"VariableDeclaration","scope":2363,"src":"2644:33:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"ProposalVote","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"2644:12:4"},"referencedDeclaration":2160,"src":"2644:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":2295,"initialValue":{"baseExpression":{"id":2292,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2680:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$2160_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":2294,"indexExpression":{"id":2293,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"2695:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2680:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2644:62:4"},{"expression":{"arguments":[{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2725:31:4","subExpression":{"baseExpression":{"expression":{"id":2297,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2726:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"2726:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2300,"indexExpression":{"id":2299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2748:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2726:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656164792063617374","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2758:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","typeString":"literal_string \"GovernorVotingSimple: vote already cast\""},"value":"GovernorVotingSimple: vote already cast"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","typeString":"literal_string \"GovernorVotingSimple: vote already cast\""}],"id":2296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2717:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"2717:83:4"},{"expression":{"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2305,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2810:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"2810:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2309,"indexExpression":{"id":2307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2832:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2810:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2843:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2810:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2312,"nodeType":"ExpressionStatement","src":"2810:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2862:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":2316,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2879:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2149_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Against","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"2879:16:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2873:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2314,"name":"uint8","nodeType":"ElementaryTypeName","src":"2873:5:4","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2873:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2862:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2968:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":2330,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2985:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2149_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"For","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"2985:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2979:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2328,"name":"uint8","nodeType":"ElementaryTypeName","src":"2979:5:4","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2968:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"3066:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":2344,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3083:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2149_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Abstain","nodeType":"MemberAccess","referencedDeclaration":2148,"src":"3083:16:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$2149","typeString":"enum GovernorCountingSimple.VoteType"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3077:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2342,"name":"uint8","nodeType":"ElementaryTypeName","src":"3077:5:4","typeDescriptions":{}}},"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3077:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3066:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2359,"nodeType":"Block","src":"3168:88:4","statements":[{"expression":{"arguments":[{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616c756520666f7220656e756d20566f746554797065","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3189:55:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","typeString":"literal_string \"GovernorVotingSimple: invalid value for enum VoteType\""},"value":"GovernorVotingSimple: invalid value for enum VoteType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","typeString":"literal_string \"GovernorVotingSimple: invalid value for enum VoteType\""}],"id":2355,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3182:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3182:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"ExpressionStatement","src":"3182:63:4"}]},"id":2360,"nodeType":"IfStatement","src":"3062:194:4","trueBody":{"id":2354,"nodeType":"Block","src":"3102:60:4","statements":[{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2348,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3116:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"3116:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2351,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3145:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3116:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"3116:35:4"}]}},"id":2361,"nodeType":"IfStatement","src":"2964:292:4","trueBody":{"id":2340,"nodeType":"Block","src":"3000:56:4","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2334,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3014:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":2153,"src":"3014:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2337,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3039:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3014:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"3014:31:4"}]}},"id":2362,"nodeType":"IfStatement","src":"2858:398:4","trueBody":{"id":2326,"nodeType":"Block","src":"2898:60:4","statements":[{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2320,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"2912:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$2160_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":2322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":2151,"src":"2912:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2323,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2941:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2912:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"2912:35:4"}]}}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"2316:129:4","text":" @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo)."},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"_countVote","nameLocation":"2459:10:4","nodeType":"FunctionDefinition","overrides":{"id":2287,"nodeType":"OverrideSpecifier","overrides":[],"src":"2625:8:4"},"parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"proposalId","nameLocation":"2487:10:4","nodeType":"VariableDeclaration","scope":2364,"src":"2479:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"account","nameLocation":"2515:7:4","nodeType":"VariableDeclaration","scope":2364,"src":"2507:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"support","nameLocation":"2538:7:4","nodeType":"VariableDeclaration","scope":2364,"src":"2532:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2280,"name":"uint8","nodeType":"ElementaryTypeName","src":"2532:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"weight","nameLocation":"2563:6:4","nodeType":"VariableDeclaration","scope":2364,"src":"2555:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2555:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2364,"src":"2579:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2284,"name":"bytes","nodeType":"ElementaryTypeName","src":"2579:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2469:138:4"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[],"src":"2634:0:4"},"scope":2365,"src":"2450:812:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2366,"src":"292:2972:4","usedErrors":[5024,5026,8691]}],"src":"132:3133:4"},"id":4},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","exportedSymbols":{"Address":[3374],"Context":[4937],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"GovernorSettings":[2543],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":2544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2367,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:5"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":2368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2544,"sourceUnit":1801,"src":"151:25:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2370,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"329:8:5"},"id":2371,"nodeType":"InheritanceSpecifier","src":"329:8:5"}],"canonicalName":"GovernorSettings","contractDependencies":[],"contractKind":"contract","documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"178:112:5","text":" @dev Extension of {Governor} for settings updatable through governance.\n _Available since v4.4._"},"fullyImplemented":false,"id":2543,"linearizedBaseContracts":[2543,1800,3026,3044,2139,2985,6136,2961,6160,6172,4937],"name":"GovernorSettings","nameLocation":"309:16:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2373,"mutability":"mutable","name":"_votingDelay","nameLocation":"360:12:5","nodeType":"VariableDeclaration","scope":2543,"src":"344:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2375,"mutability":"mutable","name":"_votingPeriod","nameLocation":"394:13:5","nodeType":"VariableDeclaration","scope":2543,"src":"378:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2377,"mutability":"mutable","name":"_proposalThreshold","nameLocation":"429:18:5","nodeType":"VariableDeclaration","scope":2543,"src":"413:34:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"id":2383,"name":"VotingDelaySet","nameLocation":"460:14:5","nodeType":"EventDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"indexed":false,"mutability":"mutable","name":"oldVotingDelay","nameLocation":"483:14:5","nodeType":"VariableDeclaration","scope":2383,"src":"475:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"indexed":false,"mutability":"mutable","name":"newVotingDelay","nameLocation":"507:14:5","nodeType":"VariableDeclaration","scope":2383,"src":"499:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"499:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"474:48:5"},"src":"454:69:5"},{"anonymous":false,"id":2389,"name":"VotingPeriodSet","nameLocation":"534:15:5","nodeType":"EventDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"indexed":false,"mutability":"mutable","name":"oldVotingPeriod","nameLocation":"558:15:5","nodeType":"VariableDeclaration","scope":2389,"src":"550:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2387,"indexed":false,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"583:15:5","nodeType":"VariableDeclaration","scope":2389,"src":"575:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"549:50:5"},"src":"528:72:5"},{"anonymous":false,"id":2395,"name":"ProposalThresholdSet","nameLocation":"611:20:5","nodeType":"EventDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"indexed":false,"mutability":"mutable","name":"oldProposalThreshold","nameLocation":"640:20:5","nodeType":"VariableDeclaration","scope":2395,"src":"632:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2393,"indexed":false,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"670:20:5","nodeType":"VariableDeclaration","scope":2395,"src":"662:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:60:5"},"src":"605:87:5"},{"body":{"id":2417,"nodeType":"Block","src":"867:156:5","statements":[{"expression":{"arguments":[{"id":2406,"name":"initialVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"893:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2405,"name":"_setVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"877:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"877:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2408,"nodeType":"ExpressionStatement","src":"877:35:5"},{"expression":{"arguments":[{"id":2410,"name":"initialVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"939:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2409,"name":"_setVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"922:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2412,"nodeType":"ExpressionStatement","src":"922:37:5"},{"expression":{"arguments":[{"id":2414,"name":"initialProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"991:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"_setProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"969:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"969:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"969:47:5"}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"698:61:5","text":" @dev Initialize the governance parameters."},"id":2418,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"initialVotingDelay","nameLocation":"784:18:5","nodeType":"VariableDeclaration","scope":2418,"src":"776:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"initialVotingPeriod","nameLocation":"812:19:5","nodeType":"VariableDeclaration","scope":2418,"src":"804:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"initialProposalThreshold","nameLocation":"841:24:5","nodeType":"VariableDeclaration","scope":2418,"src":"833:32:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"775:91:5"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"867:0:5"},"scope":2543,"src":"764:259:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1969],"body":{"id":2427,"nodeType":"Block","src":"1156:36:5","statements":[{"expression":{"id":2425,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1173:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2424,"id":2426,"nodeType":"Return","src":"1166:19:5"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1029:52:5","text":" @dev See {IGovernor-votingDelay}."},"functionSelector":"3932abb1","id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"1095:11:5","nodeType":"FunctionDefinition","overrides":{"id":2421,"nodeType":"OverrideSpecifier","overrides":[],"src":"1129:8:5"},"parameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"1106:2:5"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2428,"src":"1147:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:9:5"},"scope":2543,"src":"1086:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1975],"body":{"id":2437,"nodeType":"Block","src":"1327:37:5","statements":[{"expression":{"id":2435,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1344:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2436,"nodeType":"Return","src":"1337:20:5"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"1198:53:5","text":" @dev See {IGovernor-votingPeriod}."},"functionSelector":"02a251a3","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"1265:12:5","nodeType":"FunctionDefinition","overrides":{"id":2431,"nodeType":"OverrideSpecifier","overrides":[],"src":"1300:8:5"},"parameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"1277:2:5"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"1318:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:9:5"},"scope":2543,"src":"1256:108:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[763],"body":{"id":2447,"nodeType":"Block","src":"1508:42:5","statements":[{"expression":{"id":2445,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1525:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2446,"nodeType":"Return","src":"1518:25:5"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"1370:57:5","text":" @dev See {Governor-proposalThreshold}."},"functionSelector":"b58131b0","id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"1441:17:5","nodeType":"FunctionDefinition","overrides":{"id":2441,"nodeType":"OverrideSpecifier","overrides":[],"src":"1481:8:5"},"parameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"1458:2:5"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2448,"src":"1499:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1498:9:5"},"scope":2543,"src":"1432:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2460,"nodeType":"Block","src":"1801:48:5","statements":[{"expression":{"arguments":[{"id":2457,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"1827:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2456,"name":"_setVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1811:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1811:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"1811:31:5"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"1556:162:5","text":" @dev Update the voting delay. This operation can only be performed through a governance proposal.\n Emits a {VotingDelaySet} event."},"functionSelector":"70b0f660","id":2461,"implemented":true,"kind":"function","modifiers":[{"id":2454,"kind":"modifierInvocation","modifierName":{"id":2453,"name":"onlyGovernance","nodeType":"IdentifierPath","referencedDeclaration":490,"src":"1786:14:5"},"nodeType":"ModifierInvocation","src":"1786:14:5"}],"name":"setVotingDelay","nameLocation":"1732:14:5","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"newVotingDelay","nameLocation":"1755:14:5","nodeType":"VariableDeclaration","scope":2461,"src":"1747:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:24:5"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"1801:0:5"},"scope":2543,"src":"1723:126:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2473,"nodeType":"Block","src":"2104:50:5","statements":[{"expression":{"arguments":[{"id":2470,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2131:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2469,"name":"_setVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2114:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2114:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"2114:33:5"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"1855:164:5","text":" @dev Update the voting period. This operation can only be performed through a governance proposal.\n Emits a {VotingPeriodSet} event."},"functionSelector":"ea0217cf","id":2474,"implemented":true,"kind":"function","modifiers":[{"id":2467,"kind":"modifierInvocation","modifierName":{"id":2466,"name":"onlyGovernance","nodeType":"IdentifierPath","referencedDeclaration":490,"src":"2089:14:5"},"nodeType":"ModifierInvocation","src":"2089:14:5"}],"name":"setVotingPeriod","nameLocation":"2033:15:5","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"2057:15:5","nodeType":"VariableDeclaration","scope":2474,"src":"2049:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2049:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2048:25:5"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[],"src":"2104:0:5"},"scope":2543,"src":"2024:130:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2486,"nodeType":"Block","src":"2429:60:5","statements":[{"expression":{"arguments":[{"id":2483,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"2461:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"_setProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"2439:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2439:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"2439:43:5"}]},"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"2160:174:5","text":" @dev Update the proposal threshold. This operation can only be performed through a governance proposal.\n Emits a {ProposalThresholdSet} event."},"functionSelector":"ece40cc1","id":2487,"implemented":true,"kind":"function","modifiers":[{"id":2480,"kind":"modifierInvocation","modifierName":{"id":2479,"name":"onlyGovernance","nodeType":"IdentifierPath","referencedDeclaration":490,"src":"2414:14:5"},"nodeType":"ModifierInvocation","src":"2414:14:5"}],"name":"setProposalThreshold","nameLocation":"2348:20:5","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"2377:20:5","nodeType":"VariableDeclaration","scope":2487,"src":"2369:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2368:30:5"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"2429:0:5"},"scope":2543,"src":"2339:150:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2502,"nodeType":"Block","src":"2673:105:5","statements":[{"eventCall":{"arguments":[{"id":2494,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2703:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2495,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2717:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"VotingDelaySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2688:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2688:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"EmitStatement","src":"2683:49:5"},{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2498,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2742:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2499,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2757:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2742:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2501,"nodeType":"ExpressionStatement","src":"2742:29:5"}]},"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"2495:107:5","text":" @dev Internal setter for the voting delay.\n Emits a {VotingDelaySet} event."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"_setVotingDelay","nameLocation":"2616:15:5","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"newVotingDelay","nameLocation":"2640:14:5","nodeType":"VariableDeclaration","scope":2503,"src":"2632:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:24:5"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[],"src":"2673:0:5"},"scope":2543,"src":"2607:171:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2525,"nodeType":"Block","src":"2966:248:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3041:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3041:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420746f6f206c6f77","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3062:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","typeString":"literal_string \"GovernorSettings: voting period too low\""},"value":"GovernorSettings: voting period too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","typeString":"literal_string \"GovernorSettings: voting period too low\""}],"id":2509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3033:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3033:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2515,"nodeType":"ExpressionStatement","src":"3033:71:5"},{"eventCall":{"arguments":[{"id":2517,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3135:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2518,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3150:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2516,"name":"VotingPeriodSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3119:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3119:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2520,"nodeType":"EmitStatement","src":"3114:52:5"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2521,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3176:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2522,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3192:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3176:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"3176:31:5"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"2784:109:5","text":" @dev Internal setter for the voting period.\n Emits a {VotingPeriodSet} event."},"id":2526,"implemented":true,"kind":"function","modifiers":[],"name":"_setVotingPeriod","nameLocation":"2907:16:5","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"2932:15:5","nodeType":"VariableDeclaration","scope":2526,"src":"2924:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2923:25:5"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[],"src":"2966:0:5"},"scope":2543,"src":"2898:316:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2541,"nodeType":"Block","src":"3422:135:5","statements":[{"eventCall":{"arguments":[{"id":2533,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3458:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2534,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3478:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2532,"name":"ProposalThresholdSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"3437:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3437:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"EmitStatement","src":"3432:67:5"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"3509:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2538,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3530:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3509:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"3509:41:5"}]},"documentation":{"id":2527,"nodeType":"StructuredDocumentation","src":"3220:119:5","text":" @dev Internal setter for the proposal threshold.\n Emits a {ProposalThresholdSet} event."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"_setProposalThreshold","nameLocation":"3353:21:5","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"3383:20:5","nodeType":"VariableDeclaration","scope":2542,"src":"3375:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:30:5"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[],"src":"3422:0:5"},"scope":2543,"src":"3344:213:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2544,"src":"291:3268:5","usedErrors":[5024,5026,8691]}],"src":"126:3434:5"},"id":5},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","exportedSymbols":{"Address":[3374],"Context":[4937],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"GovernorVotes":[2640],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC5805":[2970],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"IVotes":[2933],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":2641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2545,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:6"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":2546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2641,"sourceUnit":1801,"src":"148:25:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":2547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2641,"sourceUnit":2971,"src":"174:39:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2549,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"415:8:6"},"id":2550,"nodeType":"InheritanceSpecifier","src":"415:8:6"}],"canonicalName":"GovernorVotes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"215:164:6","text":" @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"},"fullyImplemented":false,"id":2640,"linearizedBaseContracts":[2640,1800,3026,3044,2139,2985,6136,2961,6160,6172,4937],"name":"GovernorVotes","nameLocation":"398:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":2553,"mutability":"immutable","name":"token","nameLocation":"456:5:6","nodeType":"VariableDeclaration","scope":2640,"src":"430:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"},"typeName":{"id":2552,"nodeType":"UserDefinedTypeName","pathNode":{"id":2551,"name":"IERC5805","nodeType":"IdentifierPath","referencedDeclaration":2970,"src":"430:8:6"},"referencedDeclaration":2970,"src":"430:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"visibility":"public"},{"body":{"id":2568,"nodeType":"Block","src":"501:56:6","statements":[{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"511:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2563,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"536:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"528:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:6","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"528:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2560,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"519:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC5805_$2970_$","typeString":"type(contract IERC5805)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"519:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"src":"511:39:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"id":2567,"nodeType":"ExpressionStatement","src":"511:39:6"}]},"id":2569,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"tokenAddress","nameLocation":"487:12:6","nodeType":"VariableDeclaration","scope":2569,"src":"480:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":2933,"src":"480:6:6"},"referencedDeclaration":2933,"src":"480:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"}},"visibility":"internal"}],"src":"479:21:6"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[],"src":"501:0:6"},"scope":2640,"src":"468:89:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1900],"body":{"id":2595,"nodeType":"Block","src":"797:172:6","statements":[{"clauses":[{"block":{"id":2584,"nodeType":"Block","src":"852:41:6","statements":[{"expression":{"id":2582,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"873:9:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2575,"id":2583,"nodeType":"Return","src":"866:16:6"}]},"errorName":"","id":2585,"nodeType":"TryCatchClause","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"timepoint","nameLocation":"841:9:6","nodeType":"VariableDeclaration","scope":2585,"src":"834:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2579,"name":"uint48","nodeType":"ElementaryTypeName","src":"834:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"833:18:6"},"src":"825:68:6"},{"block":{"id":2592,"nodeType":"Block","src":"900:63:6","statements":[{"expression":{"arguments":[{"expression":{"id":2588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"939:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"939:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"921:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":7691,"src":"921:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2575,"id":2591,"nodeType":"Return","src":"914:38:6"}]},"errorName":"","id":2593,"nodeType":"TryCatchClause","src":"894:69:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"811:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clock","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"811:11:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint48_$","typeString":"function () view external returns (uint48)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"811:13:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2594,"nodeType":"TryStatement","src":"807:156:6"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"563:166:6","text":" @dev Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token\n does not implement EIP-6372."},"functionSelector":"91ddadf4","id":2596,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"743:5:6","nodeType":"FunctionDefinition","overrides":{"id":2572,"nodeType":"OverrideSpecifier","overrides":[],"src":"771:8:6"},"parameters":{"id":2571,"nodeType":"ParameterList","parameters":[],"src":"748:2:6"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"789:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2573,"name":"uint48","nodeType":"ElementaryTypeName","src":"789:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"788:8:6"},"scope":2640,"src":"734:235:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1907],"body":{"id":2618,"nodeType":"Block","src":"1199:184:6","statements":[{"clauses":[{"block":{"id":2611,"nodeType":"Block","src":"1266:41:6","statements":[{"expression":{"id":2609,"name":"clockmode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1287:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2602,"id":2610,"nodeType":"Return","src":"1280:16:6"}]},"errorName":"","id":2612,"nodeType":"TryCatchClause","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"clockmode","nameLocation":"1255:9:6","nodeType":"VariableDeclaration","scope":2612,"src":"1241:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"1241:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1240:25:6"},"src":"1232:75:6"},{"block":{"id":2615,"nodeType":"Block","src":"1314:63:6","statements":[{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1335:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":2602,"id":2614,"nodeType":"Return","src":"1328:38:6"}]},"errorName":"","id":2616,"nodeType":"TryCatchClause","src":"1308:69:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2603,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1213:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CLOCK_MODE","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"1213:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1213:18:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2617,"nodeType":"TryStatement","src":"1209:168:6"}]},"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"975:91:6","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"1133:10:6","nodeType":"FunctionDefinition","overrides":{"id":2599,"nodeType":"OverrideSpecifier","overrides":[],"src":"1166:8:6"},"parameters":{"id":2598,"nodeType":"ParameterList","parameters":[],"src":"1143:2:6"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2619,"src":"1184:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2600,"name":"string","nodeType":"ElementaryTypeName","src":"1184:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1183:15:6"},"scope":2640,"src":"1124:259:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[836],"body":{"id":2638,"nodeType":"Block","src":"1667:62:6","statements":[{"expression":{"arguments":[{"id":2634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"1703:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2635,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1712:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2632,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1684:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPastVotes","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"1684:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1684:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2631,"id":2637,"nodeType":"Return","src":"1677:45:6"}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"1389:114:6","text":" Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes})."},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotes","nameLocation":"1517:9:6","nodeType":"FunctionDefinition","overrides":{"id":2628,"nodeType":"OverrideSpecifier","overrides":[],"src":"1640:8:6"},"parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"account","nameLocation":"1544:7:6","nodeType":"VariableDeclaration","scope":2639,"src":"1536:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"timepoint","nameLocation":"1569:9:6","nodeType":"VariableDeclaration","scope":2639,"src":"1561:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1561:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"1588:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"1588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:91:6"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"1658:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1657:9:6"},"scope":2640,"src":"1508:221:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2641,"src":"380:1351:6","usedErrors":[5024,5026,8691]}],"src":"123:1609:6"},"id":6},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","exportedSymbols":{"Address":[3374],"Checkpoints":[4915],"Context":[4937],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"GovernorVotes":[2640],"GovernorVotesQuorumFraction":[2855],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC5805":[2970],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"IVotes":[2933],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":2856,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"137:23:7"},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","file":"./GovernorVotes.sol","id":2643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2856,"sourceUnit":2641,"src":"162:29:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","file":"../../utils/Checkpoints.sol","id":2644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2856,"sourceUnit":4916,"src":"192:37:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":2645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2856,"sourceUnit":8580,"src":"230:39:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2647,"name":"GovernorVotes","nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"507:13:7"},"id":2648,"nodeType":"InheritanceSpecifier","src":"507:13:7"}],"canonicalName":"GovernorVotesQuorumFraction","contractDependencies":[],"contractKind":"contract","documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"271:186:7","text":" @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a\n fraction of the total supply.\n _Available since v4.3._"},"fullyImplemented":false,"id":2855,"linearizedBaseContracts":[2855,2640,1800,3026,3044,2139,2985,6136,2961,6160,6172,4937],"name":"GovernorVotesQuorumFraction","nameLocation":"476:27:7","nodeType":"ContractDefinition","nodes":[{"id":2652,"libraryName":{"id":2649,"name":"Checkpoints","nodeType":"IdentifierPath","referencedDeclaration":4915,"src":"533:11:7"},"nodeType":"UsingForDirective","src":"527:43:7","typeName":{"id":2651,"nodeType":"UserDefinedTypeName","pathNode":{"id":2650,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"549:20:7"},"referencedDeclaration":3915,"src":"549:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}}},{"constant":false,"id":2654,"mutability":"mutable","name":"_quorumNumerator","nameLocation":"592:16:7","nodeType":"VariableDeclaration","scope":2855,"src":"576:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"665:47:7","text":"@custom:oz-retyped-from Checkpoints.History"},"id":2658,"mutability":"mutable","name":"_quorumNumeratorHistory","nameLocation":"746:23:7","nodeType":"VariableDeclaration","scope":2855,"src":"717:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":2657,"nodeType":"UserDefinedTypeName","pathNode":{"id":2656,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"717:20:7"},"referencedDeclaration":3915,"src":"717:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"private"},{"anonymous":false,"id":2664,"name":"QuorumNumeratorUpdated","nameLocation":"782:22:7","nodeType":"EventDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"indexed":false,"mutability":"mutable","name":"oldQuorumNumerator","nameLocation":"813:18:7","nodeType":"VariableDeclaration","scope":2664,"src":"805:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"indexed":false,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"841:18:7","nodeType":"VariableDeclaration","scope":2664,"src":"833:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"804:56:7"},"src":"776:85:7"},{"body":{"id":2674,"nodeType":"Block","src":"1290:61:7","statements":[{"expression":{"arguments":[{"id":2671,"name":"quorumNumeratorValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1323:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2670,"name":"_updateQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"1300:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1300:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2673,"nodeType":"ExpressionStatement","src":"1300:44:7"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"867:376:7","text":" @dev Initialize quorum as a fraction of the token's total supply.\n The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is\n specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be\n customized by overriding {quorumDenominator}."},"id":2675,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"quorumNumeratorValue","nameLocation":"1268:20:7","nodeType":"VariableDeclaration","scope":2675,"src":"1260:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1259:30:7"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[],"src":"1290:0:7"},"scope":2855,"src":"1248:103:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2692,"nodeType":"Block","src":"1513:126:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2681,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"1530:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"1530:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1530:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1530:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2687,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"1600:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":4140,"src":"1600:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$3915_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$3915_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer) view returns (uint224)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1600:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1530:102:7","trueExpression":{"id":2686,"name":"_quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"1581:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2680,"id":2691,"nodeType":"Return","src":"1523:109:7"}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"1357:86:7","text":" @dev Returns the current quorum numerator. See {quorumDenominator}."},"functionSelector":"a7713a70","id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"quorumNumerator","nameLocation":"1457:15:7","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[],"src":"1472:2:7"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"1504:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1503:9:7"},"scope":2855,"src":"1448:191:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2743,"nodeType":"Block","src":"1834:582:7","statements":[{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"length","nameLocation":"1908:6:7","nodeType":"VariableDeclaration","scope":2743,"src":"1900:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2706,"initialValue":{"expression":{"expression":{"id":2703,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"1917:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"1917:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1917:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1900:60:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"1974:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1974:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"1970:65:7","trueBody":{"id":2712,"nodeType":"Block","src":"1987:48:7","statements":[{"expression":{"id":2710,"name":"_quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2008:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2700,"id":2711,"nodeType":"Return","src":"2001:23:7"}]}},{"assignments":[2718],"declarations":[{"constant":false,"id":2718,"mutability":"mutable","name":"latest","nameLocation":"2136:6:7","nodeType":"VariableDeclaration","scope":2743,"src":"2103:39:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":2717,"nodeType":"UserDefinedTypeName","pathNode":{"id":2716,"name":"Checkpoints.Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"2103:25:7"},"referencedDeclaration":3920,"src":"2103:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":2725,"initialValue":{"baseExpression":{"expression":{"id":2719,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2145:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"2145:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":2724,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2182:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2191:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2182:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2145:48:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2103:90:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2726,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2207:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":2727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"2207:11:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2728,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"2222:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2207:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2734,"nodeType":"IfStatement","src":"2203:75:7","trueBody":{"id":2733,"nodeType":"Block","src":"2233:45:7","statements":[{"expression":{"expression":{"id":2730,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2254:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":2731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"2254:13:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2700,"id":2732,"nodeType":"Return","src":"2247:20:7"}]}},{"expression":{"arguments":[{"arguments":[{"id":2739,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"2398:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2737,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"2380:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"2380:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2380:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2735,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2338:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":4110,"src":"2338:41:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$3915_storage_ptr_$_t_uint32_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$3915_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,uint32) view returns (uint224)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2338:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2700,"id":2742,"nodeType":"Return","src":"2331:78:7"}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"1645:102:7","text":" @dev Returns the quorum numerator at a specific timepoint. See {quorumDenominator}."},"functionSelector":"60c4247f","id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"quorumNumerator","nameLocation":"1761:15:7","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"timepoint","nameLocation":"1785:9:7","nodeType":"VariableDeclaration","scope":2744,"src":"1777:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1777:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1776:19:7"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"1825:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1824:9:7"},"scope":2855,"src":"1752:664:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2752,"nodeType":"Block","src":"2589:27:7","statements":[{"expression":{"hexValue":"313030","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:3:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"functionReturnParameters":2749,"id":2751,"nodeType":"Return","src":"2599:10:7"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"2422:95:7","text":" @dev Returns the quorum denominator. Defaults to 100, but may be overridden."},"functionSelector":"97c3d334","id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"quorumDenominator","nameLocation":"2531:17:7","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"2548:2:7"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"2580:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2579:9:7"},"scope":2855,"src":"2522:94:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1983],"body":{"id":2775,"nodeType":"Block","src":"2833:112:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2764,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"2876:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2851:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC5805_$2970","typeString":"contract IERC5805"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPastTotalSupply","nodeType":"MemberAccess","referencedDeclaration":2902,"src":"2851:24:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2851:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2767,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"2905:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"name":"quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[2693,2744],"referencedDeclaration":2744,"src":"2889:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2889:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:64:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2850:66:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2771,"name":"quorumDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2919:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2919:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:88:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2761,"id":2774,"nodeType":"Return","src":"2843:95:7"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"2622:124:7","text":" @dev Returns the quorum for a timepoint, in terms of number of votes: `supply * numerator / denominator`."},"functionSelector":"f8ce560a","id":2776,"implemented":true,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"2760:6:7","nodeType":"FunctionDefinition","overrides":{"id":2758,"nodeType":"OverrideSpecifier","overrides":[],"src":"2806:8:7"},"parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"timepoint","nameLocation":"2775:9:7","nodeType":"VariableDeclaration","scope":2776,"src":"2767:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2766:19:7"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"2824:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:9:7"},"scope":2855,"src":"2751:194:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2788,"nodeType":"Block","src":"3312:59:7","statements":[{"expression":{"arguments":[{"id":2785,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"3345:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2784,"name":"_updateQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"3322:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3322:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"ExpressionStatement","src":"3322:42:7"}]},"documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"2951:265:7","text":" @dev Changes the quorum numerator.\n Emits a {QuorumNumeratorUpdated} event.\n Requirements:\n - Must be called through a governance proposal.\n - New numerator must be smaller or equal to the denominator."},"functionSelector":"06f3f9e6","id":2789,"implemented":true,"kind":"function","modifiers":[{"id":2782,"kind":"modifierInvocation","modifierName":{"id":2781,"name":"onlyGovernance","nodeType":"IdentifierPath","referencedDeclaration":490,"src":"3297:14:7"},"nodeType":"ModifierInvocation","src":"3297:14:7"}],"name":"updateQuorumNumerator","nameLocation":"3230:21:7","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"3260:18:7","nodeType":"VariableDeclaration","scope":2789,"src":"3252:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"3252:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3251:28:7"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[],"src":"3312:0:7"},"scope":2855,"src":"3221:150:7","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":2853,"nodeType":"Block","src":"3669:853:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3700:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2797,"name":"quorumDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"3722:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3722:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3700:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61746f72","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3755:69:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","typeString":"literal_string \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\""},"value":"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","typeString":"literal_string \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\""}],"id":2795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3679:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3679:155:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"3679:155:7"},{"assignments":[2804],"declarations":[{"constant":false,"id":2804,"mutability":"mutable","name":"oldQuorumNumerator","nameLocation":"3853:18:7","nodeType":"VariableDeclaration","scope":2853,"src":"3845:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2807,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2805,"name":"quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[2693,2744],"referencedDeclaration":2693,"src":"3874:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3874:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3845:46:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"4025:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4025:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2811,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4052:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"4052:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4052:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4099:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4052:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4025:75:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2833,"nodeType":"IfStatement","src":"4021:263:7","trueBody":{"id":2832,"nodeType":"Block","src":"4102:182:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4208:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":2827,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"4238:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"4219:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"4219:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4219:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"id":2822,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"4175:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Checkpoints_$4915_$","typeString":"type(library Checkpoints)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Checkpoint224","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"4175:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"4175:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"expression":{"id":2817,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4116:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"4116:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4116:41:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3920_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4116:157:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"ExpressionStatement","src":"4116:157:7"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2839,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[2596],"referencedDeclaration":2596,"src":"4388:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4388:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2837,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"4370:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"4370:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4370:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2844,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"4417:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2842,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"4398:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"4398:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4398:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"id":2834,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4341:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":2836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"4341:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$3915_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$bound_to$_t_struct$_Trace224_$3915_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4341:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"id":2847,"nodeType":"ExpressionStatement","src":"4341:96:7"},{"eventCall":{"arguments":[{"id":2849,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"4476:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2850,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"4496:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2848,"name":"QuorumNumeratorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"4453:22:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4453:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"EmitStatement","src":"4448:67:7"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"3377:210:7","text":" @dev Changes the quorum numerator.\n Emits a {QuorumNumeratorUpdated} event.\n Requirements:\n - New numerator must be smaller or equal to the denominator."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"_updateQuorumNumerator","nameLocation":"3601:22:7","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"3632:18:7","nodeType":"VariableDeclaration","scope":2854,"src":"3624:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3623:28:7"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"3669:0:7"},"scope":2855,"src":"3592:930:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2856,"src":"458:4066:7","usedErrors":[5024,5026,8691]}],"src":"137:4388:7"},"id":7},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[2933]},"id":2934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2857,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"135:132:8","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":2933,"linearizedBaseContracts":[2933],"name":"IVotes","nameLocation":"278:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"291:71:8","text":" @dev Emitted when an account changes their delegate."},"id":2867,"name":"DelegateChanged","nameLocation":"373:15:8","nodeType":"EventDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:8","nodeType":"VariableDeclaration","scope":2867,"src":"389:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:8","nodeType":"VariableDeclaration","scope":2867,"src":"416:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:8","nodeType":"VariableDeclaration","scope":2867,"src":"446:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:8"},"src":"367:107:8"},{"anonymous":false,"documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"480:124:8","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":2876,"name":"DelegateVotesChanged","nameLocation":"615:20:8","nodeType":"EventDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:8","nodeType":"VariableDeclaration","scope":2876,"src":"636:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2872,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:8","nodeType":"VariableDeclaration","scope":2876,"src":"662:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2874,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:8","nodeType":"VariableDeclaration","scope":2876,"src":"687:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:8"},"src":"609:98:8"},{"documentation":{"id":2877,"nodeType":"StructuredDocumentation","src":"713:79:8","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":2884,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:8","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"account","nameLocation":"823:7:8","nodeType":"VariableDeclaration","scope":2884,"src":"815:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:8"},"returnParameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"855:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:8"},"scope":2933,"src":"797:67:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"870:230:8","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":2894,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:8","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"account","nameLocation":"1135:7:8","nodeType":"VariableDeclaration","scope":2894,"src":"1127:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:8","nodeType":"VariableDeclaration","scope":2894,"src":"1144:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:8"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"1186:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:8"},"scope":2933,"src":"1105:90:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"1201:481:8","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":2902,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:8","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:8","nodeType":"VariableDeclaration","scope":2902,"src":"1715:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:8"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"1757:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:8"},"scope":2933,"src":"1687:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"1772:71:8","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":2910,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:8","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"account","nameLocation":"1875:7:8","nodeType":"VariableDeclaration","scope":2910,"src":"1867:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:8"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2910,"src":"1907:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:8"},"scope":2933,"src":"1848:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"1922:71:8","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":2916,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:8","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:8","nodeType":"VariableDeclaration","scope":2916,"src":"2016:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:8"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[],"src":"2043:0:8"},"scope":2933,"src":"1998:46:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"2050:67:8","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":2932,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:8","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:8","nodeType":"VariableDeclaration","scope":2932,"src":"2145:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:8","nodeType":"VariableDeclaration","scope":2932,"src":"2164:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:8","nodeType":"VariableDeclaration","scope":2932,"src":"2179:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"v","nameLocation":"2201:1:8","nodeType":"VariableDeclaration","scope":2932,"src":"2195:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2924,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"r","nameLocation":"2212:1:8","nodeType":"VariableDeclaration","scope":2932,"src":"2204:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"s","nameLocation":"2223:1:8","nodeType":"VariableDeclaration","scope":2932,"src":"2215:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:8"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"2234:0:8"},"scope":2933,"src":"2122:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2934,"src":"268:1969:8","usedErrors":[]}],"src":"110:2128:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[6172]},"id":2937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2937,"sourceUnit":6173,"src":"116:44:9","symbolAliases":[],"unitAlias":""}],"src":"91:70:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[2961]},"id":2962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2938,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2961,"linearizedBaseContracts":[2961],"name":"IERC5267","nameLocation":"142:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"157:84:10","text":" @dev MAY be emitted to signal that the domain could have changed."},"id":2941,"name":"EIP712DomainChanged","nameLocation":"252:19:10","nodeType":"EventDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[],"src":"271:2:10"},"src":"246:28:10"},{"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"280:140:10","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":2960,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:10","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[],"src":"446:2:10"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"fields","nameLocation":"516:6:10","nodeType":"VariableDeclaration","scope":2960,"src":"509:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2944,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"name","nameLocation":"550:4:10","nodeType":"VariableDeclaration","scope":2960,"src":"536:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2946,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"version","nameLocation":"582:7:10","nodeType":"VariableDeclaration","scope":2960,"src":"568:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2948,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"chainId","nameLocation":"611:7:10","nodeType":"VariableDeclaration","scope":2960,"src":"603:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:10","nodeType":"VariableDeclaration","scope":2960,"src":"632:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2952,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"salt","nameLocation":"679:4:10","nodeType":"VariableDeclaration","scope":2960,"src":"671:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"extensions","nameLocation":"714:10:10","nodeType":"VariableDeclaration","scope":2960,"src":"697:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ArrayTypeName","src":"697:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:10"},"scope":2961,"src":"425:310:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2962,"src":"132:605:10","usedErrors":[]}],"src":"107:631:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[2970],"IERC6372":[2985],"IVotes":[2933]},"id":2971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2963,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:11"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":2964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":2934,"src":"132:40:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":2965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2971,"sourceUnit":2986,"src":"173:24:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2966,"name":"IERC6372","nodeType":"IdentifierPath","referencedDeclaration":2985,"src":"221:8:11"},"id":2967,"nodeType":"InheritanceSpecifier","src":"221:8:11"},{"baseName":{"id":2968,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":2933,"src":"231:6:11"},"id":2969,"nodeType":"InheritanceSpecifier","src":"231:6:11"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2970,"linearizedBaseContracts":[2970,2933,2985],"name":"IERC5805","nameLocation":"209:8:11","nodeType":"ContractDefinition","nodes":[],"scope":2971,"src":"199:41:11","usedErrors":[]}],"src":"107:134:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[2985]},"id":2986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2972,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2985,"linearizedBaseContracts":[2985],"name":"IERC6372","nameLocation":"142:8:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"157:133:12","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:12","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"309:2:12"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"335:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2975,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:12"},"scope":2985,"src":"295:48:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"349:48:12","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":2984,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:12","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"474:2:12"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"500:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2981,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:12"},"scope":2985,"src":"455:60:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2986,"src":"132:385:12","usedErrors":[]}],"src":"107:411:12"},"id":12},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[3026],"IERC165":[6172]},"id":3027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2987,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3027,"sourceUnit":6173,"src":"143:47:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2990,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":6172,"src":"262:7:13"},"id":2991,"nodeType":"InheritanceSpecifier","src":"262:7:13"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"192:39:13","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":3026,"linearizedBaseContracts":[3026,6172],"name":"IERC1155Receiver","nameLocation":"242:16:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"276:826:13","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":3007,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:13","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"operator","nameLocation":"1151:8:13","nodeType":"VariableDeclaration","scope":3007,"src":"1143:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"from","nameLocation":"1177:4:13","nodeType":"VariableDeclaration","scope":3007,"src":"1169:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"id","nameLocation":"1199:2:13","nodeType":"VariableDeclaration","scope":3007,"src":"1191:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"value","nameLocation":"1219:5:13","nodeType":"VariableDeclaration","scope":3007,"src":"1211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"data","nameLocation":"1249:4:13","nodeType":"VariableDeclaration","scope":3007,"src":"1234:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3001,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:13"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"1278:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3004,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:13"},"scope":3026,"src":"1107:179:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"1292:994:13","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":3025,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:13","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"operator","nameLocation":"2340:8:13","nodeType":"VariableDeclaration","scope":3025,"src":"2332:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"from","nameLocation":"2366:4:13","nodeType":"VariableDeclaration","scope":3025,"src":"2358:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"ids","nameLocation":"2399:3:13","nodeType":"VariableDeclaration","scope":3025,"src":"2380:22:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3014,"nodeType":"ArrayTypeName","src":"2380:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"values","nameLocation":"2431:6:13","nodeType":"VariableDeclaration","scope":3025,"src":"2412:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3017,"nodeType":"ArrayTypeName","src":"2412:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"data","nameLocation":"2462:4:13","nodeType":"VariableDeclaration","scope":3025,"src":"2447:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3019,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:13"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"2491:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3022,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:13"},"scope":3026,"src":"2291:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3027,"src":"232:2269:13","usedErrors":[]}],"src":"118:2384:13"},"id":13},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3044]},"id":3045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3028,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"141:152:14","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3044,"linearizedBaseContracts":[3044],"name":"IERC721Receiver","nameLocation":"304:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"326:493:14","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3043,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:14","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"operator","nameLocation":"867:8:14","nodeType":"VariableDeclaration","scope":3043,"src":"859:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"from","nameLocation":"893:4:14","nodeType":"VariableDeclaration","scope":3043,"src":"885:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:14","nodeType":"VariableDeclaration","scope":3043,"src":"907:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"data","nameLocation":"947:4:14","nodeType":"VariableDeclaration","scope":3043,"src":"932:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3037,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:14"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"976:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:14"},"scope":3044,"src":"824:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3045,"src":"294:692:14","usedErrors":[]}],"src":"116:871:14"},"id":14},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3374]},"id":3375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3046,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"126:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3374,"linearizedBaseContracts":[3374],"name":"Address","nameLocation":"202:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3061,"nodeType":"Block","src":"1478:254:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3055,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"1702:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3054,"id":3060,"nodeType":"Return","src":"1695:30:15"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"216:1191:15","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:15","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"account","nameLocation":"1440:7:15","nodeType":"VariableDeclaration","scope":3062,"src":"1432:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:15"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3062,"src":"1472:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3052,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:15"},"scope":3374,"src":"1412:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"2718:241:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3374","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3374","typeString":"library Address"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3071,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:15","typeDescriptions":{}}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3076,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"2761:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"ExpressionStatement","src":"2728:73:15"},{"assignments":[3082,null],"declarations":[{"constant":false,"id":3082,"mutability":"mutable","name":"success","nameLocation":"2818:7:15","nodeType":"VariableDeclaration","scope":3095,"src":"2813:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3089,"initialValue":{"arguments":[{"hexValue":"","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3083,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"2831:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3085,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"2853:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:15"},{"expression":{"arguments":[{"id":3091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2882:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3094,"nodeType":"ExpressionStatement","src":"2874:78:15"}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"1738:904:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:15","nodeType":"VariableDeclaration","scope":3096,"src":"2666:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3064,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"amount","nameLocation":"2701:6:15","nodeType":"VariableDeclaration","scope":3096,"src":"2693:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:15"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"2718:0:15"},"scope":3374,"src":"2647:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"3790:96:15","statements":[{"expression":{"arguments":[{"id":3107,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3829:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3108,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3837:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3106,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3154,3198],"referencedDeclaration":3198,"src":"3807:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3105,"id":3112,"nodeType":"Return","src":"3800:79:15"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"2965:731:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:15","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"target","nameLocation":"3731:6:15","nodeType":"VariableDeclaration","scope":3114,"src":"3723:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"data","nameLocation":"3752:4:15","nodeType":"VariableDeclaration","scope":3114,"src":"3739:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3100,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:15"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"3776:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:15"},"scope":3374,"src":"3701:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3133,"nodeType":"Block","src":"4255:76:15","statements":[{"expression":{"arguments":[{"id":3127,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4294:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3128,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"4302:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3130,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"4311:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3126,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3154,3198],"referencedDeclaration":3198,"src":"4272:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3125,"id":3132,"nodeType":"Return","src":"4265:59:15"}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"3892:211:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3134,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:15","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"target","nameLocation":"4147:6:15","nodeType":"VariableDeclaration","scope":3134,"src":"4139:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"data","nameLocation":"4176:4:15","nodeType":"VariableDeclaration","scope":3134,"src":"4163:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3118,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:15","nodeType":"VariableDeclaration","scope":3134,"src":"4190:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3120,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:15"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"4241:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:15"},"scope":3374,"src":"4108:223:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"4806:111:15","statements":[{"expression":{"arguments":[{"id":3147,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4845:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3148,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4853:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"4859:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3146,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3154,3198],"referencedDeclaration":3198,"src":"4823:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3145,"id":3152,"nodeType":"Return","src":"4816:94:15"}]},"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"4337:351:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:15","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"target","nameLocation":"4732:6:15","nodeType":"VariableDeclaration","scope":3154,"src":"4724:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"data","nameLocation":"4753:4:15","nodeType":"VariableDeclaration","scope":3154,"src":"4740:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"value","nameLocation":"4767:5:15","nodeType":"VariableDeclaration","scope":3154,"src":"4759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:15"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3154,"src":"4792:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3143,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:15"},"scope":3374,"src":"4693:224:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"5344:267:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3171,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3374","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3374","typeString":"library Address"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:15","typeDescriptions":{}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"5387:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3178,"nodeType":"ExpressionStatement","src":"5354:81:15"},{"assignments":[3180,3182],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"success","nameLocation":"5451:7:15","nodeType":"VariableDeclaration","scope":3197,"src":"5446:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3179,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:15","nodeType":"VariableDeclaration","scope":3197,"src":"5460:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3189,"initialValue":{"arguments":[{"id":3187,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"5513:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"5487:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"5506:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:15"},{"expression":{"arguments":[{"id":3191,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"5562:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3192,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"5570:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3193,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5579:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3194,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"5591:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3190,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"5535:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3167,"id":3196,"nodeType":"Return","src":"5528:76:15"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"4923:237:15","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:15","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"target","nameLocation":"5213:6:15","nodeType":"VariableDeclaration","scope":3198,"src":"5205:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"data","nameLocation":"5242:4:15","nodeType":"VariableDeclaration","scope":3198,"src":"5229:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"value","nameLocation":"5264:5:15","nodeType":"VariableDeclaration","scope":3198,"src":"5256:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:15","nodeType":"VariableDeclaration","scope":3198,"src":"5279:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3162,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:15"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"5330:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3165,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:15"},"scope":3374,"src":"5165:446:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3214,"nodeType":"Block","src":"5888:97:15","statements":[{"expression":{"arguments":[{"id":3209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"5924:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3210,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"5932:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3208,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3215,3244],"referencedDeclaration":3244,"src":"5905:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3207,"id":3213,"nodeType":"Return","src":"5898:80:15"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"5617:166:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3215,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:15","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"target","nameLocation":"5824:6:15","nodeType":"VariableDeclaration","scope":3215,"src":"5816:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"data","nameLocation":"5845:4:15","nodeType":"VariableDeclaration","scope":3215,"src":"5832:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:15"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3215,"src":"5874:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:15"},"scope":3374,"src":"5788:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3243,"nodeType":"Block","src":"6327:168:15","statements":[{"assignments":[3228,3230],"declarations":[{"constant":false,"id":3228,"mutability":"mutable","name":"success","nameLocation":"6343:7:15","nodeType":"VariableDeclaration","scope":3243,"src":"6338:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3227,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:15","nodeType":"VariableDeclaration","scope":3243,"src":"6352:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3229,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3235,"initialValue":{"arguments":[{"id":3233,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"6397:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"6379:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:15"},{"expression":{"arguments":[{"id":3237,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"6446:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3238,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"6454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3239,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"6463:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3240,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6475:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3236,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"6419:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3226,"id":3242,"nodeType":"Return","src":"6412:76:15"}]},"documentation":{"id":3216,"nodeType":"StructuredDocumentation","src":"5991:173:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3244,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:15","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"target","nameLocation":"6214:6:15","nodeType":"VariableDeclaration","scope":3244,"src":"6206:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"data","nameLocation":"6243:4:15","nodeType":"VariableDeclaration","scope":3244,"src":"6230:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:15","nodeType":"VariableDeclaration","scope":3244,"src":"6257:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3221,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:15"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3244,"src":"6313:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3224,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:15"},"scope":3374,"src":"6169:326:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"6771:101:15","statements":[{"expression":{"arguments":[{"id":3255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"6809:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3256,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"6817:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3254,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3261,3290],"referencedDeclaration":3290,"src":"6788:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3253,"id":3259,"nodeType":"Return","src":"6781:84:15"}]},"documentation":{"id":3245,"nodeType":"StructuredDocumentation","src":"6501:168:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:15","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"target","nameLocation":"6712:6:15","nodeType":"VariableDeclaration","scope":3261,"src":"6704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"data","nameLocation":"6733:4:15","nodeType":"VariableDeclaration","scope":3261,"src":"6720:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3248,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:15"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"6757:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3251,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:15"},"scope":3374,"src":"6674:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"7213:170:15","statements":[{"assignments":[3274,3276],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"success","nameLocation":"7229:7:15","nodeType":"VariableDeclaration","scope":3289,"src":"7224:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3273,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:15","nodeType":"VariableDeclaration","scope":3289,"src":"7238:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3275,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3281,"initialValue":{"arguments":[{"id":3279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"7285:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3277,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7265:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:15"},{"expression":{"arguments":[{"id":3283,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"7334:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3284,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"7342:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"7351:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3286,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"7363:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3282,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7307:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3272,"id":3288,"nodeType":"Return","src":"7300:76:15"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"6878:175:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:15","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"target","nameLocation":"7105:6:15","nodeType":"VariableDeclaration","scope":3290,"src":"7097:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"data","nameLocation":"7134:4:15","nodeType":"VariableDeclaration","scope":3290,"src":"7121:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3265,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:15","nodeType":"VariableDeclaration","scope":3290,"src":"7148:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3267,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:15"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"7199:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3270,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:15"},"scope":3374,"src":"7058:325:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"7865:434:15","statements":[{"condition":{"id":3304,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7879:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3326,"nodeType":"Block","src":"8235:58:15","statements":[{"expression":{"arguments":[{"id":3322,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"8257:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3323,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8269:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3321,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"8249:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"8249:33:15"}]},"id":3327,"nodeType":"IfStatement","src":"7875:418:15","trueBody":{"id":3320,"nodeType":"Block","src":"7888:341:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3305,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"7906:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3317,"nodeType":"IfStatement","src":"7902:286:15","trueBody":{"id":3316,"nodeType":"Block","src":"7930:258:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3311,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"8132:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3310,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8121:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"ExpressionStatement","src":"8113:60:15"}]}},{"expression":{"id":3318,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"8208:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3303,"id":3319,"nodeType":"Return","src":"8201:17:15"}]}}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"7389:277:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:15","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"target","nameLocation":"7724:6:15","nodeType":"VariableDeclaration","scope":3329,"src":"7716:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"success","nameLocation":"7745:7:15","nodeType":"VariableDeclaration","scope":3329,"src":"7740:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:15","nodeType":"VariableDeclaration","scope":3329,"src":"7762:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3296,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:15","nodeType":"VariableDeclaration","scope":3329,"src":"7795:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3298,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:15"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"7851:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3301,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:15"},"scope":3374,"src":"7671:628:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"8680:135:15","statements":[{"condition":{"id":3341,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"8694:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3350,"nodeType":"Block","src":"8751:58:15","statements":[{"expression":{"arguments":[{"id":3346,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8773:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3347,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"8785:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3345,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"8765:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3349,"nodeType":"ExpressionStatement","src":"8765:33:15"}]},"id":3351,"nodeType":"IfStatement","src":"8690:119:15","trueBody":{"id":3344,"nodeType":"Block","src":"8703:42:15","statements":[{"expression":{"id":3342,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8724:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3340,"id":3343,"nodeType":"Return","src":"8717:17:15"}]}}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"8305:210:15","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:15","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"success","nameLocation":"8560:7:15","nodeType":"VariableDeclaration","scope":3353,"src":"8555:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3331,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:15","nodeType":"VariableDeclaration","scope":3353,"src":"8577:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3333,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:15","nodeType":"VariableDeclaration","scope":3353,"src":"8610:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3335,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:15"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3353,"src":"8666:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3338,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:15"},"scope":3374,"src":"8520:295:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"8904:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3360,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8980:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3370,"nodeType":"Block","src":"9310:45:15","statements":[{"expression":{"arguments":[{"id":3367,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9331:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3366,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"ExpressionStatement","src":"9324:20:15"}]},"id":3371,"nodeType":"IfStatement","src":"8976:379:15","trueBody":{"id":3365,"nodeType":"Block","src":"9003:301:15","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:15","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:15"},"nodeType":"YulFunctionCall","src":"9202:17:15"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:15","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:15"},"nodeType":"YulFunctionCall","src":"9243:19:15"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:15"},"nodeType":"YulFunctionCall","src":"9236:44:15"},"nodeType":"YulExpressionStatement","src":"9236:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3355,"isOffset":false,"isSlot":false,"src":"9208:10:15","valueSize":1},{"declaration":3355,"isOffset":false,"isSlot":false,"src":"9251:10:15","valueSize":1}],"id":3364,"nodeType":"InlineAssembly","src":"9152:142:15"}]}}]},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:15","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:15","nodeType":"VariableDeclaration","scope":3373,"src":"8838:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3354,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:15","nodeType":"VariableDeclaration","scope":3373,"src":"8863:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3356,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:15"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"8904:0:15"},"scope":3374,"src":"8821:540:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3375,"src":"194:9169:15","usedErrors":[]}],"src":"101:9263:15"},"id":15},"@openzeppelin/contracts/utils/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","exportedSymbols":{"Checkpoints":[4915],"Math":[7038],"SafeCast":[8579]},"id":4916,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3376,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":7039,"src":"218:25:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4916,"sourceUnit":8580,"src":"244:29:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"275:432:16","text":" @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function.\n _Available since v4.5._"},"fullyImplemented":true,"id":4915,"linearizedBaseContracts":[4915],"name":"Checkpoints","nameLocation":"716:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Checkpoints.History","id":3384,"members":[{"constant":false,"id":3383,"mutability":"mutable","name":"_checkpoints","nameLocation":"772:12:16","nodeType":"VariableDeclaration","scope":3384,"src":"759:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"759:10:16"},"referencedDeclaration":3389,"src":"759:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3382,"nodeType":"ArrayTypeName","src":"759:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"}],"name":"History","nameLocation":"741:7:16","nodeType":"StructDefinition","scope":4915,"src":"734:57:16","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint","id":3389,"members":[{"constant":false,"id":3386,"mutability":"mutable","name":"_blockNumber","nameLocation":"832:12:16","nodeType":"VariableDeclaration","scope":3389,"src":"825:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3385,"name":"uint32","nodeType":"ElementaryTypeName","src":"825:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"_value","nameLocation":"862:6:16","nodeType":"VariableDeclaration","scope":3389,"src":"854:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3387,"name":"uint224","nodeType":"ElementaryTypeName","src":"854:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"804:10:16","nodeType":"StructDefinition","scope":4915,"src":"797:78:16","visibility":"public"},{"body":{"id":3445,"nodeType":"Block","src":"1317:344:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1335:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3402,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1349:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1349:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1335:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1363:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1327:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"ExpressionStatement","src":"1327:71:16"},{"assignments":[3409],"declarations":[{"constant":false,"id":3409,"mutability":"mutable","name":"key","nameLocation":"1415:3:16","nodeType":"VariableDeclaration","scope":3445,"src":"1408:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3408,"name":"uint32","nodeType":"ElementaryTypeName","src":"1408:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3414,"initialValue":{"arguments":[{"id":3412,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1439:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3410,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"1421:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"1421:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1421:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"1408:43:16"},{"assignments":[3416],"declarations":[{"constant":false,"id":3416,"mutability":"mutable","name":"len","nameLocation":"1470:3:16","nodeType":"VariableDeclaration","scope":3445,"src":"1462:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3420,"initialValue":{"expression":{"expression":{"id":3417,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1476:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"1476:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1462:38:16"},{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"pos","nameLocation":"1518:3:16","nodeType":"VariableDeclaration","scope":3445,"src":"1510:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3430,"initialValue":{"arguments":[{"expression":{"id":3424,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1543:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"1543:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3426,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1562:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3428,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"1570:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3423,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":3843,"src":"1524:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1510:64:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1591:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1591:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3436,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1620:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"1620:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1639:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1639:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3435,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"1606:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1606:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"1606:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1591:63:16","trueExpression":{"hexValue":"30","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3399,"id":3444,"nodeType":"Return","src":"1584:70:16"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"881:336:16","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n block, the requested block number must be in the past, excluding the current block."},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"getAtBlock","nameLocation":"1231:10:16","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"self","nameLocation":"1258:4:16","nodeType":"VariableDeclaration","scope":3446,"src":"1242:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3392,"nodeType":"UserDefinedTypeName","pathNode":{"id":3391,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"1242:7:16"},"referencedDeclaration":3384,"src":"1242:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"blockNumber","nameLocation":"1272:11:16","nodeType":"VariableDeclaration","scope":3446,"src":"1264:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1241:43:16"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3446,"src":"1308:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:9:16"},"scope":4915,"src":"1222:439:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3545,"nodeType":"Block","src":"2167:655:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"2185:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2199:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2199:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2185:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":3457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2177:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2177:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"ExpressionStatement","src":"2177:71:16"},{"assignments":[3466],"declarations":[{"constant":false,"id":3466,"mutability":"mutable","name":"key","nameLocation":"2265:3:16","nodeType":"VariableDeclaration","scope":3545,"src":"2258:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3465,"name":"uint32","nodeType":"ElementaryTypeName","src":"2258:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"id":3469,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"2289:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"2271:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"2271:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2271:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2258:43:16"},{"assignments":[3473],"declarations":[{"constant":false,"id":3473,"mutability":"mutable","name":"len","nameLocation":"2320:3:16","nodeType":"VariableDeclaration","scope":3545,"src":"2312:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3477,"initialValue":{"expression":{"expression":{"id":3474,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"2326:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"2326:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2326:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2312:38:16"},{"assignments":[3479],"declarations":[{"constant":false,"id":3479,"mutability":"mutable","name":"low","nameLocation":"2369:3:16","nodeType":"VariableDeclaration","scope":3545,"src":"2361:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3481,"initialValue":{"hexValue":"30","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2361:15:16"},{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"high","nameLocation":"2394:4:16","nodeType":"VariableDeclaration","scope":3545,"src":"2386:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3485,"initialValue":{"id":3484,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2401:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2386:18:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2419:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2419:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3520,"nodeType":"IfStatement","src":"2415:242:16","trueBody":{"id":3519,"nodeType":"Block","src":"2428:229:16","statements":[{"assignments":[3490],"declarations":[{"constant":false,"id":3490,"mutability":"mutable","name":"mid","nameLocation":"2450:3:16","nodeType":"VariableDeclaration","scope":3519,"src":"2442:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3497,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2456:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3494,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2472:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3492,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"2462:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":6542,"src":"2462:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2462:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2442:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"2494:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":3500,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"2514:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"2514:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3502,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"2533:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"2500:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"2500:50:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2494:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3517,"nodeType":"Block","src":"2601:46:16","statements":[{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3511,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"2619:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"2625:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2625:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2619:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"2619:13:16"}]},"id":3518,"nodeType":"IfStatement","src":"2490:157:16","trueBody":{"id":3510,"nodeType":"Block","src":"2552:43:16","statements":[{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3506,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"2570:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3507,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"2577:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2570:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"2570:10:16"}]}}]}},{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"pos","nameLocation":"2675:3:16","nodeType":"VariableDeclaration","scope":3545,"src":"2667:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"arguments":[{"expression":{"id":3524,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"2700:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"2700:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":3526,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"2719:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3527,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"2724:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3528,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"2729:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3523,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":3843,"src":"2681:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2681:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2667:67:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2752:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2759:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2752:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3536,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"2781:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"2781:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3538,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2800:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2800:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3535,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"2767:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2767:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"2767:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2752:63:16","trueExpression":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3456,"id":3544,"nodeType":"Return","src":"2745:70:16"}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"1667:386:16","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n checkpoints."},"id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"getAtProbablyRecentBlock","nameLocation":"2067:24:16","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"self","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":3546,"src":"2092:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3449,"nodeType":"UserDefinedTypeName","pathNode":{"id":3448,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"2092:7:16"},"referencedDeclaration":3384,"src":"2092:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"blockNumber","nameLocation":"2122:11:16","nodeType":"VariableDeclaration","scope":3546,"src":"2114:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2091:43:16"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"2158:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:16"},"scope":4915,"src":"2058:764:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"3087:110:16","statements":[{"expression":{"arguments":[{"expression":{"id":3560,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3112:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"3112:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"arguments":[{"expression":{"id":3564,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3149:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3149:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3562,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"3131:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":7741,"src":"3131:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3131:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":3569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"3183:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3567,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"3164:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":7141,"src":"3164:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3164:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3559,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3791,4293,4795],"referencedDeclaration":3791,"src":"3104:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3104:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3558,"id":3572,"nodeType":"Return","src":"3097:93:16"}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"2828:167:16","text":" @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n Returns previous value and new value."},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3009:4:16","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"self","nameLocation":"3030:4:16","nodeType":"VariableDeclaration","scope":3574,"src":"3014:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3549,"nodeType":"UserDefinedTypeName","pathNode":{"id":3548,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"3014:7:16"},"referencedDeclaration":3384,"src":"3014:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"value","nameLocation":"3044:5:16","nodeType":"VariableDeclaration","scope":3574,"src":"3036:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3013:37:16"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"3069:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"3078:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:18:16"},"scope":4915,"src":"3000:197:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3607,"nodeType":"Block","src":"3600:59:16","statements":[{"expression":{"arguments":[{"id":3598,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3622:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},{"arguments":[{"arguments":[{"id":3601,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3638:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}],"id":3600,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[3638,4140,4642],"referencedDeclaration":3638,"src":"3631:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$3384_storage_ptr_$returns$_t_uint224_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3603,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"3645:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3599,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3628:2:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3628:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"name":"push","nodeType":"Identifier","overloadedDeclarations":[3574,3608,3943,4445],"referencedDeclaration":3574,"src":"3617:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$3384_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3617:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3596,"id":3606,"nodeType":"Return","src":"3610:42:16"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"3203:221:16","text":" @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n be set to `op(latest, delta)`.\n Returns previous value and new value."},"id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3438:4:16","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"self","nameLocation":"3468:4:16","nodeType":"VariableDeclaration","scope":3608,"src":"3452:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3577,"nodeType":"UserDefinedTypeName","pathNode":{"id":3576,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"3452:7:16"},"referencedDeclaration":3384,"src":"3452:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"op","nameLocation":"3532:2:16","nodeType":"VariableDeclaration","scope":3608,"src":"3482:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":3587,"nodeType":"FunctionTypeName","parameterTypes":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"3491:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"3500:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3490:18:16"},"returnParameterTypes":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"3523:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:16"},"src":"3482:52:16","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"delta","nameLocation":"3552:5:16","nodeType":"VariableDeclaration","scope":3608,"src":"3544:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:121:16"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"3582:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"3591:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3581:18:16"},"scope":4915,"src":"3429:230:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"3849:135:16","statements":[{"assignments":[3618],"declarations":[{"constant":false,"id":3618,"mutability":"mutable","name":"pos","nameLocation":"3867:3:16","nodeType":"VariableDeclaration","scope":3637,"src":"3859:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3622,"initialValue":{"expression":{"expression":{"id":3619,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3873:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"3873:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3873:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3859:38:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"3914:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3914:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3628,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3943:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"3943:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"3962:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"3929:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3929:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"3929:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3914:63:16","trueExpression":{"hexValue":"30","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3616,"id":3636,"nodeType":"Return","src":"3907:70:16"}]},"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"3665:109:16","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3788:6:16","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"self","nameLocation":"3811:4:16","nodeType":"VariableDeclaration","scope":3638,"src":"3795:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3611,"nodeType":"UserDefinedTypeName","pathNode":{"id":3610,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"3795:7:16"},"referencedDeclaration":3384,"src":"3795:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"3794:22:16"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3638,"src":"3840:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3614,"name":"uint224","nodeType":"ElementaryTypeName","src":"3840:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3839:9:16"},"scope":4915,"src":"3779:205:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3686,"nodeType":"Block","src":"4298:279:16","statements":[{"assignments":[3652],"declarations":[{"constant":false,"id":3652,"mutability":"mutable","name":"pos","nameLocation":"4316:3:16","nodeType":"VariableDeclaration","scope":3686,"src":"4308:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3656,"initialValue":{"expression":{"expression":{"id":3653,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"4322:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"4322:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4322:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4308:38:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4367:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3684,"nodeType":"Block","src":"4421:150:16","statements":[{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"ckpt","nameLocation":"4453:4:16","nodeType":"VariableDeclaration","scope":3684,"src":"4435:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3667,"nodeType":"UserDefinedTypeName","pathNode":{"id":3666,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"4435:10:16"},"referencedDeclaration":3389,"src":"4435:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3676,"initialValue":{"arguments":[{"expression":{"id":3670,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"4474:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"4474:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4493:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4499:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3669,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"4460:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4460:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4435:66:16"},{"expression":{"components":[{"hexValue":"74727565","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4523:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3678,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"4529:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"4529:17:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3680,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"4548:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"4548:11:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:38:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3650,"id":3683,"nodeType":"Return","src":"4515:45:16"}]},"id":3685,"nodeType":"IfStatement","src":"4356:215:16","trueBody":{"id":3665,"nodeType":"Block","src":"4370:45:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4392:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4399:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4391:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3650,"id":3664,"nodeType":"Return","src":"4384:20:16"}]}}]},"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"3990:168:16","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3687,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"4172:16:16","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"self","nameLocation":"4214:4:16","nodeType":"VariableDeclaration","scope":3687,"src":"4198:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3641,"nodeType":"UserDefinedTypeName","pathNode":{"id":3640,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"4198:7:16"},"referencedDeclaration":3384,"src":"4198:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4188:36:16"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"exists","nameLocation":"4253:6:16","nodeType":"VariableDeclaration","scope":3687,"src":"4248:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3644,"name":"bool","nodeType":"ElementaryTypeName","src":"4248:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"_blockNumber","nameLocation":"4268:12:16","nodeType":"VariableDeclaration","scope":3687,"src":"4261:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3646,"name":"uint32","nodeType":"ElementaryTypeName","src":"4261:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"_value","nameLocation":"4290:6:16","nodeType":"VariableDeclaration","scope":3687,"src":"4282:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3648,"name":"uint224","nodeType":"ElementaryTypeName","src":"4282:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4247:50:16"},"scope":4915,"src":"4163:414:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3700,"nodeType":"Block","src":"4715:48:16","statements":[{"expression":{"expression":{"expression":{"id":3696,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"4732:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3383,"src":"4732:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4732:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3695,"id":3699,"nodeType":"Return","src":"4725:31:16"}]},"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"4583:57:16","text":" @dev Returns the number of checkpoint."},"id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4654:6:16","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"self","nameLocation":"4677:4:16","nodeType":"VariableDeclaration","scope":3701,"src":"4661:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3690,"nodeType":"UserDefinedTypeName","pathNode":{"id":3689,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"4661:7:16"},"referencedDeclaration":3384,"src":"4661:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_History_$3384_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4660:22:16"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"4706:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4706:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4705:9:16"},"scope":4915,"src":"4645:118:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3790,"nodeType":"Block","src":"5045:750:16","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"pos","nameLocation":"5063:3:16","nodeType":"VariableDeclaration","scope":3790,"src":"5055:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3721,"initialValue":{"expression":{"id":3719,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5069:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5069:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5055:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"5095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3788,"nodeType":"Block","src":"5676:113:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3779,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5726:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5739:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3778,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"5700:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5700:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3775,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5690:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5690:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$3389_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"ExpressionStatement","src":"5690:57:16"},{"expression":{"components":[{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5769:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5772:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5768:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3716,"id":3787,"nodeType":"Return","src":"5761:17:16"}]},"id":3789,"nodeType":"IfStatement","src":"5091:698:16","trueBody":{"id":3774,"nodeType":"Block","src":"5104:566:16","statements":[{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"last","nameLocation":"5188:4:16","nodeType":"VariableDeclaration","scope":3774,"src":"5170:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3726,"nodeType":"UserDefinedTypeName","pathNode":{"id":3725,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"5170:10:16"},"referencedDeclaration":3389,"src":"5170:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3734,"initialValue":{"arguments":[{"id":3729,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5209:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"5215:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5221:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"5195:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5195:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5170:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3736,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5301:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"5301:17:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3738,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5322:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5301:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5327:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":3735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5293:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3742,"nodeType":"ExpressionStatement","src":"5293:64:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3743,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5421:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"5421:17:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3745,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5442:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5421:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3767,"nodeType":"Block","src":"5529:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3762,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5583:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5596:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3761,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"5557:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5557:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3758,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5547:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5547:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$3389_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5547:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3766,"nodeType":"ExpressionStatement","src":"5547:57:16"}]},"id":3768,"nodeType":"IfStatement","src":"5417:202:16","trueBody":{"id":3757,"nodeType":"Block","src":"5447:76:16","statements":[{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3748,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"5479:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"5485:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5491:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5485:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3747,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"5465:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5465:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"5465:35:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5503:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5465:43:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3756,"nodeType":"ExpressionStatement","src":"5465:43:16"}]}},{"expression":{"components":[{"expression":{"id":3769,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5640:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3388,"src":"5640:11:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5653:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5639:20:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3716,"id":3773,"nodeType":"Return","src":"5632:27:16"}]}}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"4769:165:16","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4948:7:16","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"self","nameLocation":"4977:4:16","nodeType":"VariableDeclaration","scope":3791,"src":"4956:25:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3704,"nodeType":"UserDefinedTypeName","pathNode":{"id":3703,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"4956:10:16"},"referencedDeclaration":3389,"src":"4956:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3705,"nodeType":"ArrayTypeName","src":"4956:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"key","nameLocation":"4990:3:16","nodeType":"VariableDeclaration","scope":3791,"src":"4983:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3707,"name":"uint32","nodeType":"ElementaryTypeName","src":"4983:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"value","nameLocation":"5003:5:16","nodeType":"VariableDeclaration","scope":3791,"src":"4995:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3709,"name":"uint224","nodeType":"ElementaryTypeName","src":"4995:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4955:54:16"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"5027:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3712,"name":"uint224","nodeType":"ElementaryTypeName","src":"5027:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"5036:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3714,"name":"uint224","nodeType":"ElementaryTypeName","src":"5036:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5026:18:16"},"scope":4915,"src":"4939:856:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3842,"nodeType":"Block","src":"6304:275:16","statements":[{"body":{"id":3838,"nodeType":"Block","src":"6333:219:16","statements":[{"assignments":[3811],"declarations":[{"constant":false,"id":3811,"mutability":"mutable","name":"mid","nameLocation":"6355:3:16","nodeType":"VariableDeclaration","scope":3838,"src":"6347:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"6347:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"arguments":[{"id":3814,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"6374:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3815,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6379:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3812,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"6361:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"6361:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6361:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6347:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3819,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6416:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3820,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6422:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3818,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"6402:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6402:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"6402:37:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3823,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6442:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6402:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3836,"nodeType":"Block","src":"6496:46:16","statements":[{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3830,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"6514:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6520:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6526:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6514:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3835,"nodeType":"ExpressionStatement","src":"6514:13:16"}]},"id":3837,"nodeType":"IfStatement","src":"6398:144:16","trueBody":{"id":3829,"nodeType":"Block","src":"6447:43:16","statements":[{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6465:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3826,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6472:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6465:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"6465:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"6321:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3808,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6327:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3839,"nodeType":"WhileStatement","src":"6314:238:16"},{"expression":{"id":3840,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"6568:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3841,"nodeType":"Return","src":"6561:11:16"}]},"documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"5801:335:16","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6150:18:16","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"self","nameLocation":"6199:4:16","nodeType":"VariableDeclaration","scope":3843,"src":"6178:25:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3794,"nodeType":"UserDefinedTypeName","pathNode":{"id":3793,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"6178:10:16"},"referencedDeclaration":3389,"src":"6178:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3795,"nodeType":"ArrayTypeName","src":"6178:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"key","nameLocation":"6220:3:16","nodeType":"VariableDeclaration","scope":3843,"src":"6213:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3797,"name":"uint32","nodeType":"ElementaryTypeName","src":"6213:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"low","nameLocation":"6241:3:16","nodeType":"VariableDeclaration","scope":3843,"src":"6233:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6233:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"high","nameLocation":"6262:4:16","nodeType":"VariableDeclaration","scope":3843,"src":"6254:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6254:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6168:104:16"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"6295:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"6295:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6294:9:16"},"scope":4915,"src":"6141:438:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3894,"nodeType":"Block","src":"7089:275:16","statements":[{"body":{"id":3890,"nodeType":"Block","src":"7118:219:16","statements":[{"assignments":[3863],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"mid","nameLocation":"7140:3:16","nodeType":"VariableDeclaration","scope":3890,"src":"7132:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3869,"initialValue":{"arguments":[{"id":3866,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"7159:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3867,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7164:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3864,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"7146:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"7146:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7146:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7132:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3871,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"7201:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3872,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7207:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3870,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":3910,"src":"7187:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$3389_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7187:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"7187:37:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3875,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"7227:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7187:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3888,"nodeType":"Block","src":"7284:43:16","statements":[{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7302:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3885,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7309:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7302:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3887,"nodeType":"ExpressionStatement","src":"7302:10:16"}]},"id":3889,"nodeType":"IfStatement","src":"7183:144:16","trueBody":{"id":3883,"nodeType":"Block","src":"7232:46:16","statements":[{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3877,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"7250:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7256:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7262:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7256:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7250:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"7250:13:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"7106:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3860,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7112:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7106:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3891,"nodeType":"WhileStatement","src":"7099:238:16"},{"expression":{"id":3892,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7353:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3858,"id":3893,"nodeType":"Return","src":"7346:11:16"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"6585:336:16","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3895,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6935:18:16","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"self","nameLocation":"6984:4:16","nodeType":"VariableDeclaration","scope":3895,"src":"6963:25:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3846,"nodeType":"UserDefinedTypeName","pathNode":{"id":3845,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"6963:10:16"},"referencedDeclaration":3389,"src":"6963:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3847,"nodeType":"ArrayTypeName","src":"6963:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"key","nameLocation":"7005:3:16","nodeType":"VariableDeclaration","scope":3895,"src":"6998:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3849,"name":"uint32","nodeType":"ElementaryTypeName","src":"6998:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"low","nameLocation":"7026:3:16","nodeType":"VariableDeclaration","scope":3895,"src":"7018:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"7018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"high","nameLocation":"7047:4:16","nodeType":"VariableDeclaration","scope":3895,"src":"7039:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"7039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6953:104:16"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3895,"src":"7080:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"7080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7079:9:16"},"scope":4915,"src":"6926:438:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3909,"nodeType":"Block","src":"7619:125:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7638:100:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7659:1:16","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7662:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7652:6:16"},"nodeType":"YulFunctionCall","src":"7652:20:16"},"nodeType":"YulExpressionStatement","src":"7652:20:16"},{"nodeType":"YulAssignment","src":"7685:43:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7714:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7717:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7704:9:16"},"nodeType":"YulFunctionCall","src":"7704:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"7724:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:16"},"nodeType":"YulFunctionCall","src":"7700:28:16"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7685:11:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3902,"isOffset":false,"isSlot":false,"src":"7724:3:16","valueSize":1},{"declaration":3906,"isOffset":false,"isSlot":true,"src":"7685:11:16","suffix":"slot","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":true,"src":"7662:9:16","suffix":"slot","valueSize":1}],"id":3908,"nodeType":"InlineAssembly","src":"7629:109:16"}]},"documentation":{"id":3896,"nodeType":"StructuredDocumentation","src":"7370:132:16","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7516:13:16","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"self","nameLocation":"7551:4:16","nodeType":"VariableDeclaration","scope":3910,"src":"7530:25:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3898,"nodeType":"UserDefinedTypeName","pathNode":{"id":3897,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"7530:10:16"},"referencedDeclaration":3389,"src":"7530:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3899,"nodeType":"ArrayTypeName","src":"7530:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$3389_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"pos","nameLocation":"7565:3:16","nodeType":"VariableDeclaration","scope":3910,"src":"7557:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"7557:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7529:40:16"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"result","nameLocation":"7611:6:16","nodeType":"VariableDeclaration","scope":3910,"src":"7592:25:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3905,"nodeType":"UserDefinedTypeName","pathNode":{"id":3904,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":3389,"src":"7592:10:16"},"referencedDeclaration":3389,"src":"7592:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$3389_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"src":"7591:27:16"},"scope":4915,"src":"7507:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace224","id":3915,"members":[{"constant":false,"id":3914,"mutability":"mutable","name":"_checkpoints","nameLocation":"7792:12:16","nodeType":"VariableDeclaration","scope":3915,"src":"7776:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3912,"nodeType":"UserDefinedTypeName","pathNode":{"id":3911,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"7776:13:16"},"referencedDeclaration":3920,"src":"7776:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3913,"nodeType":"ArrayTypeName","src":"7776:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"7757:8:16","nodeType":"StructDefinition","scope":4915,"src":"7750:61:16","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":3920,"members":[{"constant":false,"id":3917,"mutability":"mutable","name":"_key","nameLocation":"7855:4:16","nodeType":"VariableDeclaration","scope":3920,"src":"7848:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3916,"name":"uint32","nodeType":"ElementaryTypeName","src":"7848:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"_value","nameLocation":"7877:6:16","nodeType":"VariableDeclaration","scope":3920,"src":"7869:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3918,"name":"uint224","nodeType":"ElementaryTypeName","src":"7869:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"7824:13:16","nodeType":"StructDefinition","scope":4915,"src":"7817:73:16","visibility":"public"},{"body":{"id":3942,"nodeType":"Block","src":"8163:62:16","statements":[{"expression":{"arguments":[{"expression":{"id":3936,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8188:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8188:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3938,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"8207:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"8212:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3935,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3791,4293,4795],"referencedDeclaration":4293,"src":"8180:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8180:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3934,"id":3941,"nodeType":"Return","src":"8173:45:16"}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"7896:162:16","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8072:4:16","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"self","nameLocation":"8094:4:16","nodeType":"VariableDeclaration","scope":3943,"src":"8077:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3923,"nodeType":"UserDefinedTypeName","pathNode":{"id":3922,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"8077:8:16"},"referencedDeclaration":3915,"src":"8077:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"key","nameLocation":"8107:3:16","nodeType":"VariableDeclaration","scope":3943,"src":"8100:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3925,"name":"uint32","nodeType":"ElementaryTypeName","src":"8100:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"value","nameLocation":"8120:5:16","nodeType":"VariableDeclaration","scope":3943,"src":"8112:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3927,"name":"uint224","nodeType":"ElementaryTypeName","src":"8112:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8076:50:16"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"8145:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3930,"name":"uint224","nodeType":"ElementaryTypeName","src":"8145:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"8154:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3932,"name":"uint224","nodeType":"ElementaryTypeName","src":"8154:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8144:18:16"},"scope":4915,"src":"8063:162:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"8471:207:16","statements":[{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"len","nameLocation":"8489:3:16","nodeType":"VariableDeclaration","scope":3982,"src":"8481:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3959,"initialValue":{"expression":{"expression":{"id":3956,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"8495:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8495:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8495:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8481:38:16"},{"assignments":[3961],"declarations":[{"constant":false,"id":3961,"mutability":"mutable","name":"pos","nameLocation":"8537:3:16","nodeType":"VariableDeclaration","scope":3982,"src":"8529:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"8529:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"arguments":[{"expression":{"id":3963,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"8562:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8562:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3965,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"8581:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8586:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3967,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"8589:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3962,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3895,4397,4899],"referencedDeclaration":4397,"src":"8543:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8543:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8529:64:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8610:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3971,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"8617:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3975,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"8641:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8641:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3977,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8660:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3974,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"8627:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8627:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"8627:44:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8610:61:16","trueExpression":{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8623:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3953,"id":3981,"nodeType":"Return","src":"8603:68:16"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"8231:147:16","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8392:11:16","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"self","nameLocation":"8421:4:16","nodeType":"VariableDeclaration","scope":3983,"src":"8404:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3946,"nodeType":"UserDefinedTypeName","pathNode":{"id":3945,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"8404:8:16"},"referencedDeclaration":3915,"src":"8404:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"key","nameLocation":"8434:3:16","nodeType":"VariableDeclaration","scope":3983,"src":"8427:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3948,"name":"uint32","nodeType":"ElementaryTypeName","src":"8427:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8403:35:16"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"8462:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3951,"name":"uint224","nodeType":"ElementaryTypeName","src":"8462:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8461:9:16"},"scope":4915,"src":"8383:295:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4024,"nodeType":"Block","src":"8926:209:16","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"len","nameLocation":"8944:3:16","nodeType":"VariableDeclaration","scope":4024,"src":"8936:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3999,"initialValue":{"expression":{"expression":{"id":3996,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8950:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"8950:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8950:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8936:38:16"},{"assignments":[4001],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"pos","nameLocation":"8992:3:16","nodeType":"VariableDeclaration","scope":4024,"src":"8984:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4009,"initialValue":{"arguments":[{"expression":{"id":4003,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"9017:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9017:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":4005,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"9036:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9041:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4007,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"9044:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4002,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":4345,"src":"8998:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8998:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8984:64:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9065:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9072:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9065:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4015,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"9094:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9094:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"9113:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9113:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4014,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"9080:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9080:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"9080:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9065:63:16","trueExpression":{"hexValue":"30","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9076:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3993,"id":4023,"nodeType":"Return","src":"9058:70:16"}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"8684:149:16","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none."},"id":4025,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8847:11:16","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"self","nameLocation":"8876:4:16","nodeType":"VariableDeclaration","scope":4025,"src":"8859:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3986,"nodeType":"UserDefinedTypeName","pathNode":{"id":3985,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"8859:8:16"},"referencedDeclaration":3915,"src":"8859:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"key","nameLocation":"8889:3:16","nodeType":"VariableDeclaration","scope":4025,"src":"8882:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3988,"name":"uint32","nodeType":"ElementaryTypeName","src":"8882:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8858:35:16"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4025,"src":"8917:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3991,"name":"uint224","nodeType":"ElementaryTypeName","src":"8917:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8916:9:16"},"scope":4915,"src":"8838:297:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4109,"nodeType":"Block","src":"9520:512:16","statements":[{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"len","nameLocation":"9538:3:16","nodeType":"VariableDeclaration","scope":4109,"src":"9530:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"9530:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4041,"initialValue":{"expression":{"expression":{"id":4038,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9544:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9544:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9544:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9530:38:16"},{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"low","nameLocation":"9587:3:16","nodeType":"VariableDeclaration","scope":4109,"src":"9579:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"9579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"hexValue":"30","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9579:15:16"},{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"high","nameLocation":"9612:4:16","nodeType":"VariableDeclaration","scope":4109,"src":"9604:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"9604:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4049,"initialValue":{"id":4048,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"9619:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9604:18:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"9637:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9637:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"IfStatement","src":"9633:234:16","trueBody":{"id":4083,"nodeType":"Block","src":"9646:221:16","statements":[{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"mid","nameLocation":"9668:3:16","nodeType":"VariableDeclaration","scope":4083,"src":"9660:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"9660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"9674:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4058,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"9690:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4056,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"9680:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":6542,"src":"9680:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9680:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9674:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9660:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"9712:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":4064,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9732:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9732:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":4066,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"9751:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4063,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"9718:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9718:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"9718:42:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9712:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4081,"nodeType":"Block","src":"9811:46:16","statements":[{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4075,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"9829:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"9835:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9835:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9829:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"9829:13:16"}]},"id":4082,"nodeType":"IfStatement","src":"9708:149:16","trueBody":{"id":4074,"nodeType":"Block","src":"9762:43:16","statements":[{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"9780:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4071,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"9787:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4073,"nodeType":"ExpressionStatement","src":"9780:10:16"}]}}]}},{"assignments":[4086],"declarations":[{"constant":false,"id":4086,"mutability":"mutable","name":"pos","nameLocation":"9885:3:16","nodeType":"VariableDeclaration","scope":4109,"src":"9877:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"9877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4094,"initialValue":{"arguments":[{"expression":{"id":4088,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9910:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9910:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":4090,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"9929:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4091,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"9934:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4092,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"9939:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":4345,"src":"9891:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9877:67:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"9962:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9962:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4100,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"9991:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"9991:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"10010:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10010:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4099,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"9977:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"9977:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9962:63:16","trueExpression":{"hexValue":"30","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9973:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4035,"id":4108,"nodeType":"Return","src":"9955:70:16"}]},"documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"9141:280:16","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys)."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9435:17:16","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"self","nameLocation":"9470:4:16","nodeType":"VariableDeclaration","scope":4110,"src":"9453:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"9453:8:16"},"referencedDeclaration":3915,"src":"9453:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"key","nameLocation":"9483:3:16","nodeType":"VariableDeclaration","scope":4110,"src":"9476:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4030,"name":"uint32","nodeType":"ElementaryTypeName","src":"9476:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9452:35:16"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"9511:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4033,"name":"uint224","nodeType":"ElementaryTypeName","src":"9511:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9510:9:16"},"scope":4915,"src":"9426:606:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4139,"nodeType":"Block","src":"10223:135:16","statements":[{"assignments":[4120],"declarations":[{"constant":false,"id":4120,"mutability":"mutable","name":"pos","nameLocation":"10241:3:16","nodeType":"VariableDeclaration","scope":4139,"src":"10233:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"10233:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4124,"initialValue":{"expression":{"expression":{"id":4121,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"10247:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"10247:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10247:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10233:38:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10288:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10295:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10288:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4130,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"10317:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"10317:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10336:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10342:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4129,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"10303:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10303:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"10303:48:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10288:63:16","trueExpression":{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10299:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4118,"id":4138,"nodeType":"Return","src":"10281:70:16"}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"10038:109:16","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10161:6:16","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"self","nameLocation":"10185:4:16","nodeType":"VariableDeclaration","scope":4140,"src":"10168:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"10168:8:16"},"referencedDeclaration":3915,"src":"10168:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10167:23:16"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4140,"src":"10214:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4116,"name":"uint224","nodeType":"ElementaryTypeName","src":"10214:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10213:9:16"},"scope":4915,"src":"10152:206:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"10651:274:16","statements":[{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"pos","nameLocation":"10669:3:16","nodeType":"VariableDeclaration","scope":4188,"src":"10661:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"10661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4158,"initialValue":{"expression":{"expression":{"id":4155,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"10675:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"10675:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10675:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10661:38:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"10713:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10720:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10713:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4186,"nodeType":"Block","src":"10774:145:16","statements":[{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"ckpt","nameLocation":"10809:4:16","nodeType":"VariableDeclaration","scope":4186,"src":"10788:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"10788:13:16"},"referencedDeclaration":3920,"src":"10788:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":4178,"initialValue":{"arguments":[{"expression":{"id":4172,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"10830:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"10830:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"10849:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10855:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"10816:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10816:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10788:69:16"},{"expression":{"components":[{"hexValue":"74727565","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10879:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4180,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"10885:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":4181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"10885:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4182,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"10896:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":4183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"10896:11:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10878:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":4152,"id":4185,"nodeType":"Return","src":"10871:37:16"}]},"id":4187,"nodeType":"IfStatement","src":"10709:210:16","trueBody":{"id":4167,"nodeType":"Block","src":"10723:45:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10745:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10752:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10744:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":4152,"id":4166,"nodeType":"Return","src":"10737:20:16"}]}}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"10364:168:16","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10546:16:16","nodeType":"FunctionDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"self","nameLocation":"10580:4:16","nodeType":"VariableDeclaration","scope":4189,"src":"10563:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":4143,"nodeType":"UserDefinedTypeName","pathNode":{"id":4142,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"10563:8:16"},"referencedDeclaration":3915,"src":"10563:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10562:23:16"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"exists","nameLocation":"10614:6:16","nodeType":"VariableDeclaration","scope":4189,"src":"10609:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4146,"name":"bool","nodeType":"ElementaryTypeName","src":"10609:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"_key","nameLocation":"10629:4:16","nodeType":"VariableDeclaration","scope":4189,"src":"10622:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4148,"name":"uint32","nodeType":"ElementaryTypeName","src":"10622:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"_value","nameLocation":"10643:6:16","nodeType":"VariableDeclaration","scope":4189,"src":"10635:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4150,"name":"uint224","nodeType":"ElementaryTypeName","src":"10635:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10608:42:16"},"scope":4915,"src":"10537:388:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"11064:48:16","statements":[{"expression":{"expression":{"expression":{"id":4198,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"11081:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":4199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3914,"src":"11081:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11081:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4197,"id":4201,"nodeType":"Return","src":"11074:31:16"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"10931:57:16","text":" @dev Returns the number of checkpoint."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11002:6:16","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"self","nameLocation":"11026:4:16","nodeType":"VariableDeclaration","scope":4203,"src":"11009:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":3915,"src":"11009:8:16"},"referencedDeclaration":3915,"src":"11009:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3915_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"11008:23:16"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"11055:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"11055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11054:9:16"},"scope":4915,"src":"10993:119:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"11397:727:16","statements":[{"assignments":[4220],"declarations":[{"constant":false,"id":4220,"mutability":"mutable","name":"pos","nameLocation":"11415:3:16","nodeType":"VariableDeclaration","scope":4292,"src":"11407:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"11407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4223,"initialValue":{"expression":{"id":4221,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"11421:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11421:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11407:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"11447:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11453:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11447:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4290,"nodeType":"Block","src":"12010:108:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":4281,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"12055:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"12068:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":4280,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12034:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"12034:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":4277,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"12024:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"12024:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3920_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12024:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4285,"nodeType":"ExpressionStatement","src":"12024:52:16"},{"expression":{"components":[{"hexValue":"30","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"12101:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12097:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":4218,"id":4289,"nodeType":"Return","src":"12090:17:16"}]},"id":4291,"nodeType":"IfStatement","src":"11443:675:16","trueBody":{"id":4276,"nodeType":"Block","src":"11456:548:16","statements":[{"assignments":[4229],"declarations":[{"constant":false,"id":4229,"mutability":"mutable","name":"last","nameLocation":"11543:4:16","nodeType":"VariableDeclaration","scope":4276,"src":"11522:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":4228,"nodeType":"UserDefinedTypeName","pathNode":{"id":4227,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"11522:13:16"},"referencedDeclaration":3920,"src":"11522:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":4236,"initialValue":{"arguments":[{"id":4231,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"11564:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"11570:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11576:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4230,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"11550:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11522:56:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4238,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11656:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":4239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"11656:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4240,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"11669:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11656:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11674:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":4237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11648:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11648:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"ExpressionStatement","src":"11648:56:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4245,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11768:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":4246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"11768:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4247,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"11781:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11768:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4269,"nodeType":"Block","src":"11868:85:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":4264,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"11917:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"11930:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":4263,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"11896:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"11896:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":4260,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"11886:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11886:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3920_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11886:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4268,"nodeType":"ExpressionStatement","src":"11886:52:16"}]},"id":4270,"nodeType":"IfStatement","src":"11764:189:16","trueBody":{"id":4259,"nodeType":"Block","src":"11786:76:16","statements":[{"expression":{"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4250,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"11818:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"11824:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11830:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"11804:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11804:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"11804:35:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"11842:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11804:43:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4258,"nodeType":"ExpressionStatement","src":"11804:43:16"}]}},{"expression":{"components":[{"expression":{"id":4271,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11974:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":4272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"11974:11:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"11987:5:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11973:20:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":4218,"id":4275,"nodeType":"Return","src":"11966:27:16"}]}}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"11118:165:16","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11297:7:16","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"self","nameLocation":"11329:4:16","nodeType":"VariableDeclaration","scope":4293,"src":"11305:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4206,"nodeType":"UserDefinedTypeName","pathNode":{"id":4205,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"11305:13:16"},"referencedDeclaration":3920,"src":"11305:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4207,"nodeType":"ArrayTypeName","src":"11305:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"key","nameLocation":"11342:3:16","nodeType":"VariableDeclaration","scope":4293,"src":"11335:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4209,"name":"uint32","nodeType":"ElementaryTypeName","src":"11335:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"value","nameLocation":"11355:5:16","nodeType":"VariableDeclaration","scope":4293,"src":"11347:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4211,"name":"uint224","nodeType":"ElementaryTypeName","src":"11347:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"11304:57:16"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4293,"src":"11379:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4214,"name":"uint224","nodeType":"ElementaryTypeName","src":"11379:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4293,"src":"11388:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4216,"name":"uint224","nodeType":"ElementaryTypeName","src":"11388:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"11378:18:16"},"scope":4915,"src":"11288:836:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4344,"nodeType":"Block","src":"12636:267:16","statements":[{"body":{"id":4340,"nodeType":"Block","src":"12665:211:16","statements":[{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"mid","nameLocation":"12687:3:16","nodeType":"VariableDeclaration","scope":4340,"src":"12679:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"12679:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4319,"initialValue":{"arguments":[{"id":4316,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"12706:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4317,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12711:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4314,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"12693:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"12693:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12679:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4321,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"12748:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":4322,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"12754:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4320,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"12734:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12734:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"12734:29:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4325,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"12766:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12734:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4338,"nodeType":"Block","src":"12820:46:16","statements":[{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"12838:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"12844:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12838:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"12838:13:16"}]},"id":4339,"nodeType":"IfStatement","src":"12730:136:16","trueBody":{"id":4331,"nodeType":"Block","src":"12771:43:16","statements":[{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12789:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4328,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"12796:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12789:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"12789:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"12653:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4310,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12659:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12653:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4341,"nodeType":"WhileStatement","src":"12646:230:16"},{"expression":{"id":4342,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12892:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4308,"id":4343,"nodeType":"Return","src":"12885:11:16"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"12130:335:16","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4345,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12479:18:16","nodeType":"FunctionDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"self","nameLocation":"12531:4:16","nodeType":"VariableDeclaration","scope":4345,"src":"12507:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4296,"nodeType":"UserDefinedTypeName","pathNode":{"id":4295,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"12507:13:16"},"referencedDeclaration":3920,"src":"12507:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4297,"nodeType":"ArrayTypeName","src":"12507:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"key","nameLocation":"12552:3:16","nodeType":"VariableDeclaration","scope":4345,"src":"12545:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4299,"name":"uint32","nodeType":"ElementaryTypeName","src":"12545:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"low","nameLocation":"12573:3:16","nodeType":"VariableDeclaration","scope":4345,"src":"12565:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"12565:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"high","nameLocation":"12594:4:16","nodeType":"VariableDeclaration","scope":4345,"src":"12586:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12586:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12497:107:16"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4345,"src":"12627:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"12627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12626:9:16"},"scope":4915,"src":"12470:433:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4396,"nodeType":"Block","src":"13416:267:16","statements":[{"body":{"id":4392,"nodeType":"Block","src":"13445:211:16","statements":[{"assignments":[4365],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"mid","nameLocation":"13467:3:16","nodeType":"VariableDeclaration","scope":4392,"src":"13459:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4371,"initialValue":{"arguments":[{"id":4368,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13486:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4369,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"13491:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4366,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"13473:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"13473:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13473:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13459:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4373,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"13528:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":4374,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13534:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4372,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4412,"src":"13514:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3920_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13514:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":4376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"13514:29:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4377,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"13546:3:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13514:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4390,"nodeType":"Block","src":"13603:43:16","statements":[{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"13621:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4387,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13628:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13621:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"13621:10:16"}]},"id":4391,"nodeType":"IfStatement","src":"13510:136:16","trueBody":{"id":4385,"nodeType":"Block","src":"13551:46:16","statements":[{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13569:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13575:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13581:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13575:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13569:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"13569:13:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13433:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4362,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"13439:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13433:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"WhileStatement","src":"13426:230:16"},{"expression":{"id":4394,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"13672:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4360,"id":4395,"nodeType":"Return","src":"13665:11:16"}]},"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"12909:336:16","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4397,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13259:18:16","nodeType":"FunctionDefinition","parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"self","nameLocation":"13311:4:16","nodeType":"VariableDeclaration","scope":4397,"src":"13287:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4348,"nodeType":"UserDefinedTypeName","pathNode":{"id":4347,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"13287:13:16"},"referencedDeclaration":3920,"src":"13287:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4349,"nodeType":"ArrayTypeName","src":"13287:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4352,"mutability":"mutable","name":"key","nameLocation":"13332:3:16","nodeType":"VariableDeclaration","scope":4397,"src":"13325:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4351,"name":"uint32","nodeType":"ElementaryTypeName","src":"13325:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"low","nameLocation":"13353:3:16","nodeType":"VariableDeclaration","scope":4397,"src":"13345:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"13345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4356,"mutability":"mutable","name":"high","nameLocation":"13374:4:16","nodeType":"VariableDeclaration","scope":4397,"src":"13366:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"13366:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13277:107:16"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4397,"src":"13407:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"13407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13406:9:16"},"scope":4915,"src":"13250:433:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4411,"nodeType":"Block","src":"13966:125:16","statements":[{"AST":{"nodeType":"YulBlock","src":"13985:100:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14006:1:16","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14009:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13999:6:16"},"nodeType":"YulFunctionCall","src":"13999:20:16"},"nodeType":"YulExpressionStatement","src":"13999:20:16"},{"nodeType":"YulAssignment","src":"14032:43:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14061:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14064:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14051:9:16"},"nodeType":"YulFunctionCall","src":"14051:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14071:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14047:3:16"},"nodeType":"YulFunctionCall","src":"14047:28:16"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14032:11:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4404,"isOffset":false,"isSlot":false,"src":"14071:3:16","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":true,"src":"14032:11:16","suffix":"slot","valueSize":1},{"declaration":4402,"isOffset":false,"isSlot":true,"src":"14009:9:16","suffix":"slot","valueSize":1}],"id":4410,"nodeType":"InlineAssembly","src":"13976:109:16"}]},"documentation":{"id":4398,"nodeType":"StructuredDocumentation","src":"13689:132:16","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":4412,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"13835:13:16","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"self","nameLocation":"13882:4:16","nodeType":"VariableDeclaration","scope":4412,"src":"13858:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":4400,"nodeType":"UserDefinedTypeName","pathNode":{"id":4399,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"13858:13:16"},"referencedDeclaration":3920,"src":"13858:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":4401,"nodeType":"ArrayTypeName","src":"13858:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3920_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"pos","nameLocation":"13904:3:16","nodeType":"VariableDeclaration","scope":4412,"src":"13896:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"13896:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13848:65:16"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"result","nameLocation":"13958:6:16","nodeType":"VariableDeclaration","scope":4412,"src":"13936:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":4407,"nodeType":"UserDefinedTypeName","pathNode":{"id":4406,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"13936:13:16"},"referencedDeclaration":3920,"src":"13936:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3920_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"13935:30:16"},"scope":4915,"src":"13826:265:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":4417,"members":[{"constant":false,"id":4416,"mutability":"mutable","name":"_checkpoints","nameLocation":"14139:12:16","nodeType":"VariableDeclaration","scope":4417,"src":"14123:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4414,"nodeType":"UserDefinedTypeName","pathNode":{"id":4413,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"14123:13:16"},"referencedDeclaration":4422,"src":"14123:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4415,"nodeType":"ArrayTypeName","src":"14123:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14104:8:16","nodeType":"StructDefinition","scope":4915,"src":"14097:61:16","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":4422,"members":[{"constant":false,"id":4419,"mutability":"mutable","name":"_key","nameLocation":"14202:4:16","nodeType":"VariableDeclaration","scope":4422,"src":"14195:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4418,"name":"uint96","nodeType":"ElementaryTypeName","src":"14195:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"_value","nameLocation":"14224:6:16","nodeType":"VariableDeclaration","scope":4422,"src":"14216:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4420,"name":"uint160","nodeType":"ElementaryTypeName","src":"14216:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14171:13:16","nodeType":"StructDefinition","scope":4915,"src":"14164:73:16","visibility":"public"},{"body":{"id":4444,"nodeType":"Block","src":"14510:62:16","statements":[{"expression":{"arguments":[{"expression":{"id":4438,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"14535:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"14535:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4440,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"14554:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14559:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4437,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3791,4293,4795],"referencedDeclaration":4795,"src":"14527:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14527:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":4436,"id":4443,"nodeType":"Return","src":"14520:45:16"}]},"documentation":{"id":4423,"nodeType":"StructuredDocumentation","src":"14243:162:16","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14419:4:16","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"self","nameLocation":"14441:4:16","nodeType":"VariableDeclaration","scope":4445,"src":"14424:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4425,"nodeType":"UserDefinedTypeName","pathNode":{"id":4424,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"14424:8:16"},"referencedDeclaration":4417,"src":"14424:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4428,"mutability":"mutable","name":"key","nameLocation":"14454:3:16","nodeType":"VariableDeclaration","scope":4445,"src":"14447:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4427,"name":"uint96","nodeType":"ElementaryTypeName","src":"14447:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"value","nameLocation":"14467:5:16","nodeType":"VariableDeclaration","scope":4445,"src":"14459:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4429,"name":"uint160","nodeType":"ElementaryTypeName","src":"14459:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14423:50:16"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"14492:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4432,"name":"uint160","nodeType":"ElementaryTypeName","src":"14492:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"14501:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4434,"name":"uint160","nodeType":"ElementaryTypeName","src":"14501:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14491:18:16"},"scope":4915,"src":"14410:162:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4484,"nodeType":"Block","src":"14818:207:16","statements":[{"assignments":[4457],"declarations":[{"constant":false,"id":4457,"mutability":"mutable","name":"len","nameLocation":"14836:3:16","nodeType":"VariableDeclaration","scope":4484,"src":"14828:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"14828:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4461,"initialValue":{"expression":{"expression":{"id":4458,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"14842:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"14842:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14842:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14828:38:16"},{"assignments":[4463],"declarations":[{"constant":false,"id":4463,"mutability":"mutable","name":"pos","nameLocation":"14884:3:16","nodeType":"VariableDeclaration","scope":4484,"src":"14876:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"14876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"expression":{"id":4465,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"14909:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"14909:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4467,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"14928:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14933:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4469,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"14936:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4464,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3895,4397,4899],"referencedDeclaration":4899,"src":"14890:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14890:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14876:64:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"14957:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4473,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"14964:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14957:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4477,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"14988:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"14988:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4479,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"15007:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4476,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"14974:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14974:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"14974:44:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14957:61:16","trueExpression":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14970:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4455,"id":4483,"nodeType":"Return","src":"14950:68:16"}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"14578:147:16","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none."},"id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"14739:11:16","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"self","nameLocation":"14768:4:16","nodeType":"VariableDeclaration","scope":4485,"src":"14751:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4448,"nodeType":"UserDefinedTypeName","pathNode":{"id":4447,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"14751:8:16"},"referencedDeclaration":4417,"src":"14751:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"key","nameLocation":"14781:3:16","nodeType":"VariableDeclaration","scope":4485,"src":"14774:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4450,"name":"uint96","nodeType":"ElementaryTypeName","src":"14774:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14750:35:16"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4485,"src":"14809:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4453,"name":"uint160","nodeType":"ElementaryTypeName","src":"14809:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14808:9:16"},"scope":4915,"src":"14730:295:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"15273:209:16","statements":[{"assignments":[4497],"declarations":[{"constant":false,"id":4497,"mutability":"mutable","name":"len","nameLocation":"15291:3:16","nodeType":"VariableDeclaration","scope":4526,"src":"15283:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"15283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4501,"initialValue":{"expression":{"expression":{"id":4498,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"15297:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"15297:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15297:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15283:38:16"},{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"pos","nameLocation":"15339:3:16","nodeType":"VariableDeclaration","scope":4526,"src":"15331:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"15331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4511,"initialValue":{"arguments":[{"expression":{"id":4505,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"15364:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"15364:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4507,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"15383:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15388:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4509,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"15391:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":4847,"src":"15345:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15345:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15331:64:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"15412:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15419:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15412:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4517,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"15441:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"15441:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"15460:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15460:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4516,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"15427:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15427:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"15427:48:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15412:63:16","trueExpression":{"hexValue":"30","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15423:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4495,"id":4525,"nodeType":"Return","src":"15405:70:16"}]},"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"15031:149:16","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15194:11:16","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"self","nameLocation":"15223:4:16","nodeType":"VariableDeclaration","scope":4527,"src":"15206:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"15206:8:16"},"referencedDeclaration":4417,"src":"15206:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"key","nameLocation":"15236:3:16","nodeType":"VariableDeclaration","scope":4527,"src":"15229:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4490,"name":"uint96","nodeType":"ElementaryTypeName","src":"15229:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15205:35:16"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4527,"src":"15264:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4493,"name":"uint160","nodeType":"ElementaryTypeName","src":"15264:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15263:9:16"},"scope":4915,"src":"15185:297:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"15867:512:16","statements":[{"assignments":[4539],"declarations":[{"constant":false,"id":4539,"mutability":"mutable","name":"len","nameLocation":"15885:3:16","nodeType":"VariableDeclaration","scope":4611,"src":"15877:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"15877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4543,"initialValue":{"expression":{"expression":{"id":4540,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"15891:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"15891:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15891:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15877:38:16"},{"assignments":[4545],"declarations":[{"constant":false,"id":4545,"mutability":"mutable","name":"low","nameLocation":"15934:3:16","nodeType":"VariableDeclaration","scope":4611,"src":"15926:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"15926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4547,"initialValue":{"hexValue":"30","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15940:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15926:15:16"},{"assignments":[4549],"declarations":[{"constant":false,"id":4549,"mutability":"mutable","name":"high","nameLocation":"15959:4:16","nodeType":"VariableDeclaration","scope":4611,"src":"15951:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"15951:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4551,"initialValue":{"id":4550,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"15966:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15951:18:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"15984:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15990:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"15984:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4586,"nodeType":"IfStatement","src":"15980:234:16","trueBody":{"id":4585,"nodeType":"Block","src":"15993:221:16","statements":[{"assignments":[4556],"declarations":[{"constant":false,"id":4556,"mutability":"mutable","name":"mid","nameLocation":"16015:3:16","nodeType":"VariableDeclaration","scope":4585,"src":"16007:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"16007:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4563,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"16021:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4560,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"16037:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4558,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"16027:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":6542,"src":"16027:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16027:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16021:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16007:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"16059:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":4566,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"16079:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"16079:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4568,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16098:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"16065:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16065:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"16065:42:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16059:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4583,"nodeType":"Block","src":"16158:46:16","statements":[{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"16176:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16182:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16188:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16182:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16176:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"16176:13:16"}]},"id":4584,"nodeType":"IfStatement","src":"16055:149:16","trueBody":{"id":4576,"nodeType":"Block","src":"16109:43:16","statements":[{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"16127:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4573,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16134:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16127:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"16127:10:16"}]}}]}},{"assignments":[4588],"declarations":[{"constant":false,"id":4588,"mutability":"mutable","name":"pos","nameLocation":"16232:3:16","nodeType":"VariableDeclaration","scope":4611,"src":"16224:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"16224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4596,"initialValue":{"arguments":[{"expression":{"id":4590,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"16257:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"16257:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":4592,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"16276:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4593,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"16281:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4594,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"16286:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4589,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3843,4345,4847],"referencedDeclaration":4847,"src":"16238:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16238:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16224:67:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"16309:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16316:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16309:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4602,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"16338:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"16338:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"16357:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16363:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16357:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"16324:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16324:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"16324:48:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16309:63:16","trueExpression":{"hexValue":"30","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16320:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4537,"id":4610,"nodeType":"Return","src":"16302:70:16"}]},"documentation":{"id":4528,"nodeType":"StructuredDocumentation","src":"15488:280:16","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys)."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"15782:17:16","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"self","nameLocation":"15817:4:16","nodeType":"VariableDeclaration","scope":4612,"src":"15800:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4530,"nodeType":"UserDefinedTypeName","pathNode":{"id":4529,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"15800:8:16"},"referencedDeclaration":4417,"src":"15800:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"key","nameLocation":"15830:3:16","nodeType":"VariableDeclaration","scope":4612,"src":"15823:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4532,"name":"uint96","nodeType":"ElementaryTypeName","src":"15823:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15799:35:16"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"15858:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4535,"name":"uint160","nodeType":"ElementaryTypeName","src":"15858:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15857:9:16"},"scope":4915,"src":"15773:606:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"16570:135:16","statements":[{"assignments":[4622],"declarations":[{"constant":false,"id":4622,"mutability":"mutable","name":"pos","nameLocation":"16588:3:16","nodeType":"VariableDeclaration","scope":4641,"src":"16580:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4626,"initialValue":{"expression":{"expression":{"id":4623,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"16594:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"16594:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16594:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16580:38:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"16635:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16642:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16635:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4632,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"16664:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"16664:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"16683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16689:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"16650:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16650:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"16650:48:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16635:63:16","trueExpression":{"hexValue":"30","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16646:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4620,"id":4640,"nodeType":"Return","src":"16628:70:16"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"16385:109:16","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16508:6:16","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"self","nameLocation":"16532:4:16","nodeType":"VariableDeclaration","scope":4642,"src":"16515:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4615,"nodeType":"UserDefinedTypeName","pathNode":{"id":4614,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"16515:8:16"},"referencedDeclaration":4417,"src":"16515:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16514:23:16"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4642,"src":"16561:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4618,"name":"uint160","nodeType":"ElementaryTypeName","src":"16561:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16560:9:16"},"scope":4915,"src":"16499:206:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4690,"nodeType":"Block","src":"16998:274:16","statements":[{"assignments":[4656],"declarations":[{"constant":false,"id":4656,"mutability":"mutable","name":"pos","nameLocation":"17016:3:16","nodeType":"VariableDeclaration","scope":4690,"src":"17008:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4660,"initialValue":{"expression":{"expression":{"id":4657,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"17022:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"17022:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17022:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17008:38:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"17060:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17060:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4688,"nodeType":"Block","src":"17121:145:16","statements":[{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"ckpt","nameLocation":"17156:4:16","nodeType":"VariableDeclaration","scope":4688,"src":"17135:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4671,"nodeType":"UserDefinedTypeName","pathNode":{"id":4670,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"17135:13:16"},"referencedDeclaration":4422,"src":"17135:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4680,"initialValue":{"arguments":[{"expression":{"id":4674,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"17177:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"17177:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"17196:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17202:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17196:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4673,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"17163:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17163:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17135:69:16"},{"expression":{"components":[{"hexValue":"74727565","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17226:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4682,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"17232:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"17232:9:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":4684,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"17243:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"17243:11:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17225:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":4654,"id":4687,"nodeType":"Return","src":"17218:37:16"}]},"id":4689,"nodeType":"IfStatement","src":"17056:210:16","trueBody":{"id":4669,"nodeType":"Block","src":"17070:45:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17092:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17091:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":4654,"id":4668,"nodeType":"Return","src":"17084:20:16"}]}}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"16711:168:16","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":4691,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"16893:16:16","nodeType":"FunctionDefinition","parameters":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"self","nameLocation":"16927:4:16","nodeType":"VariableDeclaration","scope":4691,"src":"16910:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4645,"nodeType":"UserDefinedTypeName","pathNode":{"id":4644,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"16910:8:16"},"referencedDeclaration":4417,"src":"16910:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16909:23:16"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"exists","nameLocation":"16961:6:16","nodeType":"VariableDeclaration","scope":4691,"src":"16956:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4648,"name":"bool","nodeType":"ElementaryTypeName","src":"16956:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"_key","nameLocation":"16976:4:16","nodeType":"VariableDeclaration","scope":4691,"src":"16969:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4650,"name":"uint96","nodeType":"ElementaryTypeName","src":"16969:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"_value","nameLocation":"16990:6:16","nodeType":"VariableDeclaration","scope":4691,"src":"16982:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4652,"name":"uint160","nodeType":"ElementaryTypeName","src":"16982:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16955:42:16"},"scope":4915,"src":"16884:388:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4704,"nodeType":"Block","src":"17411:48:16","statements":[{"expression":{"expression":{"expression":{"id":4700,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"17428:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":4701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4416,"src":"17428:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17428:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4699,"id":4703,"nodeType":"Return","src":"17421:31:16"}]},"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"17278:57:16","text":" @dev Returns the number of checkpoint."},"id":4705,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17349:6:16","nodeType":"FunctionDefinition","parameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"self","nameLocation":"17373:4:16","nodeType":"VariableDeclaration","scope":4705,"src":"17356:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":4694,"nodeType":"UserDefinedTypeName","pathNode":{"id":4693,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":4417,"src":"17356:8:16"},"referencedDeclaration":4417,"src":"17356:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$4417_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17355:23:16"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4705,"src":"17402:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"17402:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17401:9:16"},"scope":4915,"src":"17340:119:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4794,"nodeType":"Block","src":"17744:727:16","statements":[{"assignments":[4722],"declarations":[{"constant":false,"id":4722,"mutability":"mutable","name":"pos","nameLocation":"17762:3:16","nodeType":"VariableDeclaration","scope":4794,"src":"17754:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"17754:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"initialValue":{"expression":{"id":4723,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"17768:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17768:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17754:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"17794:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17794:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4792,"nodeType":"Block","src":"18357:108:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":4783,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"18402:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"18415:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4782,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"18381:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"18381:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4779,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"18371:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"18371:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$4422_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18371:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"18371:52:16"},{"expression":{"components":[{"hexValue":"30","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18445:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"18448:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18444:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":4720,"id":4791,"nodeType":"Return","src":"18437:17:16"}]},"id":4793,"nodeType":"IfStatement","src":"17790:675:16","trueBody":{"id":4778,"nodeType":"Block","src":"17803:548:16","statements":[{"assignments":[4731],"declarations":[{"constant":false,"id":4731,"mutability":"mutable","name":"last","nameLocation":"17890:4:16","nodeType":"VariableDeclaration","scope":4778,"src":"17869:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4730,"nodeType":"UserDefinedTypeName","pathNode":{"id":4729,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"17869:13:16"},"referencedDeclaration":4422,"src":"17869:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":4738,"initialValue":{"arguments":[{"id":4733,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"17911:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"17917:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17923:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4732,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"17897:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17897:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17869:56:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4740,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"18003:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"18003:9:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4742,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"18016:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18003:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18021:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":4739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17995:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17995:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4746,"nodeType":"ExpressionStatement","src":"17995:56:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4747,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"18115:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"18115:9:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4749,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"18128:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18115:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4771,"nodeType":"Block","src":"18215:85:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":4766,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"18264:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"18277:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4765,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"18243:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"18243:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":4762,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"18233:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"18233:9:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$4422_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18233:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4770,"nodeType":"ExpressionStatement","src":"18233:52:16"}]},"id":4772,"nodeType":"IfStatement","src":"18111:189:16","trueBody":{"id":4761,"nodeType":"Block","src":"18133:76:16","statements":[{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4752,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"18165:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"18171:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4751,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"18151:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18151:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"18151:35:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"18189:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18151:43:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4760,"nodeType":"ExpressionStatement","src":"18151:43:16"}]}},{"expression":{"components":[{"expression":{"id":4773,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"18321:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"18321:11:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"18334:5:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18320:20:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":4720,"id":4777,"nodeType":"Return","src":"18313:27:16"}]}}]},"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"17465:165:16","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4795,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"17644:7:16","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"self","nameLocation":"17676:4:16","nodeType":"VariableDeclaration","scope":4795,"src":"17652:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4708,"nodeType":"UserDefinedTypeName","pathNode":{"id":4707,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"17652:13:16"},"referencedDeclaration":4422,"src":"17652:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4709,"nodeType":"ArrayTypeName","src":"17652:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"key","nameLocation":"17689:3:16","nodeType":"VariableDeclaration","scope":4795,"src":"17682:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4711,"name":"uint96","nodeType":"ElementaryTypeName","src":"17682:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"17702:5:16","nodeType":"VariableDeclaration","scope":4795,"src":"17694:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4713,"name":"uint160","nodeType":"ElementaryTypeName","src":"17694:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17651:57:16"},"returnParameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4795,"src":"17726:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4716,"name":"uint160","nodeType":"ElementaryTypeName","src":"17726:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4795,"src":"17735:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4718,"name":"uint160","nodeType":"ElementaryTypeName","src":"17735:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17725:18:16"},"scope":4915,"src":"17635:836:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4846,"nodeType":"Block","src":"18983:267:16","statements":[{"body":{"id":4842,"nodeType":"Block","src":"19012:211:16","statements":[{"assignments":[4815],"declarations":[{"constant":false,"id":4815,"mutability":"mutable","name":"mid","nameLocation":"19034:3:16","nodeType":"VariableDeclaration","scope":4842,"src":"19026:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"19026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4821,"initialValue":{"arguments":[{"id":4818,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19053:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4819,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"19058:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4816,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"19040:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"19040:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19040:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19026:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4823,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"19095:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4824,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"19101:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"19081:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19081:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"19081:29:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4827,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"19113:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19081:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4840,"nodeType":"Block","src":"19167:46:16","statements":[{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4834,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19185:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"19191:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19197:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19191:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19185:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"19185:13:16"}]},"id":4841,"nodeType":"IfStatement","src":"19077:136:16","trueBody":{"id":4833,"nodeType":"Block","src":"19118:43:16","statements":[{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4829,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"19136:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4830,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"19143:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19136:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"19136:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"19000:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4812,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"19006:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19000:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4843,"nodeType":"WhileStatement","src":"18993:230:16"},{"expression":{"id":4844,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"19239:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4810,"id":4845,"nodeType":"Return","src":"19232:11:16"}]},"documentation":{"id":4796,"nodeType":"StructuredDocumentation","src":"18477:335:16","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"18826:18:16","nodeType":"FunctionDefinition","parameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"self","nameLocation":"18878:4:16","nodeType":"VariableDeclaration","scope":4847,"src":"18854:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4798,"nodeType":"UserDefinedTypeName","pathNode":{"id":4797,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"18854:13:16"},"referencedDeclaration":4422,"src":"18854:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4799,"nodeType":"ArrayTypeName","src":"18854:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"key","nameLocation":"18899:3:16","nodeType":"VariableDeclaration","scope":4847,"src":"18892:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4801,"name":"uint96","nodeType":"ElementaryTypeName","src":"18892:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"low","nameLocation":"18920:3:16","nodeType":"VariableDeclaration","scope":4847,"src":"18912:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"18912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4806,"mutability":"mutable","name":"high","nameLocation":"18941:4:16","nodeType":"VariableDeclaration","scope":4847,"src":"18933:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"18933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18844:107:16"},"returnParameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"18974:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"18974:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18973:9:16"},"scope":4915,"src":"18817:433:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4898,"nodeType":"Block","src":"19763:267:16","statements":[{"body":{"id":4894,"nodeType":"Block","src":"19792:211:16","statements":[{"assignments":[4867],"declarations":[{"constant":false,"id":4867,"mutability":"mutable","name":"mid","nameLocation":"19814:3:16","nodeType":"VariableDeclaration","scope":4894,"src":"19806:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"19806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4873,"initialValue":{"arguments":[{"id":4870,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"19833:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4871,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"19838:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4868,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"19820:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"19820:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19820:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19806:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4875,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"19875:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4876,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"19881:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4874,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3910,4412,4914],"referencedDeclaration":4914,"src":"19861:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$4422_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19861:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4419,"src":"19861:29:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4879,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"19893:3:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19861:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4892,"nodeType":"Block","src":"19950:43:16","statements":[{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"19968:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4889,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"19975:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19968:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"19968:10:16"}]},"id":4893,"nodeType":"IfStatement","src":"19857:136:16","trueBody":{"id":4887,"nodeType":"Block","src":"19898:46:16","statements":[{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"19916:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"19922:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19928:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19922:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19916:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"nodeType":"ExpressionStatement","src":"19916:13:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"19780:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4864,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"19786:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19780:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4895,"nodeType":"WhileStatement","src":"19773:230:16"},{"expression":{"id":4896,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"20019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4862,"id":4897,"nodeType":"Return","src":"20012:11:16"}]},"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"19256:336:16","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"19606:18:16","nodeType":"FunctionDefinition","parameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"self","nameLocation":"19658:4:16","nodeType":"VariableDeclaration","scope":4899,"src":"19634:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4850,"nodeType":"UserDefinedTypeName","pathNode":{"id":4849,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"19634:13:16"},"referencedDeclaration":4422,"src":"19634:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4851,"nodeType":"ArrayTypeName","src":"19634:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"key","nameLocation":"19679:3:16","nodeType":"VariableDeclaration","scope":4899,"src":"19672:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4853,"name":"uint96","nodeType":"ElementaryTypeName","src":"19672:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4856,"mutability":"mutable","name":"low","nameLocation":"19700:3:16","nodeType":"VariableDeclaration","scope":4899,"src":"19692:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"19692:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"high","nameLocation":"19721:4:16","nodeType":"VariableDeclaration","scope":4899,"src":"19713:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"19713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19624:107:16"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4899,"src":"19754:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"19754:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19753:9:16"},"scope":4915,"src":"19597:433:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4913,"nodeType":"Block","src":"20313:125:16","statements":[{"AST":{"nodeType":"YulBlock","src":"20332:100:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:16","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"20356:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20346:6:16"},"nodeType":"YulFunctionCall","src":"20346:20:16"},"nodeType":"YulExpressionStatement","src":"20346:20:16"},{"nodeType":"YulAssignment","src":"20379:43:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20408:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20411:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"20398:9:16"},"nodeType":"YulFunctionCall","src":"20398:18:16"},{"name":"pos","nodeType":"YulIdentifier","src":"20418:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20394:3:16"},"nodeType":"YulFunctionCall","src":"20394:28:16"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"20379:11:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4906,"isOffset":false,"isSlot":false,"src":"20418:3:16","valueSize":1},{"declaration":4910,"isOffset":false,"isSlot":true,"src":"20379:11:16","suffix":"slot","valueSize":1},{"declaration":4904,"isOffset":false,"isSlot":true,"src":"20356:9:16","suffix":"slot","valueSize":1}],"id":4912,"nodeType":"InlineAssembly","src":"20323:109:16"}]},"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"20036:132:16","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20182:13:16","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"self","nameLocation":"20229:4:16","nodeType":"VariableDeclaration","scope":4914,"src":"20205:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4902,"nodeType":"UserDefinedTypeName","pathNode":{"id":4901,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"20205:13:16"},"referencedDeclaration":4422,"src":"20205:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4903,"nodeType":"ArrayTypeName","src":"20205:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$4422_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"pos","nameLocation":"20251:3:16","nodeType":"VariableDeclaration","scope":4914,"src":"20243:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"20243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20195:65:16"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"result","nameLocation":"20305:6:16","nodeType":"VariableDeclaration","scope":4914,"src":"20283:28:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4909,"nodeType":"UserDefinedTypeName","pathNode":{"id":4908,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"20283:13:16"},"referencedDeclaration":4422,"src":"20283:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$4422_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20282:30:16"},"scope":4915,"src":"20173:265:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4916,"src":"708:19732:16","usedErrors":[]}],"src":"193:20248:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4937]},"id":4938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4917,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4918,"nodeType":"StructuredDocumentation","src":"111:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4937,"linearizedBaseContracts":[4937],"name":"Context","nameLocation":"626:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":4926,"nodeType":"Block","src":"702:34:17","statements":[{"expression":{"expression":{"id":4923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4922,"id":4925,"nodeType":"Return","src":"712:17:17"}]},"id":4927,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:17","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[],"src":"659:2:17"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4927,"src":"693:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4920,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:17"},"scope":4937,"src":"640:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"809:32:17","statements":[{"expression":{"expression":{"id":4932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4931,"id":4934,"nodeType":"Return","src":"819:15:17"}]},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:17","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[],"src":"759:2:17"},"returnParameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"793:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4929,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:17"},"scope":4937,"src":"742:99:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4938,"src":"608:235:17","usedErrors":[]}],"src":"86:758:17"},"id":17},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[5011]},"id":5012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4939,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"112:311:18","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":5011,"linearizedBaseContracts":[5011],"name":"Counters","nameLocation":"432:8:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":4943,"members":[{"constant":false,"id":4942,"mutability":"mutable","name":"_value","nameLocation":"794:6:18","nodeType":"VariableDeclaration","scope":4943,"src":"786:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:18","nodeType":"StructDefinition","scope":5011,"src":"447:374:18","visibility":"public"},{"body":{"id":4954,"nodeType":"Block","src":"901:38:18","statements":[{"expression":{"expression":{"id":4951,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"918:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"918:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4950,"id":4953,"nodeType":"Return","src":"911:21:18"}]},"id":4955,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:18","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"counter","nameLocation":"860:7:18","nodeType":"VariableDeclaration","scope":4955,"src":"844:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4945,"nodeType":"UserDefinedTypeName","pathNode":{"id":4944,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"844:7:18"},"referencedDeclaration":4943,"src":"844:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:18"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4955,"src":"892:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:18"},"scope":5011,"src":"827:112:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4968,"nodeType":"Block","src":"998:70:18","statements":[{"id":4967,"nodeType":"UncheckedBlock","src":"1008:54:18","statements":[{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4961,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"1032:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"1032:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4966,"nodeType":"ExpressionStatement","src":"1032:19:18"}]}]},"id":4969,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:18","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"counter","nameLocation":"980:7:18","nodeType":"VariableDeclaration","scope":4969,"src":"964:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4957,"nodeType":"UserDefinedTypeName","pathNode":{"id":4956,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"964:7:18"},"referencedDeclaration":4943,"src":"964:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:18"},"returnParameters":{"id":4960,"nodeType":"ParameterList","parameters":[],"src":"998:0:18"},"scope":5011,"src":"945:123:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4996,"nodeType":"Block","src":"1127:176:18","statements":[{"assignments":[4976],"declarations":[{"constant":false,"id":4976,"mutability":"mutable","name":"value","nameLocation":"1145:5:18","nodeType":"VariableDeclaration","scope":4996,"src":"1137:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4979,"initialValue":{"expression":{"id":4977,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"1153:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"1153:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"1185:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":4980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4986,"nodeType":"ExpressionStatement","src":"1177:49:18"},{"id":4995,"nodeType":"UncheckedBlock","src":"1236:61:18","statements":[{"expression":{"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4987,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"1260:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":4989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"1260:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"1277:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ExpressionStatement","src":"1260:26:18"}]}]},"id":4997,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:18","nodeType":"FunctionDefinition","parameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"counter","nameLocation":"1109:7:18","nodeType":"VariableDeclaration","scope":4997,"src":"1093:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4971,"nodeType":"UserDefinedTypeName","pathNode":{"id":4970,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"1093:7:18"},"referencedDeclaration":4943,"src":"1093:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:18"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[],"src":"1127:0:18"},"scope":5011,"src":"1074:229:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5009,"nodeType":"Block","src":"1358:35:18","statements":[{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5003,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"1368:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4942,"src":"1368:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5008,"nodeType":"ExpressionStatement","src":"1368:18:18"}]},"id":5010,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:18","nodeType":"FunctionDefinition","parameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"counter","nameLocation":"1340:7:18","nodeType":"VariableDeclaration","scope":5010,"src":"1324:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":4999,"nodeType":"UserDefinedTypeName","pathNode":{"id":4998,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"1324:7:18"},"referencedDeclaration":4943,"src":"1324:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:18"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[],"src":"1358:0:18"},"scope":5011,"src":"1309:84:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5012,"src":"424:971:18","usedErrors":[]}],"src":"87:1309:18"},"id":18},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[5016],"ShortStrings":[5227],"StorageSlot":[5337]},"id":5228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5013,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":5014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":5338,"src":"131:27:19","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":5016,"name":"ShortString","nameLocation":"333:11:19","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:19","underlyingType":{"id":5015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"358:876:19","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":5227,"linearizedBaseContracts":[5227],"name":"ShortStrings","nameLocation":"1243:12:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5020,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:19","nodeType":"VariableDeclaration","scope":5227,"src":"1325:112:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"id":5024,"name":"StringTooLong","nameLocation":"1450:13:19","nodeType":"ErrorDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"str","nameLocation":"1471:3:19","nodeType":"VariableDeclaration","scope":5024,"src":"1464:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5021,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:19"},"src":"1444:32:19"},{"id":5026,"name":"InvalidShortString","nameLocation":"1487:18:19","nodeType":"ErrorDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[],"src":"1505:2:19"},"src":"1481:27:19"},{"body":{"id":5069,"nodeType":"Block","src":"1767:208:19","statements":[{"assignments":[5036],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:19","nodeType":"VariableDeclaration","scope":5069,"src":"1777:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5041,"initialValue":{"arguments":[{"id":5039,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1803:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:19","typeDescriptions":{}}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5042,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1821:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1821:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"1817:72:19","trueBody":{"id":5050,"nodeType":"Block","src":"1839:50:19","statements":[{"errorCall":{"arguments":[{"id":5047,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1874:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5046,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"1860:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"RevertStatement","src":"1853:25:19"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5060,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1946:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:19","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:19","typeDescriptions":{}}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1930:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":5063,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1955:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1955:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:19","typeDescriptions":{}}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1922:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5052,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"1905:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"type(ShortString)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1905:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"functionReturnParameters":5034,"id":5068,"nodeType":"Return","src":"1898:70:19"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"1514:170:19","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:19","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"str","nameLocation":"1726:3:19","nodeType":"VariableDeclaration","scope":5070,"src":"1712:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5028,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:19"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5070,"src":"1754:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5032,"nodeType":"UserDefinedTypeName","pathNode":{"id":5031,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"1754:11:19"},"referencedDeclaration":5016,"src":"1754:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:19"},"scope":5227,"src":"1689:286:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5095,"nodeType":"Block","src":"2133:331:19","statements":[{"assignments":[5080],"declarations":[{"constant":false,"id":5080,"mutability":"mutable","name":"len","nameLocation":"2151:3:19","nodeType":"VariableDeclaration","scope":5095,"src":"2143:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5084,"initialValue":{"arguments":[{"id":5082,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2168:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"id":5081,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"2157:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2157:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:19"},{"assignments":[5086],"declarations":[{"constant":false,"id":5086,"mutability":"mutable","name":"str","nameLocation":"2275:3:19","nodeType":"VariableDeclaration","scope":5095,"src":"2261:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5085,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5091,"initialValue":{"arguments":[{"hexValue":"3332","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":5087,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:19"},{"AST":{"nodeType":"YulBlock","src":"2357:81:19","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:19"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:19"},"nodeType":"YulFunctionCall","src":"2371:16:19"},"nodeType":"YulExpressionStatement","src":"2371:16:19"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:19"},"nodeType":"YulFunctionCall","src":"2407:14:19"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:19"},"nodeType":"YulFunctionCall","src":"2400:28:19"},"nodeType":"YulExpressionStatement","src":"2400:28:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5080,"isOffset":false,"isSlot":false,"src":"2383:3:19","valueSize":1},{"declaration":5074,"isOffset":false,"isSlot":false,"src":"2423:4:19","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"2378:3:19","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"2411:3:19","valueSize":1}],"id":5092,"nodeType":"InlineAssembly","src":"2348:90:19"},{"expression":{"id":5093,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"2454:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5078,"id":5094,"nodeType":"Return","src":"2447:10:19"}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"1981:73:19","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":5096,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:19","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:19","nodeType":"VariableDeclaration","scope":5096,"src":"2077:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5073,"nodeType":"UserDefinedTypeName","pathNode":{"id":5072,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"2077:11:19"},"referencedDeclaration":5016,"src":"2077:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:19"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5096,"src":"2118:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5076,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:19"},"scope":5227,"src":"2059:405:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5127,"nodeType":"Block","src":"2606:175:19","statements":[{"assignments":[5106],"declarations":[{"constant":false,"id":5106,"mutability":"mutable","name":"result","nameLocation":"2624:6:19","nodeType":"VariableDeclaration","scope":5127,"src":"2616:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5111,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2660:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"expression":{"id":5109,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"2641:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"type(ShortString)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:19","typeDescriptions":{}}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2633:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"2687:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5124,"nodeType":"IfStatement","src":"2683:69:19","trueBody":{"id":5123,"nodeType":"Block","src":"2700:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5120,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"2721:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2721:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5122,"nodeType":"RevertStatement","src":"2714:27:19"}]}},{"expression":{"id":5125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"2768:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5104,"id":5126,"nodeType":"Return","src":"2761:13:19"}]},"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"2470:61:19","text":" @dev Return the length of a `ShortString`."},"id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:19","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:19","nodeType":"VariableDeclaration","scope":5128,"src":"2556:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5099,"nodeType":"UserDefinedTypeName","pathNode":{"id":5098,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"2556:11:19"},"referencedDeclaration":5016,"src":"2556:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:19"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5128,"src":"2597:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:19"},"scope":5227,"src":"2536:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"3004:232:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3024:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:19","typeDescriptions":{}}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3018:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5165,"nodeType":"Block","src":"3102:128:19","statements":[{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":5154,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"3142:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":5151,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"3116:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5337_$","typeString":"type(library StorageSlot)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":5314,"src":"3116:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$5245_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5245_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":5156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5244,"src":"3116:38:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3157:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5159,"nodeType":"ExpressionStatement","src":"3116:46:19"},{"expression":{"arguments":[{"id":5162,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"3200:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5160,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"3183:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"type(ShortString)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"functionReturnParameters":5138,"id":5164,"nodeType":"Return","src":"3176:43:19"}]},"id":5166,"nodeType":"IfStatement","src":"3014:216:19","trueBody":{"id":5150,"nodeType":"Block","src":"3044:52:19","statements":[{"expression":{"arguments":[{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3079:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5146,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"3065:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"functionReturnParameters":5138,"id":5149,"nodeType":"Return","src":"3058:27:19"}]}}]},"documentation":{"id":5129,"nodeType":"StructuredDocumentation","src":"2787:103:19","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:19","nodeType":"FunctionDefinition","parameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"value","nameLocation":"2944:5:19","nodeType":"VariableDeclaration","scope":5168,"src":"2930:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5130,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5133,"mutability":"mutable","name":"store","nameLocation":"2966:5:19","nodeType":"VariableDeclaration","scope":5168,"src":"2951:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5132,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:19"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"2991:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5136,"nodeType":"UserDefinedTypeName","pathNode":{"id":5135,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"2991:11:19"},"referencedDeclaration":5016,"src":"2991:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:19"},"scope":5227,"src":"2895:341:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5194,"nodeType":"Block","src":"3476:159:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"3509:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"expression":{"id":5179,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"3490:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"type(ShortString)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3490:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5183,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"3519:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5192,"nodeType":"Block","src":"3592:37:19","statements":[{"expression":{"id":5190,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"3613:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":5178,"id":5191,"nodeType":"Return","src":"3606:12:19"}]},"id":5193,"nodeType":"IfStatement","src":"3486:143:19","trueBody":{"id":5189,"nodeType":"Block","src":"3539:47:19","statements":[{"expression":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"3569:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"id":5185,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"3560:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3560:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5178,"id":5188,"nodeType":"Return","src":"3553:22:19"}]}}]},"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"3242:120:19","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:19","nodeType":"FunctionDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"value","nameLocation":"3409:5:19","nodeType":"VariableDeclaration","scope":5195,"src":"3397:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5171,"nodeType":"UserDefinedTypeName","pathNode":{"id":5170,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"3397:11:19"},"referencedDeclaration":5016,"src":"3397:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":5174,"mutability":"mutable","name":"store","nameLocation":"3431:5:19","nodeType":"VariableDeclaration","scope":5195,"src":"3416:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5173,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:19"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5195,"src":"3461:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5176,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:19"},"scope":5227,"src":"3367:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"4108:175:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"4141:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"expression":{"id":5206,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"4122:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"type(ShortString)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4122:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5210,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"4151:18:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5223,"nodeType":"Block","src":"4226:51:19","statements":[{"expression":{"expression":{"arguments":[{"id":5219,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"4253:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5217,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:19","typeDescriptions":{}}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4247:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4247:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5205,"id":5222,"nodeType":"Return","src":"4240:26:19"}]},"id":5224,"nodeType":"IfStatement","src":"4118:159:19","trueBody":{"id":5216,"nodeType":"Block","src":"4171:49:19","statements":[{"expression":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"4203:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}],"id":5212,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"4192:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$5016_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5205,"id":5215,"nodeType":"Return","src":"4185:24:19"}]}}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"3641:357:19","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:19","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"value","nameLocation":"4047:5:19","nodeType":"VariableDeclaration","scope":5226,"src":"4035:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5198,"nodeType":"UserDefinedTypeName","pathNode":{"id":5197,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"4035:11:19"},"referencedDeclaration":5016,"src":"4035:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"store","nameLocation":"4069:5:19","nodeType":"VariableDeclaration","scope":5226,"src":"4054:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5200,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:19"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"4099:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:19"},"scope":5227,"src":"4003:280:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5228,"src":"1235:3050:19","usedErrors":[5024,5026]}],"src":"106:4180:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[5337]},"id":5338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5229,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"218:1201:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":5337,"linearizedBaseContracts":[5337],"name":"StorageSlot","nameLocation":"1428:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":5233,"members":[{"constant":false,"id":5232,"mutability":"mutable","name":"value","nameLocation":"1483:5:20","nodeType":"VariableDeclaration","scope":5233,"src":"1475:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5231,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:20","nodeType":"StructDefinition","scope":5337,"src":"1446:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":5236,"members":[{"constant":false,"id":5235,"mutability":"mutable","name":"value","nameLocation":"1535:5:20","nodeType":"VariableDeclaration","scope":5236,"src":"1530:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5234,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:20","nodeType":"StructDefinition","scope":5337,"src":"1501:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":5239,"members":[{"constant":false,"id":5238,"mutability":"mutable","name":"value","nameLocation":"1590:5:20","nodeType":"VariableDeclaration","scope":5239,"src":"1582:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:20","nodeType":"StructDefinition","scope":5337,"src":"1553:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":5242,"members":[{"constant":false,"id":5241,"mutability":"mutable","name":"value","nameLocation":"1645:5:20","nodeType":"VariableDeclaration","scope":5242,"src":"1637:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:20","nodeType":"StructDefinition","scope":5337,"src":"1608:49:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":5245,"members":[{"constant":false,"id":5244,"mutability":"mutable","name":"value","nameLocation":"1698:5:20","nodeType":"VariableDeclaration","scope":5245,"src":"1691:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5243,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:20","nodeType":"StructDefinition","scope":5337,"src":"1663:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":5248,"members":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"1749:5:20","nodeType":"VariableDeclaration","scope":5248,"src":"1743:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5246,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:20","nodeType":"StructDefinition","scope":5337,"src":"1716:45:20","visibility":"public"},{"body":{"id":5258,"nodeType":"Block","src":"1943:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:20","statements":[{"nodeType":"YulAssignment","src":"2019:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5255,"isOffset":false,"isSlot":true,"src":"2019:6:20","suffix":"slot","valueSize":1},{"declaration":5251,"isOffset":false,"isSlot":false,"src":"2029:4:20","valueSize":1}],"id":5257,"nodeType":"InlineAssembly","src":"1996:47:20"}]},"documentation":{"id":5249,"nodeType":"StructuredDocumentation","src":"1767:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:20","nodeType":"FunctionDefinition","parameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"slot","nameLocation":"1891:4:20","nodeType":"VariableDeclaration","scope":5259,"src":"1883:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:20"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5255,"mutability":"mutable","name":"r","nameLocation":"1940:1:20","nodeType":"VariableDeclaration","scope":5259,"src":"1920:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5233_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":5254,"nodeType":"UserDefinedTypeName","pathNode":{"id":5253,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":5233,"src":"1920:11:20"},"referencedDeclaration":5233,"src":"1920:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5233_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:20"},"scope":5337,"src":"1859:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"2231:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:20","statements":[{"nodeType":"YulAssignment","src":"2307:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5266,"isOffset":false,"isSlot":true,"src":"2307:6:20","suffix":"slot","valueSize":1},{"declaration":5262,"isOffset":false,"isSlot":false,"src":"2317:4:20","valueSize":1}],"id":5268,"nodeType":"InlineAssembly","src":"2284:47:20"}]},"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"2055:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:20","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"slot","nameLocation":"2179:4:20","nodeType":"VariableDeclaration","scope":5270,"src":"2171:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:20"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"r","nameLocation":"2228:1:20","nodeType":"VariableDeclaration","scope":5270,"src":"2208:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5236_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":5265,"nodeType":"UserDefinedTypeName","pathNode":{"id":5264,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":5236,"src":"2208:11:20"},"referencedDeclaration":5236,"src":"2208:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5236_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:20"},"scope":5337,"src":"2147:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5280,"nodeType":"Block","src":"2519:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:20","statements":[{"nodeType":"YulAssignment","src":"2595:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5277,"isOffset":false,"isSlot":true,"src":"2595:6:20","suffix":"slot","valueSize":1},{"declaration":5273,"isOffset":false,"isSlot":false,"src":"2605:4:20","valueSize":1}],"id":5279,"nodeType":"InlineAssembly","src":"2572:47:20"}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"2343:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":5281,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:20","nodeType":"FunctionDefinition","parameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"slot","nameLocation":"2467:4:20","nodeType":"VariableDeclaration","scope":5281,"src":"2459:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:20"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"r","nameLocation":"2516:1:20","nodeType":"VariableDeclaration","scope":5281,"src":"2496:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5239_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":5276,"nodeType":"UserDefinedTypeName","pathNode":{"id":5275,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":5239,"src":"2496:11:20"},"referencedDeclaration":5239,"src":"2496:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5239_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:20"},"scope":5337,"src":"2435:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5291,"nodeType":"Block","src":"2807:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:20","statements":[{"nodeType":"YulAssignment","src":"2883:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5288,"isOffset":false,"isSlot":true,"src":"2883:6:20","suffix":"slot","valueSize":1},{"declaration":5284,"isOffset":false,"isSlot":false,"src":"2893:4:20","valueSize":1}],"id":5290,"nodeType":"InlineAssembly","src":"2860:47:20"}]},"documentation":{"id":5282,"nodeType":"StructuredDocumentation","src":"2631:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:20","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"slot","nameLocation":"2755:4:20","nodeType":"VariableDeclaration","scope":5292,"src":"2747:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:20"},"returnParameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"r","nameLocation":"2804:1:20","nodeType":"VariableDeclaration","scope":5292,"src":"2784:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5242_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":5287,"nodeType":"UserDefinedTypeName","pathNode":{"id":5286,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"2784:11:20"},"referencedDeclaration":5242,"src":"2784:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5242_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:20"},"scope":5337,"src":"2723:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"3092:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:20","statements":[{"nodeType":"YulAssignment","src":"3168:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5299,"isOffset":false,"isSlot":true,"src":"3168:6:20","suffix":"slot","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"3178:4:20","valueSize":1}],"id":5301,"nodeType":"InlineAssembly","src":"3145:47:20"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"2919:86:20","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:20","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"slot","nameLocation":"3041:4:20","nodeType":"VariableDeclaration","scope":5303,"src":"3033:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:20"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"r","nameLocation":"3089:1:20","nodeType":"VariableDeclaration","scope":5303,"src":"3070:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5245_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5298,"nodeType":"UserDefinedTypeName","pathNode":{"id":5297,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":5245,"src":"3070:10:20"},"referencedDeclaration":5245,"src":"3070:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5245_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:20"},"scope":5337,"src":"3010:188:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"3400:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:20","statements":[{"nodeType":"YulAssignment","src":"3476:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5310,"isOffset":false,"isSlot":true,"src":"3476:6:20","suffix":"slot","valueSize":1},{"declaration":5306,"isOffset":false,"isSlot":true,"src":"3486:10:20","suffix":"slot","valueSize":1}],"id":5312,"nodeType":"InlineAssembly","src":"3453:53:20"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"3204:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:20","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"store","nameLocation":"3348:5:20","nodeType":"VariableDeclaration","scope":5314,"src":"3333:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5305,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:20"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"r","nameLocation":"3397:1:20","nodeType":"VariableDeclaration","scope":5314,"src":"3378:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5245_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5309,"nodeType":"UserDefinedTypeName","pathNode":{"id":5308,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":5245,"src":"3378:10:20"},"referencedDeclaration":5245,"src":"3378:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5245_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:20"},"scope":5337,"src":"3310:202:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5324,"nodeType":"Block","src":"3688:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:20","statements":[{"nodeType":"YulAssignment","src":"3764:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5321,"isOffset":false,"isSlot":true,"src":"3764:6:20","suffix":"slot","valueSize":1},{"declaration":5317,"isOffset":false,"isSlot":false,"src":"3774:4:20","valueSize":1}],"id":5323,"nodeType":"InlineAssembly","src":"3741:47:20"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"3518:85:20","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":5325,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:20","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"slot","nameLocation":"3638:4:20","nodeType":"VariableDeclaration","scope":5325,"src":"3630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:20"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"r","nameLocation":"3685:1:20","nodeType":"VariableDeclaration","scope":5325,"src":"3667:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5248_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5320,"nodeType":"UserDefinedTypeName","pathNode":{"id":5319,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":5248,"src":"3667:9:20"},"referencedDeclaration":5248,"src":"3667:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5248_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:20"},"scope":5337,"src":"3608:186:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5335,"nodeType":"Block","src":"3991:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:20","statements":[{"nodeType":"YulAssignment","src":"4067:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5332,"isOffset":false,"isSlot":true,"src":"4067:6:20","suffix":"slot","valueSize":1},{"declaration":5328,"isOffset":false,"isSlot":true,"src":"4077:10:20","suffix":"slot","valueSize":1}],"id":5334,"nodeType":"InlineAssembly","src":"4044:53:20"}]},"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"3800:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:20","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"store","nameLocation":"3940:5:20","nodeType":"VariableDeclaration","scope":5336,"src":"3926:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5327,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:20"},"returnParameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"r","nameLocation":"3988:1:20","nodeType":"VariableDeclaration","scope":5336,"src":"3970:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5248_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5331,"nodeType":"UserDefinedTypeName","pathNode":{"id":5330,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":5248,"src":"3970:9:20"},"referencedDeclaration":5248,"src":"3970:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5248_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:20"},"scope":5337,"src":"3904:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5338,"src":"1420:2685:20","usedErrors":[]}],"src":"193:3913:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7038],"SignedMath":[8684],"Strings":[5566]},"id":5567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5339,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5567,"sourceUnit":7039,"src":"126:25:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":5341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5567,"sourceUnit":8685,"src":"152:31:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"185:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":5566,"linearizedBaseContracts":[5566],"name":"Strings","nameLocation":"228:7:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5345,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:21","nodeType":"VariableDeclaration","scope":5566,"src":"242:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5343,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5348,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:21","nodeType":"VariableDeclaration","scope":5566,"src":"302:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5346,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":5395,"nodeType":"Block","src":"518:625:21","statements":[{"id":5394,"nodeType":"UncheckedBlock","src":"528:609:21","statements":[{"assignments":[5357],"declarations":[{"constant":false,"id":5357,"mutability":"mutable","name":"length","nameLocation":"560:6:21","nodeType":"VariableDeclaration","scope":5394,"src":"552:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"580:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5358,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"569:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6875,"src":"569:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:21"},{"assignments":[5366],"declarations":[{"constant":false,"id":5366,"mutability":"mutable","name":"buffer","nameLocation":"618:6:21","nodeType":"VariableDeclaration","scope":5394,"src":"604:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5365,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5371,"initialValue":{"arguments":[{"id":5369,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"638:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":5367,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:21"},{"assignments":[5373],"declarations":[{"constant":false,"id":5373,"mutability":"mutable","name":"ptr","nameLocation":"667:3:21","nodeType":"VariableDeclaration","scope":5394,"src":"659:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5374,"nodeType":"VariableDeclarationStatement","src":"659:11:21"},{"AST":{"nodeType":"YulBlock","src":"740:67:21","statements":[{"nodeType":"YulAssignment","src":"758:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:21"},"nodeType":"YulFunctionCall","src":"777:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5366,"isOffset":false,"isSlot":false,"src":"769:6:21","valueSize":1},{"declaration":5357,"isOffset":false,"isSlot":false,"src":"785:6:21","valueSize":1},{"declaration":5373,"isOffset":false,"isSlot":false,"src":"758:3:21","valueSize":1}],"id":5375,"nodeType":"InlineAssembly","src":"731:76:21"},{"body":{"id":5390,"nodeType":"Block","src":"833:267:21","statements":[{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:21","subExpression":{"id":5377,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"851:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5379,"nodeType":"ExpressionStatement","src":"851:5:21"},{"AST":{"nodeType":"YulBlock","src":"934:84:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:14:21"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:21"},"nodeType":"YulFunctionCall","src":"969:30:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:21"},"nodeType":"YulFunctionCall","src":"956:44:21"},"nodeType":"YulExpressionStatement","src":"956:44:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5345,"isOffset":false,"isSlot":false,"src":"990:8:21","valueSize":1},{"declaration":5373,"isOffset":false,"isSlot":false,"src":"964:3:21","valueSize":1},{"declaration":5351,"isOffset":false,"isSlot":false,"src":"978:5:21","valueSize":1}],"id":5380,"nodeType":"InlineAssembly","src":"925:93:21"},{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"1035:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"1035:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"1068:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5389,"nodeType":"IfStatement","src":"1064:21:21","trueBody":{"id":5388,"nodeType":"Break","src":"1080:5:21"}}]},"condition":{"hexValue":"74727565","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":5391,"nodeType":"WhileStatement","src":"820:280:21"},{"expression":{"id":5392,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"1120:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5355,"id":5393,"nodeType":"Return","src":"1113:13:21"}]}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"352:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:21","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"value","nameLocation":"473:5:21","nodeType":"VariableDeclaration","scope":5396,"src":"465:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:21"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"503:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5353,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:21"},"scope":5566,"src":"447:696:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"1313:103:21","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"1354:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:21","trueExpression":{"hexValue":"2d","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"1400:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":5415,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"1385:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8684_$","typeString":"type(library SignedMath)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"1385:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[5396,5424],"referencedDeclaration":5396,"src":"1376:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5406,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5404,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:21","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5403,"id":5422,"nodeType":"Return","src":"1323:86:21"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"1149:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:21","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"value","nameLocation":"1268:5:21","nodeType":"VariableDeclaration","scope":5424,"src":"1261:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5398,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:21"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"1298:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5401,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:21"},"scope":5566,"src":"1243:173:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5443,"nodeType":"Block","src":"1595:100:21","statements":[{"id":5442,"nodeType":"UncheckedBlock","src":"1605:84:21","statements":[{"expression":{"arguments":[{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"1648:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"1667:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5434,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"1655:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"1655:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5432,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5444,5520,5540],"referencedDeclaration":5520,"src":"1636:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5431,"id":5441,"nodeType":"Return","src":"1629:49:21"}]}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"1422:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5444,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:21","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"1550:5:21","nodeType":"VariableDeclaration","scope":5444,"src":"1542:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:21"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5444,"src":"1580:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5429,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:21"},"scope":5566,"src":"1521:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5519,"nodeType":"Block","src":"1908:347:21","statements":[{"assignments":[5455],"declarations":[{"constant":false,"id":5455,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:21","nodeType":"VariableDeclaration","scope":5519,"src":"1918:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5454,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5464,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5459,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"1954:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5456,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:21"},{"expression":{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5465,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"1975:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5467,"indexExpression":{"hexValue":"30","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5470,"nodeType":"ExpressionStatement","src":"1975:15:21"},{"expression":{"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5471,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"2000:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5473,"indexExpression":{"hexValue":"31","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5476,"nodeType":"ExpressionStatement","src":"2000:15:21"},{"body":{"id":5505,"nodeType":"Block","src":"2070:83:21","statements":[{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5491,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"2084:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5493,"indexExpression":{"id":5492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2091:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5494,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"2096:8:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5498,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"2105:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5500,"nodeType":"ExpressionStatement","src":"2084:33:21"},{"expression":{"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"2131:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5504,"nodeType":"ExpressionStatement","src":"2131:11:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2058:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"initializationExpression":{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"i","nameLocation":"2038:1:21","nodeType":"VariableDeclaration","scope":5506,"src":"2030:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5484,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5480,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"2046:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:21"},"loopExpression":{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:21","subExpression":{"id":5488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"2067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"2065:3:21"},"nodeType":"ForStatement","src":"2025:128:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"2170:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":5507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5513,"nodeType":"ExpressionStatement","src":"2162:55:21"},{"expression":{"arguments":[{"id":5516,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"2241:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5514,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:21","typeDescriptions":{}}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5453,"id":5518,"nodeType":"Return","src":"2227:21:21"}]},"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"1701:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5520,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:21","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"value","nameLocation":"1847:5:21","nodeType":"VariableDeclaration","scope":5520,"src":"1839:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5449,"mutability":"mutable","name":"length","nameLocation":"1862:6:21","nodeType":"VariableDeclaration","scope":5520,"src":"1854:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:21"},"returnParameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5520,"src":"1893:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5451,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:21"},"scope":5566,"src":"1818:437:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5539,"nodeType":"Block","src":"2480:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5533,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"2525:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5531,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:21","typeDescriptions":{}}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:21","typeDescriptions":{}}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5536,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"2533:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5528,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5444,5520,5540],"referencedDeclaration":5520,"src":"2497:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5527,"id":5538,"nodeType":"Return","src":"2490:59:21"}]},"documentation":{"id":5521,"nodeType":"StructuredDocumentation","src":"2261:141:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":5540,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:21","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"addr","nameLocation":"2436:4:21","nodeType":"VariableDeclaration","scope":5540,"src":"2428:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5522,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:21"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"2465:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5525,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:21"},"scope":5566,"src":"2407:149:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"2711:66:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"2744:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5551,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:21","typeDescriptions":{}}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5550,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2767:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5557,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:21","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5556,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5549,"id":5563,"nodeType":"Return","src":"2721:49:21"}]},"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"2562:66:21","text":" @dev Returns true if the two strings are equal."},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:21","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"a","nameLocation":"2662:1:21","nodeType":"VariableDeclaration","scope":5565,"src":"2648:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5542,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5545,"mutability":"mutable","name":"b","nameLocation":"2679:1:21","nodeType":"VariableDeclaration","scope":5565,"src":"2665:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5544,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:21"},"returnParameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5565,"src":"2705:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5547,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:21"},"scope":5566,"src":"2633:144:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5567,"src":"220:2559:21","usedErrors":[]}],"src":"101:2679:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5932],"Math":[7038],"SignedMath":[8684],"Strings":[5566]},"id":5933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5568,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:22"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5933,"sourceUnit":5567,"src":"137:24:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"163:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5932,"linearizedBaseContracts":[5932],"name":"ECDSA","nameLocation":"377:5:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5576,"members":[{"id":5571,"name":"NoError","nameLocation":"417:7:22","nodeType":"EnumValue","src":"417:7:22"},{"id":5572,"name":"InvalidSignature","nameLocation":"434:16:22","nodeType":"EnumValue","src":"434:16:22"},{"id":5573,"name":"InvalidSignatureLength","nameLocation":"460:22:22","nodeType":"EnumValue","src":"460:22:22"},{"id":5574,"name":"InvalidSignatureS","nameLocation":"492:17:22","nodeType":"EnumValue","src":"492:17:22"},{"id":5575,"name":"InvalidSignatureV","nameLocation":"519:17:22","nodeType":"EnumValue","src":"519:17:22"}],"name":"RecoverError","nameLocation":"394:12:22","nodeType":"EnumDefinition","src":"389:175:22"},{"body":{"id":5619,"nodeType":"Block","src":"624:457:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"638:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5583,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"647:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"647:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"734:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5589,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"743:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5572,"src":"743:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"843:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5598,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"852:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5573,"src":"852:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"965:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5607,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"974:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5574,"src":"974:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"961:114:22","trueBody":{"id":5614,"nodeType":"Block","src":"1006:69:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":5610,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"ExpressionStatement","src":"1020:44:22"}]}},"id":5616,"nodeType":"IfStatement","src":"839:236:22","trueBody":{"id":5605,"nodeType":"Block","src":"889:66:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":5601,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5604,"nodeType":"ExpressionStatement","src":"903:41:22"}]}},"id":5617,"nodeType":"IfStatement","src":"730:345:22","trueBody":{"id":5596,"nodeType":"Block","src":"774:59:22","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":5592,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5595,"nodeType":"ExpressionStatement","src":"788:34:22"}]}},"id":5618,"nodeType":"IfStatement","src":"634:441:22","trueBody":{"id":5587,"nodeType":"Block","src":"669:55:22","statements":[{"functionReturnParameters":5581,"id":5586,"nodeType":"Return","src":"683:7:22"}]}}]},"id":5620,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:22","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"error","nameLocation":"604:5:22","nodeType":"VariableDeclaration","scope":5620,"src":"591:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5578,"nodeType":"UserDefinedTypeName","pathNode":{"id":5577,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"591:12:22"},"referencedDeclaration":5576,"src":"591:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:22"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[],"src":"624:0:22"},"scope":5932,"src":"570:511:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5665,"nodeType":"Block","src":"2249:626:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5633,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"2263:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5663,"nodeType":"Block","src":"2788:81:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5655,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:22","typeDescriptions":{}}},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5659,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"2822:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5573,"src":"2822:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"id":5661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5632,"id":5662,"nodeType":"Return","src":"2802:56:22"}]},"id":5664,"nodeType":"IfStatement","src":"2259:610:22","trueBody":{"id":5654,"nodeType":"Block","src":"2287:495:22","statements":[{"assignments":[5638],"declarations":[{"constant":false,"id":5638,"mutability":"mutable","name":"r","nameLocation":"2309:1:22","nodeType":"VariableDeclaration","scope":5654,"src":"2301:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5639,"nodeType":"VariableDeclarationStatement","src":"2301:9:22"},{"assignments":[5641],"declarations":[{"constant":false,"id":5641,"mutability":"mutable","name":"s","nameLocation":"2332:1:22","nodeType":"VariableDeclaration","scope":5654,"src":"2324:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5642,"nodeType":"VariableDeclarationStatement","src":"2324:9:22"},{"assignments":[5644],"declarations":[{"constant":false,"id":5644,"mutability":"mutable","name":"v","nameLocation":"2353:1:22","nodeType":"VariableDeclaration","scope":5654,"src":"2347:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5643,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5645,"nodeType":"VariableDeclarationStatement","src":"2347:7:22"},{"AST":{"nodeType":"YulBlock","src":"2555:171:22","statements":[{"nodeType":"YulAssignment","src":"2573:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:22"},"nodeType":"YulFunctionCall","src":"2584:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:22"},"nodeType":"YulFunctionCall","src":"2578:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:22"}]},{"nodeType":"YulAssignment","src":"2622:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:22"},"nodeType":"YulFunctionCall","src":"2633:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:22"},"nodeType":"YulFunctionCall","src":"2627:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:22"}]},{"nodeType":"YulAssignment","src":"2671:41:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:22"},"nodeType":"YulFunctionCall","src":"2690:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:22"},"nodeType":"YulFunctionCall","src":"2684:27:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:22"},"nodeType":"YulFunctionCall","src":"2676:36:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5638,"isOffset":false,"isSlot":false,"src":"2573:1:22","valueSize":1},{"declaration":5641,"isOffset":false,"isSlot":false,"src":"2622:1:22","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"2588:9:22","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"2637:9:22","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"2694:9:22","valueSize":1},{"declaration":5644,"isOffset":false,"isSlot":false,"src":"2671:1:22","valueSize":1}],"id":5646,"nodeType":"InlineAssembly","src":"2546:180:22"},{"expression":{"arguments":[{"id":5648,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2757:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5649,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"2763:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5650,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"2766:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5651,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"2769:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5647,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5666,5740,5834],"referencedDeclaration":5834,"src":"2746:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5632,"id":5653,"nodeType":"Return","src":"2739:32:22"}]}}]},"documentation":{"id":5621,"nodeType":"StructuredDocumentation","src":"1087:1053:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":5666,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:22","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"hash","nameLocation":"2173:4:22","nodeType":"VariableDeclaration","scope":5666,"src":"2165:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5625,"mutability":"mutable","name":"signature","nameLocation":"2192:9:22","nodeType":"VariableDeclaration","scope":5666,"src":"2179:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5624,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:22"},"returnParameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5666,"src":"2226:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5627,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5666,"src":"2235:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5630,"nodeType":"UserDefinedTypeName","pathNode":{"id":5629,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"2235:12:22"},"referencedDeclaration":5576,"src":"2235:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:22"},"scope":5932,"src":"2145:730:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"3748:140:22","statements":[{"assignments":[5677,5680],"declarations":[{"constant":false,"id":5677,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:22","nodeType":"VariableDeclaration","scope":5692,"src":"3759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5676,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5680,"mutability":"mutable","name":"error","nameLocation":"3791:5:22","nodeType":"VariableDeclaration","scope":5692,"src":"3778:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5679,"nodeType":"UserDefinedTypeName","pathNode":{"id":5678,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"3778:12:22"},"referencedDeclaration":5576,"src":"3778:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5685,"initialValue":{"arguments":[{"id":5682,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"3811:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5683,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"3817:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5681,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5666,5740,5834],"referencedDeclaration":5666,"src":"3800:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:22"},{"expression":{"arguments":[{"id":5687,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"3849:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}],"id":5686,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"3837:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5576_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5689,"nodeType":"ExpressionStatement","src":"3837:18:22"},{"expression":{"id":5690,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"3872:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5675,"id":5691,"nodeType":"Return","src":"3865:16:22"}]},"documentation":{"id":5667,"nodeType":"StructuredDocumentation","src":"2881:775:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:22","nodeType":"FunctionDefinition","parameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"hash","nameLocation":"3686:4:22","nodeType":"VariableDeclaration","scope":5693,"src":"3678:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5671,"mutability":"mutable","name":"signature","nameLocation":"3705:9:22","nodeType":"VariableDeclaration","scope":5693,"src":"3692:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5670,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:22"},"returnParameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5693,"src":"3739:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5673,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:22"},"scope":5932,"src":"3661:227:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"4245:203:22","statements":[{"assignments":[5709],"declarations":[{"constant":false,"id":5709,"mutability":"mutable","name":"s","nameLocation":"4263:1:22","nodeType":"VariableDeclaration","scope":5739,"src":"4255:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5716,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"4267:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:22","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:22"},{"assignments":[5718],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"v","nameLocation":"4363:1:22","nodeType":"VariableDeclaration","scope":5739,"src":"4357:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5717,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5731,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5723,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"4382:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5721,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:22","typeDescriptions":{}}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4374:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5719,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:22","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:22"},{"expression":{"arguments":[{"id":5733,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"4427:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5734,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"4433:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5735,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"4436:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5736,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"4439:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5732,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5666,5740,5834],"referencedDeclaration":5834,"src":"4416:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4416:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5707,"id":5738,"nodeType":"Return","src":"4409:32:22"}]},"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"3894:243:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:22","nodeType":"FunctionDefinition","parameters":{"id":5701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"hash","nameLocation":"4170:4:22","nodeType":"VariableDeclaration","scope":5740,"src":"4162:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5698,"mutability":"mutable","name":"r","nameLocation":"4184:1:22","nodeType":"VariableDeclaration","scope":5740,"src":"4176:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5700,"mutability":"mutable","name":"vs","nameLocation":"4195:2:22","nodeType":"VariableDeclaration","scope":5740,"src":"4187:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:22"},"returnParameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"4222:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5702,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"4231:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5705,"nodeType":"UserDefinedTypeName","pathNode":{"id":5704,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"4231:12:22"},"referencedDeclaration":5576,"src":"4231:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:22"},"scope":5932,"src":"4142:306:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5769,"nodeType":"Block","src":"4699:136:22","statements":[{"assignments":[5753,5756],"declarations":[{"constant":false,"id":5753,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:22","nodeType":"VariableDeclaration","scope":5769,"src":"4710:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5752,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5756,"mutability":"mutable","name":"error","nameLocation":"4742:5:22","nodeType":"VariableDeclaration","scope":5769,"src":"4729:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5755,"nodeType":"UserDefinedTypeName","pathNode":{"id":5754,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"4729:12:22"},"referencedDeclaration":5576,"src":"4729:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5762,"initialValue":{"arguments":[{"id":5758,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"4762:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5759,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"4768:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5760,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"4771:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5757,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5666,5740,5834],"referencedDeclaration":5740,"src":"4751:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4751:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:22"},{"expression":{"arguments":[{"id":5764,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"4796:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}],"id":5763,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"4784:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5576_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5766,"nodeType":"ExpressionStatement","src":"4784:18:22"},{"expression":{"id":5767,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"4819:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5751,"id":5768,"nodeType":"Return","src":"4812:16:22"}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"4454:154:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":5770,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:22","nodeType":"FunctionDefinition","parameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"hash","nameLocation":"4638:4:22","nodeType":"VariableDeclaration","scope":5770,"src":"4630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5745,"mutability":"mutable","name":"r","nameLocation":"4652:1:22","nodeType":"VariableDeclaration","scope":5770,"src":"4644:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5747,"mutability":"mutable","name":"vs","nameLocation":"4663:2:22","nodeType":"VariableDeclaration","scope":5770,"src":"4655:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:22"},"returnParameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5770,"src":"4690:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5749,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:22"},"scope":5932,"src":"4613:222:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"5120:1345:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5789,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"6016:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:22","typeDescriptions":{}}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6008:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5802,"nodeType":"IfStatement","src":"6004:161:22","trueBody":{"id":5801,"nodeType":"Block","src":"6089:76:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5793,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:22","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6111:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5797,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"6123:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5574,"src":"6123:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"id":5799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5786,"id":5800,"nodeType":"Return","src":"6103:51:22"}]}},{"assignments":[5804],"declarations":[{"constant":false,"id":5804,"mutability":"mutable","name":"signer","nameLocation":"6267:6:22","nodeType":"VariableDeclaration","scope":5833,"src":"6259:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5803,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5811,"initialValue":{"arguments":[{"id":5806,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"6286:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5807,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"6292:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5808,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"6295:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5809,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"6298:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5805,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6276:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"6314:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5813,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:22","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6324:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5827,"nodeType":"IfStatement","src":"6310:101:22","trueBody":{"id":5826,"nodeType":"Block","src":"6336:75:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:22","typeDescriptions":{}}},"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5822,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"6370:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5572,"src":"6370:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"id":5824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5786,"id":5825,"nodeType":"Return","src":"6350:50:22"}]}},{"expression":{"components":[{"id":5828,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"6429:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5829,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"6437:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5576_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"6437:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"id":5831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5786,"id":5832,"nodeType":"Return","src":"6421:37:22"}]},"documentation":{"id":5771,"nodeType":"StructuredDocumentation","src":"4841:163:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:22","nodeType":"FunctionDefinition","parameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"hash","nameLocation":"5037:4:22","nodeType":"VariableDeclaration","scope":5834,"src":"5029:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5775,"mutability":"mutable","name":"v","nameLocation":"5049:1:22","nodeType":"VariableDeclaration","scope":5834,"src":"5043:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5774,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5777,"mutability":"mutable","name":"r","nameLocation":"5060:1:22","nodeType":"VariableDeclaration","scope":5834,"src":"5052:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5779,"mutability":"mutable","name":"s","nameLocation":"5071:1:22","nodeType":"VariableDeclaration","scope":5834,"src":"5063:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:22"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5834,"src":"5097:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5781,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5834,"src":"5106:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5784,"nodeType":"UserDefinedTypeName","pathNode":{"id":5783,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"5106:12:22"},"referencedDeclaration":5576,"src":"5106:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:22"},"scope":5932,"src":"5009:1456:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5866,"nodeType":"Block","src":"6692:138:22","statements":[{"assignments":[5849,5852],"declarations":[{"constant":false,"id":5849,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:22","nodeType":"VariableDeclaration","scope":5866,"src":"6703:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5848,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5852,"mutability":"mutable","name":"error","nameLocation":"6735:5:22","nodeType":"VariableDeclaration","scope":5866,"src":"6722:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5851,"nodeType":"UserDefinedTypeName","pathNode":{"id":5850,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5576,"src":"6722:12:22"},"referencedDeclaration":5576,"src":"6722:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5859,"initialValue":{"arguments":[{"id":5854,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"6755:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5855,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"6761:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5856,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"6764:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5857,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"6767:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5853,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5666,5740,5834],"referencedDeclaration":5834,"src":"6744:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5576_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:22"},{"expression":{"arguments":[{"id":5861,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"6791:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5576","typeString":"enum ECDSA.RecoverError"}],"id":5860,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"6779:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5576_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6779:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"ExpressionStatement","src":"6779:18:22"},{"expression":{"id":5864,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"6814:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5847,"id":5865,"nodeType":"Return","src":"6807:16:22"}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"6471:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5867,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:22","nodeType":"FunctionDefinition","parameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"hash","nameLocation":"6623:4:22","nodeType":"VariableDeclaration","scope":5867,"src":"6615:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5839,"mutability":"mutable","name":"v","nameLocation":"6635:1:22","nodeType":"VariableDeclaration","scope":5867,"src":"6629:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5838,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"r","nameLocation":"6646:1:22","nodeType":"VariableDeclaration","scope":5867,"src":"6638:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5843,"mutability":"mutable","name":"s","nameLocation":"6657:1:22","nodeType":"VariableDeclaration","scope":5867,"src":"6649:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:22"},"returnParameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5867,"src":"6683:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5845,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:22"},"scope":5932,"src":"6598:232:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5876,"nodeType":"Block","src":"7206:310:22","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:22","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:22","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:22"},"nodeType":"YulFunctionCall","src":"7376:48:22"},"nodeType":"YulExpressionStatement","src":"7376:48:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:22","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:22"},"nodeType":"YulFunctionCall","src":"7437:18:22"},"nodeType":"YulExpressionStatement","src":"7437:18:22"},{"nodeType":"YulAssignment","src":"7468:32:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:22","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:22"},"nodeType":"YulFunctionCall","src":"7479:21:22"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5870,"isOffset":false,"isSlot":false,"src":"7450:4:22","valueSize":1},{"declaration":5873,"isOffset":false,"isSlot":false,"src":"7468:7:22","valueSize":1}],"id":5875,"nodeType":"InlineAssembly","src":"7353:157:22"}]},"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"6836:279:22","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5877,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:22","nodeType":"FunctionDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"hash","nameLocation":"7160:4:22","nodeType":"VariableDeclaration","scope":5877,"src":"7152:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:22"},"returnParameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"message","nameLocation":"7197:7:22","nodeType":"VariableDeclaration","scope":5877,"src":"7189:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:22"},"scope":5932,"src":"7120:396:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"7881:116:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":5891,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"7976:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7976:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5889,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"7959:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5566_$","typeString":"type(library Strings)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5396,"src":"7959:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5894,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"7987:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5886,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:81:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:92:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5884,"id":5897,"nodeType":"Return","src":"7891:99:22"}]},"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"7522:274:22","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:22","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"s","nameLocation":"7846:1:22","nodeType":"VariableDeclaration","scope":5899,"src":"7833:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5879,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:22"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"7872:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:22"},"scope":5932,"src":"7801:196:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5910,"nodeType":"Block","src":"8443:290:22","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:22"},"nodeType":"YulFunctionCall","src":"8530:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:22"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:22","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:22"},"nodeType":"YulFunctionCall","src":"8554:23:22"},"nodeType":"YulExpressionStatement","src":"8554:23:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:22","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:22"},"nodeType":"YulFunctionCall","src":"8597:14:22"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:22"},"nodeType":"YulFunctionCall","src":"8590:39:22"},"nodeType":"YulExpressionStatement","src":"8590:39:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:22"},"nodeType":"YulFunctionCall","src":"8649:14:22"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:22"},"nodeType":"YulFunctionCall","src":"8642:34:22"},"nodeType":"YulExpressionStatement","src":"8642:34:22"},{"nodeType":"YulAssignment","src":"8689:28:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:22","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:22"},"nodeType":"YulFunctionCall","src":"8697:20:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":5907,"isOffset":false,"isSlot":false,"src":"8689:4:22","valueSize":1},{"declaration":5902,"isOffset":false,"isSlot":false,"src":"8613:15:22","valueSize":1},{"declaration":5904,"isOffset":false,"isSlot":false,"src":"8665:10:22","valueSize":1}],"id":5909,"nodeType":"InlineAssembly","src":"8496:231:22"}]},"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"8003:328:22","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":5911,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:22","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:22","nodeType":"VariableDeclaration","scope":5911,"src":"8361:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5904,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:22","nodeType":"VariableDeclaration","scope":5911,"src":"8386:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:22"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"data","nameLocation":"8437:4:22","nodeType":"VariableDeclaration","scope":5911,"src":"8429:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:22"},"scope":5932,"src":"8336:397:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"9048:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5925,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9104:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9115:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5922,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9075:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5921,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5920,"id":5929,"nodeType":"Return","src":"9058:63:22"}]},"documentation":{"id":5912,"nodeType":"StructuredDocumentation","src":"8739:193:22","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:22","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"validator","nameLocation":"8986:9:22","nodeType":"VariableDeclaration","scope":5931,"src":"8978:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5913,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5916,"mutability":"mutable","name":"data","nameLocation":"9010:4:22","nodeType":"VariableDeclaration","scope":5931,"src":"8997:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5915,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:22"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"9039:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:22"},"scope":5932,"src":"8937:191:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5933,"src":"369:8761:22","usedErrors":[]}],"src":"112:9019:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[5932],"EIP712":[6136],"IERC5267":[2961],"Math":[7038],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"StorageSlot":[5337],"Strings":[5566]},"id":6137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5934,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":5935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6137,"sourceUnit":5933,"src":"138:21:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":5936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6137,"sourceUnit":5228,"src":"160:29:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":5937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6137,"sourceUnit":2962,"src":"190:39:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5939,"name":"IERC5267","nodeType":"IdentifierPath","referencedDeclaration":2961,"src":"1837:8:23"},"id":5940,"nodeType":"InheritanceSpecifier","src":"1837:8:23"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"231:1577:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":6136,"linearizedBaseContracts":[6136,2961],"name":"EIP712","nameLocation":"1827:6:23","nodeType":"ContractDefinition","nodes":[{"id":5942,"libraryName":{"id":5941,"name":"ShortStrings","nodeType":"IdentifierPath","referencedDeclaration":5227,"src":"1858:12:23"},"nodeType":"UsingForDirective","src":"1852:25:23"},{"constant":true,"id":5947,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:23","nodeType":"VariableDeclaration","scope":6136,"src":"1883:141:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":5944,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5949,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:23","nodeType":"VariableDeclaration","scope":6136,"src":"2223:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5951,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:23","nodeType":"VariableDeclaration","scope":6136,"src":"2277:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5953,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:23","nodeType":"VariableDeclaration","scope":6136,"src":"2323:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":5955,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:23","nodeType":"VariableDeclaration","scope":6136,"src":"2367:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5957,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:23","nodeType":"VariableDeclaration","scope":6136,"src":"2410:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5960,"mutability":"immutable","name":"_name","nameLocation":"2487:5:23","nodeType":"VariableDeclaration","scope":6136,"src":"2457:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5959,"nodeType":"UserDefinedTypeName","pathNode":{"id":5958,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"2457:11:23"},"referencedDeclaration":5016,"src":"2457:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":5963,"mutability":"immutable","name":"_version","nameLocation":"2528:8:23","nodeType":"VariableDeclaration","scope":6136,"src":"2498:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"},"typeName":{"id":5962,"nodeType":"UserDefinedTypeName","pathNode":{"id":5961,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":5016,"src":"2498:11:23"},"referencedDeclaration":5016,"src":"2498:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":5965,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:23","nodeType":"VariableDeclaration","scope":6136,"src":"2542:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5964,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":5967,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:23","nodeType":"VariableDeclaration","scope":6136,"src":"2576:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5966,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":6024,"nodeType":"Block","src":"3233:376:23","statements":[{"expression":{"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5975,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"3243:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5978,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3282:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":5976,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"3251:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":5168,"src":"3251:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$5016_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"src":"3243:53:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"id":5981,"nodeType":"ExpressionStatement","src":"3243:53:23"},{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5982,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"3306:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5985,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"3351:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":5983,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3317:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":5168,"src":"3317:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$5016_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3317:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"src":"3306:62:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"id":5988,"nodeType":"ExpressionStatement","src":"3306:62:23"},{"expression":{"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5989,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"3378:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5993,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"3408:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5991,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:23","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3402:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3392:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5997,"nodeType":"ExpressionStatement","src":"3378:36:23"},{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5998,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"3424:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6002,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3457:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:23","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3451:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5999,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3441:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6006,"nodeType":"ExpressionStatement","src":"3424:42:23"},{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6007,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"3477:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6008,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"3477:30:23"},{"expression":{"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6012,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"3517:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":6013,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"3542:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3542:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6016,"nodeType":"ExpressionStatement","src":"3517:48:23"},{"expression":{"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6017,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"3575:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6020,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}],"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6018,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:23","typeDescriptions":{}}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3589:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6023,"nodeType":"ExpressionStatement","src":"3575:27:23"}]},"documentation":{"id":5968,"nodeType":"StructuredDocumentation","src":"2614:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":6025,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"name","nameLocation":"3204:4:23","nodeType":"VariableDeclaration","scope":6025,"src":"3190:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5969,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5972,"mutability":"mutable","name":"version","nameLocation":"3224:7:23","nodeType":"VariableDeclaration","scope":6025,"src":"3210:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5971,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:23"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[],"src":"3233:0:23"},"scope":6136,"src":"3178:431:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6050,"nodeType":"Block","src":"3757:200:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}],"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6031,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:23","typeDescriptions":{}}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6035,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"3788:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6037,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6039,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"3820:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6048,"nodeType":"Block","src":"3896:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6045,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"3917:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3917:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6030,"id":6047,"nodeType":"Return","src":"3910:30:23"}]},"id":6049,"nodeType":"IfStatement","src":"3767:184:23","trueBody":{"id":6044,"nodeType":"Block","src":"3836:54:23","statements":[{"expression":{"id":6042,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"3857:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6030,"id":6043,"nodeType":"Return","src":"3850:29:23"}]}}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"3615:75:23","text":" @dev Returns the domain separator for the current chain."},"id":6051,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:23","nodeType":"FunctionDefinition","parameters":{"id":6027,"nodeType":"ParameterList","parameters":[],"src":"3722:2:23"},"returnParameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6051,"src":"3748:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:23"},"scope":6136,"src":"3695:262:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"4027:116:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":6059,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4065:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6060,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"4077:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6061,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"4090:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6062,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6066,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6064,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:23","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4121:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6057,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4054:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:81:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6056,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4044:92:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6055,"id":6070,"nodeType":"Return","src":"4037:99:23"}]},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:23","nodeType":"FunctionDefinition","parameters":{"id":6052,"nodeType":"ParameterList","parameters":[],"src":"3993:2:23"},"returnParameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6072,"src":"4018:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:23"},"scope":6136,"src":"3963:180:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6087,"nodeType":"Block","src":"4854:79:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6082,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"4893:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4893:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6084,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"4915:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6080,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"4871:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5932_$","typeString":"type(library ECDSA)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":5911,"src":"4871:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4871:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6079,"id":6086,"nodeType":"Return","src":"4864:62:23"}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"4149:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":6088,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:23","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:23","nodeType":"VariableDeclaration","scope":6088,"src":"4794:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:23"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6088,"src":"4845:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:23"},"scope":6136,"src":"4768:165:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2960],"body":{"id":6134,"nodeType":"Block","src":"5366:288:23","statements":[{"expression":{"components":[{"hexValue":"0f","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":6111,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"5454:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6109,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"5427:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":5195,"src":"5427:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$5016_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":6115,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"5512:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6113,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"5482:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$5016","typeString":"ShortString"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":5195,"src":"5482:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$5016_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$5016_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5482:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6117,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6121,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6136","typeString":"contract EIP712"}],"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6119,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:23","typeDescriptions":{}}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5570:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:23","typeDescriptions":{}}},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5597:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6128,"nodeType":"ArrayTypeName","src":"5625:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5621:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":6107,"id":6133,"nodeType":"Return","src":"5376:271:23"}]},"documentation":{"id":6089,"nodeType":"StructuredDocumentation","src":"4939:77:23","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:23","nodeType":"FunctionDefinition","overrides":{"id":6091,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:23"},"parameters":{"id":6090,"nodeType":"ParameterList","parameters":[],"src":"5042:2:23"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"fields","nameLocation":"5143:6:23","nodeType":"VariableDeclaration","scope":6135,"src":"5136:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6092,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"name","nameLocation":"5177:4:23","nodeType":"VariableDeclaration","scope":6135,"src":"5163:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6094,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"version","nameLocation":"5209:7:23","nodeType":"VariableDeclaration","scope":6135,"src":"5195:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6096,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6099,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:23","nodeType":"VariableDeclaration","scope":6135,"src":"5230:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6101,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:23","nodeType":"VariableDeclaration","scope":6135,"src":"5259:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6103,"mutability":"mutable","name":"salt","nameLocation":"5306:4:23","nodeType":"VariableDeclaration","scope":6135,"src":"5298:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6106,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:23","nodeType":"VariableDeclaration","scope":6135,"src":"5324:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6105,"nodeType":"ArrayTypeName","src":"5324:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:23"},"scope":6136,"src":"5021:633:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6137,"src":"1809:3847:23","usedErrors":[5024,5026]}],"src":"113:5544:23"},"id":23},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[6160],"IERC165":[6172]},"id":6161,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6138,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:24"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":6139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6161,"sourceUnit":6173,"src":"124:23:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6141,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":6172,"src":"754:7:24"},"id":6142,"nodeType":"InheritanceSpecifier","src":"754:7:24"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":6140,"nodeType":"StructuredDocumentation","src":"149:576:24","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":6160,"linearizedBaseContracts":[6160,6172],"name":"ERC165","nameLocation":"744:6:24","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6171],"body":{"id":6158,"nodeType":"Block","src":"920:64:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"937:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6153,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6172_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6172_$","typeString":"type(contract IERC165)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6172","typeString":"type(contract IERC165)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6150,"id":6157,"nodeType":"Return","src":"930:47:24"}]},"documentation":{"id":6143,"nodeType":"StructuredDocumentation","src":"768:56:24","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:24","nodeType":"FunctionDefinition","overrides":{"id":6147,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:24"},"parameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:24","nodeType":"VariableDeclaration","scope":6159,"src":"856:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6144,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:24"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"914:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6148,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:24"},"scope":6160,"src":"829:155:24","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6161,"src":"726:260:24","usedErrors":[]}],"src":"99:888:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6172]},"id":6173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6162,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"125:279:25","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6172,"linearizedBaseContracts":[6172],"name":"IERC165","nameLocation":"415:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"429:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6171,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:25","nodeType":"FunctionDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:25","nodeType":"VariableDeclaration","scope":6171,"src":"801:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6165,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:25"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"844:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6168,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:25"},"scope":6172,"src":"774:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6173,"src":"405:447:25","usedErrors":[]}],"src":"100:753:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7038]},"id":7039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6174,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6175,"nodeType":"StructuredDocumentation","src":"128:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7038,"linearizedBaseContracts":[7038],"name":"Math","nameLocation":"210:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6179,"members":[{"id":6176,"name":"Down","nameLocation":"245:4:26","nodeType":"EnumValue","src":"245:4:26"},{"id":6177,"name":"Up","nameLocation":"287:2:26","nodeType":"EnumValue","src":"287:2:26"},{"id":6178,"name":"Zero","nameLocation":"318:4:26","nodeType":"EnumValue","src":"318:4:26"}],"name":"Rounding","nameLocation":"226:8:26","nodeType":"EnumDefinition","src":"221:122:26"},{"body":{"id":6196,"nodeType":"Block","src":"480:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"497:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"501:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"509:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:26","trueExpression":{"id":6192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"505:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6188,"id":6195,"nodeType":"Return","src":"490:20:26"}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"349:59:26","text":" @dev Returns the largest of two numbers."},"id":6197,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:26","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"a","nameLocation":"434:1:26","nodeType":"VariableDeclaration","scope":6197,"src":"426:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6184,"mutability":"mutable","name":"b","nameLocation":"445:1:26","nodeType":"VariableDeclaration","scope":6197,"src":"437:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6183,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:26"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6197,"src":"471:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:26"},"scope":7038,"src":"413:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"655:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"672:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"676:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"684:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:26","trueExpression":{"id":6210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"680:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6206,"id":6213,"nodeType":"Return","src":"665:20:26"}]},"documentation":{"id":6198,"nodeType":"StructuredDocumentation","src":"523:60:26","text":" @dev Returns the smallest of two numbers."},"id":6215,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:26","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"a","nameLocation":"609:1:26","nodeType":"VariableDeclaration","scope":6215,"src":"601:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6202,"mutability":"mutable","name":"b","nameLocation":"620:1:26","nodeType":"VariableDeclaration","scope":6215,"src":"612:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:26"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6215,"src":"646:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6204,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:26"},"scope":7038,"src":"588:104:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6237,"nodeType":"Block","src":"876:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"931:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"935:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"941:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"945:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6224,"id":6236,"nodeType":"Return","src":"923:28:26"}]},"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"698:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6238,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:26","nodeType":"FunctionDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"a","nameLocation":"830:1:26","nodeType":"VariableDeclaration","scope":6238,"src":"822:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6220,"mutability":"mutable","name":"b","nameLocation":"841:1:26","nodeType":"VariableDeclaration","scope":6238,"src":"833:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:26"},"returnParameters":{"id":6224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6238,"src":"867:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:26"},"scope":7038,"src":"805:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"1228:123:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"1316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"1330:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"1339:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:26","trueExpression":{"hexValue":"30","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6247,"id":6261,"nodeType":"Return","src":"1309:35:26"}]},"documentation":{"id":6239,"nodeType":"StructuredDocumentation","src":"964:188:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:26","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"a","nameLocation":"1182:1:26","nodeType":"VariableDeclaration","scope":6263,"src":"1174:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"b","nameLocation":"1193:1:26","nodeType":"VariableDeclaration","scope":6263,"src":"1185:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:26"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6263,"src":"1219:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:26"},"scope":7038,"src":"1157:194:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"1765:4115:26","statements":[{"id":6384,"nodeType":"UncheckedBlock","src":"1775:4099:26","statements":[{"assignments":[6276],"declarations":[{"constant":false,"id":6276,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:26","nodeType":"VariableDeclaration","scope":6384,"src":"2096:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6277,"nodeType":"VariableDeclarationStatement","src":"2096:13:26"},{"assignments":[6279],"declarations":[{"constant":false,"id":6279,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:26","nodeType":"VariableDeclaration","scope":6384,"src":"2168:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6280,"nodeType":"VariableDeclarationStatement","src":"2168:13:26"},{"AST":{"nodeType":"YulBlock","src":"2248:157:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:26"},"nodeType":"YulFunctionCall","src":"2289:6:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:26"},"nodeType":"YulFunctionCall","src":"2276:20:26"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:26","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:26"},"nodeType":"YulFunctionCall","src":"2322:9:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:26"}]},{"nodeType":"YulAssignment","src":"2348:43:26","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:26"},"nodeType":"YulFunctionCall","src":"2361:14:26"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:26"},"nodeType":"YulFunctionCall","src":"2377:13:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:26"},"nodeType":"YulFunctionCall","src":"2357:34:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6276,"isOffset":false,"isSlot":false,"src":"2313:5:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"2369:5:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"2384:5:26","valueSize":1},{"declaration":6279,"isOffset":false,"isSlot":false,"src":"2348:5:26","valueSize":1},{"declaration":6266,"isOffset":false,"isSlot":false,"src":"2283:1:26","valueSize":1},{"declaration":6266,"isOffset":false,"isSlot":false,"src":"2326:1:26","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"2286:1:26","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"2329:1:26","valueSize":1}],"id":6281,"nodeType":"InlineAssembly","src":"2239:166:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"2486:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6290,"nodeType":"IfStatement","src":"2482:368:26","trueBody":{"id":6289,"nodeType":"Block","src":"2498:352:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"2816:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6286,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"2824:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6274,"id":6288,"nodeType":"Return","src":"2809:26:26"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"2960:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6293,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"2974:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":6291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6297,"nodeType":"ExpressionStatement","src":"2952:53:26"},{"assignments":[6299],"declarations":[{"constant":false,"id":6299,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:26","nodeType":"VariableDeclaration","scope":6384,"src":"3261:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6300,"nodeType":"VariableDeclarationStatement","src":"3261:17:26"},{"AST":{"nodeType":"YulBlock","src":"3301:291:26","statements":[{"nodeType":"YulAssignment","src":"3370:38:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:26"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:26"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:26"},"nodeType":"YulFunctionCall","src":"3383:25:26"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:26"}]},{"nodeType":"YulAssignment","src":"3490:41:26","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:26"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:26"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:26"},"nodeType":"YulFunctionCall","src":"3510:20:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:26"},"nodeType":"YulFunctionCall","src":"3499:32:26"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:26"}]},{"nodeType":"YulAssignment","src":"3548:30:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:26"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:26"},"nodeType":"YulFunctionCall","src":"3557:21:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6270,"isOffset":false,"isSlot":false,"src":"3396:11:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"3524:5:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"3548:5:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"3561:5:26","valueSize":1},{"declaration":6279,"isOffset":false,"isSlot":false,"src":"3490:5:26","valueSize":1},{"declaration":6279,"isOffset":false,"isSlot":false,"src":"3503:5:26","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"3370:9:26","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"3513:9:26","valueSize":1},{"declaration":6299,"isOffset":false,"isSlot":false,"src":"3568:9:26","valueSize":1},{"declaration":6266,"isOffset":false,"isSlot":false,"src":"3390:1:26","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"3393:1:26","valueSize":1}],"id":6301,"nodeType":"InlineAssembly","src":"3292:300:26"},{"assignments":[6303],"declarations":[{"constant":false,"id":6303,"mutability":"mutable","name":"twos","nameLocation":"3907:4:26","nodeType":"VariableDeclaration","scope":6384,"src":"3899:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"3914:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:26","subExpression":{"id":6305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"3930:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:26"},{"AST":{"nodeType":"YulBlock","src":"3969:362:26","statements":[{"nodeType":"YulAssignment","src":"4034:37:26","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:26"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:26"},"nodeType":"YulFunctionCall","src":"4049:22:26"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:26"}]},{"nodeType":"YulAssignment","src":"4138:25:26","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:26"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:26"},"nodeType":"YulFunctionCall","src":"4147:16:26"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:26"}]},{"nodeType":"YulAssignment","src":"4278:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:26","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:26"},"nodeType":"YulFunctionCall","src":"4294:12:26"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:26"},"nodeType":"YulFunctionCall","src":"4290:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:26"},"nodeType":"YulFunctionCall","src":"4286:31:26"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:26"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6270,"isOffset":false,"isSlot":false,"src":"4034:11:26","valueSize":1},{"declaration":6270,"isOffset":false,"isSlot":false,"src":"4053:11:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"4138:5:26","valueSize":1},{"declaration":6276,"isOffset":false,"isSlot":false,"src":"4151:5:26","valueSize":1},{"declaration":6303,"isOffset":false,"isSlot":false,"src":"4066:4:26","valueSize":1},{"declaration":6303,"isOffset":false,"isSlot":false,"src":"4158:4:26","valueSize":1},{"declaration":6303,"isOffset":false,"isSlot":false,"src":"4278:4:26","valueSize":1},{"declaration":6303,"isOffset":false,"isSlot":false,"src":"4301:4:26","valueSize":1},{"declaration":6303,"isOffset":false,"isSlot":false,"src":"4308:4:26","valueSize":1}],"id":6312,"nodeType":"InlineAssembly","src":"3960:371:26"},{"expression":{"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6313,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"4397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6314,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"4406:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6315,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"4414:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6318,"nodeType":"ExpressionStatement","src":"4397:21:26"},{"assignments":[6320],"declarations":[{"constant":false,"id":6320,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:26","nodeType":"VariableDeclaration","scope":6384,"src":"4736:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"4759:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:26"},{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"4992:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5007:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5021:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"4992:36:26"},{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6336,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5061:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5076:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5090:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6343,"nodeType":"ExpressionStatement","src":"5061:36:26"},{"expression":{"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6344,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5131:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5146:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5160:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6351,"nodeType":"ExpressionStatement","src":"5131:36:26"},{"expression":{"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6352,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5201:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5216:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5230:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6359,"nodeType":"ExpressionStatement","src":"5201:36:26"},{"expression":{"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6360,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5271:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6362,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5286:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5300:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6367,"nodeType":"ExpressionStatement","src":"5271:36:26"},{"expression":{"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5342:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"5357:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5371:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6375,"nodeType":"ExpressionStatement","src":"5342:36:26"},{"expression":{"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"5812:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6377,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"5821:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6378,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"5829:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6381,"nodeType":"ExpressionStatement","src":"5812:24:26"},{"expression":{"id":6382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"5857:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6274,"id":6383,"nodeType":"Return","src":"5850:13:26"}]}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"1357:305:26","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:26","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"x","nameLocation":"1691:1:26","nodeType":"VariableDeclaration","scope":6386,"src":"1683:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6268,"mutability":"mutable","name":"y","nameLocation":"1702:1:26","nodeType":"VariableDeclaration","scope":6386,"src":"1694:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6270,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:26","nodeType":"VariableDeclaration","scope":6386,"src":"1705:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:26"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"result","nameLocation":"1757:6:26","nodeType":"VariableDeclaration","scope":6386,"src":"1749:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:26"},"scope":7038,"src":"1667:4213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6429,"nodeType":"Block","src":"6122:189:26","statements":[{"assignments":[6402],"declarations":[{"constant":false,"id":6402,"mutability":"mutable","name":"result","nameLocation":"6140:6:26","nodeType":"VariableDeclaration","scope":6429,"src":"6132:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6408,"initialValue":{"arguments":[{"id":6404,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"6156:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6405,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6159:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"6162:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6403,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6386,6430],"referencedDeclaration":6386,"src":"6149:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6409,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"6188:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6410,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"6200:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6179_$","typeString":"type(enum Math.Rounding)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"6200:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"src":"6188:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6414,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"6222:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6415,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6225:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6416,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"6228:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6413,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6426,"nodeType":"IfStatement","src":"6184:98:26","trueBody":{"id":6425,"nodeType":"Block","src":"6246:36:26","statements":[{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"6260:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6424,"nodeType":"ExpressionStatement","src":"6260:11:26"}]}},{"expression":{"id":6427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"6298:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6400,"id":6428,"nodeType":"Return","src":"6291:13:26"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"5886:121:26","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6430,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:26","nodeType":"FunctionDefinition","parameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"x","nameLocation":"6036:1:26","nodeType":"VariableDeclaration","scope":6430,"src":"6028:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6391,"mutability":"mutable","name":"y","nameLocation":"6047:1:26","nodeType":"VariableDeclaration","scope":6430,"src":"6039:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6393,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:26","nodeType":"VariableDeclaration","scope":6430,"src":"6050:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6392,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6396,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:26","nodeType":"VariableDeclaration","scope":6430,"src":"6071:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"typeName":{"id":6395,"nodeType":"UserDefinedTypeName","pathNode":{"id":6394,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6179,"src":"6071:8:26"},"referencedDeclaration":6179,"src":"6071:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:26"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6430,"src":"6113:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:26"},"scope":7038,"src":"6012:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"6587:1585:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"6601:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"6597:45:26","trueBody":{"id":6443,"nodeType":"Block","src":"6609:33:26","statements":[{"expression":{"hexValue":"30","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6437,"id":6442,"nodeType":"Return","src":"6623:8:26"}]}},{"assignments":[6446],"declarations":[{"constant":false,"id":6446,"mutability":"mutable","name":"result","nameLocation":"7329:6:26","nodeType":"VariableDeclaration","scope":6541,"src":"7321:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6445,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6455,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7349:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6448,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6710,6746],"referencedDeclaration":6710,"src":"7344:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:26"},{"id":6540,"nodeType":"UncheckedBlock","src":"7758:408:26","statements":[{"expression":{"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7782:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7792:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7801:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7805:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6466,"nodeType":"ExpressionStatement","src":"7782:35:26"},{"expression":{"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7831:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7841:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7850:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7854:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6477,"nodeType":"ExpressionStatement","src":"7831:35:26"},{"expression":{"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7880:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7890:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7899:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7903:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6488,"nodeType":"ExpressionStatement","src":"7880:35:26"},{"expression":{"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7929:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7939:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7948:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7952:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6499,"nodeType":"ExpressionStatement","src":"7929:35:26"},{"expression":{"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7978:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"7988:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"7997:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8001:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6510,"nodeType":"ExpressionStatement","src":"7978:35:26"},{"expression":{"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8027:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8037:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"8046:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8050:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6521,"nodeType":"ExpressionStatement","src":"8027:35:26"},{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8076:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8086:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"8095:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8099:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"8076:35:26"},{"expression":{"arguments":[{"id":6534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8136:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"8144:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8148:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6533,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"8132:3:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6437,"id":6539,"nodeType":"Return","src":"8125:30:26"}]}]},"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"6317:208:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:26","nodeType":"FunctionDefinition","parameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"a","nameLocation":"6552:1:26","nodeType":"VariableDeclaration","scope":6542,"src":"6544:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:26"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6542,"src":"6578:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:26"},"scope":7038,"src":"6530:1642:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6577,"nodeType":"Block","src":"8348:161:26","statements":[{"id":6576,"nodeType":"UncheckedBlock","src":"8358:145:26","statements":[{"assignments":[6554],"declarations":[{"constant":false,"id":6554,"mutability":"mutable","name":"result","nameLocation":"8390:6:26","nodeType":"VariableDeclaration","scope":6576,"src":"8382:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6558,"initialValue":{"arguments":[{"id":6556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8404:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6555,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6542,6578],"referencedDeclaration":6542,"src":"8399:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"8427:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"8437:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6561,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"8449:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6179_$","typeString":"type(enum Math.Rounding)"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"8449:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"src":"8437:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"8464:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"8473:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8482:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:26","trueExpression":{"hexValue":"31","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6552,"id":6575,"nodeType":"Return","src":"8420:72:26"}]}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"8178:89:26","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":6578,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:26","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"a","nameLocation":"8294:1:26","nodeType":"VariableDeclaration","scope":6578,"src":"8286:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6544,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6548,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:26","nodeType":"VariableDeclaration","scope":6578,"src":"8297:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"typeName":{"id":6547,"nodeType":"UserDefinedTypeName","pathNode":{"id":6546,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6179,"src":"8297:8:26"},"referencedDeclaration":6179,"src":"8297:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:26"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6578,"src":"8339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:26"},"scope":7038,"src":"8272:237:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6709,"nodeType":"Block","src":"8694:922:26","statements":[{"assignments":[6587],"declarations":[{"constant":false,"id":6587,"mutability":"mutable","name":"result","nameLocation":"8712:6:26","nodeType":"VariableDeclaration","scope":6709,"src":"8704:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6589,"initialValue":{"hexValue":"30","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:26"},{"id":6706,"nodeType":"UncheckedBlock","src":"8732:855:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"8760:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6604,"nodeType":"IfStatement","src":"8756:99:26","trueBody":{"id":6603,"nodeType":"Block","src":"8778:77:26","statements":[{"expression":{"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"8796:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6598,"nodeType":"ExpressionStatement","src":"8796:13:26"},{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"8827:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6602,"nodeType":"ExpressionStatement","src":"8827:13:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"8872:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6619,"nodeType":"IfStatement","src":"8868:96:26","trueBody":{"id":6618,"nodeType":"Block","src":"8889:75:26","statements":[{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"8907:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6613,"nodeType":"ExpressionStatement","src":"8907:12:26"},{"expression":{"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"8937:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6617,"nodeType":"ExpressionStatement","src":"8937:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"8981:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6634,"nodeType":"IfStatement","src":"8977:96:26","trueBody":{"id":6633,"nodeType":"Block","src":"8998:75:26","statements":[{"expression":{"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9016:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6628,"nodeType":"ExpressionStatement","src":"9016:12:26"},{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9046:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6632,"nodeType":"ExpressionStatement","src":"9046:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9090:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6649,"nodeType":"IfStatement","src":"9086:96:26","trueBody":{"id":6648,"nodeType":"Block","src":"9107:75:26","statements":[{"expression":{"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9125:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6643,"nodeType":"ExpressionStatement","src":"9125:12:26"},{"expression":{"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9155:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6647,"nodeType":"ExpressionStatement","src":"9155:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9199:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6664,"nodeType":"IfStatement","src":"9195:93:26","trueBody":{"id":6663,"nodeType":"Block","src":"9215:73:26","statements":[{"expression":{"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9233:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6658,"nodeType":"ExpressionStatement","src":"9233:11:26"},{"expression":{"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9262:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6662,"nodeType":"ExpressionStatement","src":"9262:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9305:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6679,"nodeType":"IfStatement","src":"9301:93:26","trueBody":{"id":6678,"nodeType":"Block","src":"9321:73:26","statements":[{"expression":{"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9339:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6673,"nodeType":"ExpressionStatement","src":"9339:11:26"},{"expression":{"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9368:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6677,"nodeType":"ExpressionStatement","src":"9368:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9411:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6694,"nodeType":"IfStatement","src":"9407:93:26","trueBody":{"id":6693,"nodeType":"Block","src":"9427:73:26","statements":[{"expression":{"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9445:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6688,"nodeType":"ExpressionStatement","src":"9445:11:26"},{"expression":{"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9474:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6692,"nodeType":"ExpressionStatement","src":"9474:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9517:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6705,"nodeType":"IfStatement","src":"9513:64:26","trueBody":{"id":6704,"nodeType":"Block","src":"9533:44:26","statements":[{"expression":{"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9551:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6703,"nodeType":"ExpressionStatement","src":"9551:11:26"}]}}]},{"expression":{"id":6707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9603:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6585,"id":6708,"nodeType":"Return","src":"9596:13:26"}]},"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"8515:113:26","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6710,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:26","nodeType":"FunctionDefinition","parameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"value","nameLocation":"8655:5:26","nodeType":"VariableDeclaration","scope":6710,"src":"8647:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:26"},"returnParameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6710,"src":"8685:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:26"},"scope":7038,"src":"8633:983:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"9849:165:26","statements":[{"id":6744,"nodeType":"UncheckedBlock","src":"9859:149:26","statements":[{"assignments":[6722],"declarations":[{"constant":false,"id":6722,"mutability":"mutable","name":"result","nameLocation":"9891:6:26","nodeType":"VariableDeclaration","scope":6744,"src":"9883:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6726,"initialValue":{"arguments":[{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"9905:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6723,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6710,6746],"referencedDeclaration":6710,"src":"9900:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"9932:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6728,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9942:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6729,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"9954:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6179_$","typeString":"type(enum Math.Rounding)"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"9954:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"src":"9942:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"9974:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"9983:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:26","trueExpression":{"hexValue":"31","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6720,"id":6743,"nodeType":"Return","src":"9925:72:26"}]}]},"documentation":{"id":6711,"nodeType":"StructuredDocumentation","src":"9622:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:26","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"value","nameLocation":"9791:5:26","nodeType":"VariableDeclaration","scope":6746,"src":"9783:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6716,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:26","nodeType":"VariableDeclaration","scope":6746,"src":"9798:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"typeName":{"id":6715,"nodeType":"UserDefinedTypeName","pathNode":{"id":6714,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6179,"src":"9798:8:26"},"referencedDeclaration":6179,"src":"9798:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:26"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6746,"src":"9840:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:26"},"scope":7038,"src":"9769:245:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"10201:854:26","statements":[{"assignments":[6755],"declarations":[{"constant":false,"id":6755,"mutability":"mutable","name":"result","nameLocation":"10219:6:26","nodeType":"VariableDeclaration","scope":6874,"src":"10211:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6754,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6757,"initialValue":{"hexValue":"30","id":6756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:26"},{"id":6871,"nodeType":"UncheckedBlock","src":"10239:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10267:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"10263:103:26","trueBody":{"id":6773,"nodeType":"Block","src":"10286:80:26","statements":[{"expression":{"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10304:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6768,"nodeType":"ExpressionStatement","src":"10304:17:26"},{"expression":{"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10339:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6772,"nodeType":"ExpressionStatement","src":"10339:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10383:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6791,"nodeType":"IfStatement","src":"10379:103:26","trueBody":{"id":6790,"nodeType":"Block","src":"10402:80:26","statements":[{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10420:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6785,"nodeType":"ExpressionStatement","src":"10420:17:26"},{"expression":{"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10455:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6789,"nodeType":"ExpressionStatement","src":"10455:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10499:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6808,"nodeType":"IfStatement","src":"10495:103:26","trueBody":{"id":6807,"nodeType":"Block","src":"10518:80:26","statements":[{"expression":{"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10536:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6802,"nodeType":"ExpressionStatement","src":"10536:17:26"},{"expression":{"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10571:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6806,"nodeType":"ExpressionStatement","src":"10571:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10615:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6825,"nodeType":"IfStatement","src":"10611:100:26","trueBody":{"id":6824,"nodeType":"Block","src":"10633:78:26","statements":[{"expression":{"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10651:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6819,"nodeType":"ExpressionStatement","src":"10651:16:26"},{"expression":{"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10685:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6823,"nodeType":"ExpressionStatement","src":"10685:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10728:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"nodeType":"IfStatement","src":"10724:100:26","trueBody":{"id":6841,"nodeType":"Block","src":"10746:78:26","statements":[{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10764:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6836,"nodeType":"ExpressionStatement","src":"10764:16:26"},{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10798:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6840,"nodeType":"ExpressionStatement","src":"10798:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10841:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6859,"nodeType":"IfStatement","src":"10837:100:26","trueBody":{"id":6858,"nodeType":"Block","src":"10859:78:26","statements":[{"expression":{"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10877:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6853,"nodeType":"ExpressionStatement","src":"10877:16:26"},{"expression":{"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10911:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6857,"nodeType":"ExpressionStatement","src":"10911:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"10954:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"10950:66:26","trueBody":{"id":6869,"nodeType":"Block","src":"10972:44:26","statements":[{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10990:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6868,"nodeType":"ExpressionStatement","src":"10990:11:26"}]}}]},{"expression":{"id":6872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"11042:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6753,"id":6873,"nodeType":"Return","src":"11035:13:26"}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"10020:114:26","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:26","nodeType":"FunctionDefinition","parameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"value","nameLocation":"10162:5:26","nodeType":"VariableDeclaration","scope":6875,"src":"10154:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:26"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6875,"src":"10192:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6751,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:26"},"scope":7038,"src":"10139:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6910,"nodeType":"Block","src":"11290:167:26","statements":[{"id":6909,"nodeType":"UncheckedBlock","src":"11300:151:26","statements":[{"assignments":[6887],"declarations":[{"constant":false,"id":6887,"mutability":"mutable","name":"result","nameLocation":"11332:6:26","nodeType":"VariableDeclaration","scope":6909,"src":"11324:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6891,"initialValue":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"11347:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6888,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6875,6911],"referencedDeclaration":6875,"src":"11341:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"11374:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"11384:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6894,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"11396:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6179_$","typeString":"type(enum Math.Rounding)"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"11396:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"src":"11384:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"11417:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"11426:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:26","trueExpression":{"hexValue":"31","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6885,"id":6908,"nodeType":"Return","src":"11367:73:26"}]}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"11061:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6911,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:26","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"11232:5:26","nodeType":"VariableDeclaration","scope":6911,"src":"11224:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:26","nodeType":"VariableDeclaration","scope":6911,"src":"11239:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"typeName":{"id":6880,"nodeType":"UserDefinedTypeName","pathNode":{"id":6879,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6179,"src":"11239:8:26"},"referencedDeclaration":6179,"src":"11239:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:26"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6911,"src":"11281:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:26"},"scope":7038,"src":"11209:248:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6997,"nodeType":"Block","src":"11771:600:26","statements":[{"assignments":[6920],"declarations":[{"constant":false,"id":6920,"mutability":"mutable","name":"result","nameLocation":"11789:6:26","nodeType":"VariableDeclaration","scope":6997,"src":"11781:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6922,"initialValue":{"hexValue":"30","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:26"},{"id":6994,"nodeType":"UncheckedBlock","src":"11809:533:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"11837:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6937,"nodeType":"IfStatement","src":"11833:98:26","trueBody":{"id":6936,"nodeType":"Block","src":"11855:76:26","statements":[{"expression":{"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"11873:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6931,"nodeType":"ExpressionStatement","src":"11873:13:26"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"11904:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6935,"nodeType":"ExpressionStatement","src":"11904:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"11948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"11944:95:26","trueBody":{"id":6951,"nodeType":"Block","src":"11965:74:26","statements":[{"expression":{"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"11983:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6946,"nodeType":"ExpressionStatement","src":"11983:12:26"},{"expression":{"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"12013:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6950,"nodeType":"ExpressionStatement","src":"12013:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"12056:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6967,"nodeType":"IfStatement","src":"12052:95:26","trueBody":{"id":6966,"nodeType":"Block","src":"12073:74:26","statements":[{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"12091:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6961,"nodeType":"ExpressionStatement","src":"12091:12:26"},{"expression":{"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"12121:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6965,"nodeType":"ExpressionStatement","src":"12121:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"12164:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6982,"nodeType":"IfStatement","src":"12160:95:26","trueBody":{"id":6981,"nodeType":"Block","src":"12181:74:26","statements":[{"expression":{"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"12199:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6976,"nodeType":"ExpressionStatement","src":"12199:12:26"},{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"12229:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6980,"nodeType":"ExpressionStatement","src":"12229:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"12272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6993,"nodeType":"IfStatement","src":"12268:64:26","trueBody":{"id":6992,"nodeType":"Block","src":"12288:44:26","statements":[{"expression":{"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"12306:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6991,"nodeType":"ExpressionStatement","src":"12306:11:26"}]}}]},{"expression":{"id":6995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"12358:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6918,"id":6996,"nodeType":"Return","src":"12351:13:26"}]},"documentation":{"id":6912,"nodeType":"StructuredDocumentation","src":"11463:240:26","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6998,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:26","nodeType":"FunctionDefinition","parameters":{"id":6915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"mutability":"mutable","name":"value","nameLocation":"11732:5:26","nodeType":"VariableDeclaration","scope":6998,"src":"11724:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:26"},"returnParameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6998,"src":"11762:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:26"},"scope":7038,"src":"11708:663:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7036,"nodeType":"Block","src":"12608:174:26","statements":[{"id":7035,"nodeType":"UncheckedBlock","src":"12618:158:26","statements":[{"assignments":[7010],"declarations":[{"constant":false,"id":7010,"mutability":"mutable","name":"result","nameLocation":"12650:6:26","nodeType":"VariableDeclaration","scope":7035,"src":"12642:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7014,"initialValue":{"arguments":[{"id":7012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"12666:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7011,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6998,7037],"referencedDeclaration":6998,"src":"12659:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"12693:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7016,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"12703:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7017,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"12715:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6179_$","typeString":"type(enum Math.Rounding)"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"12715:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"src":"12703:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"12736:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"12751:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:26","trueExpression":{"hexValue":"31","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7008,"id":7034,"nodeType":"Return","src":"12686:79:26"}]}]},"documentation":{"id":6999,"nodeType":"StructuredDocumentation","src":"12377:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7037,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:26","nodeType":"FunctionDefinition","parameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"value","nameLocation":"12550:5:26","nodeType":"VariableDeclaration","scope":7037,"src":"12542:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:26","nodeType":"VariableDeclaration","scope":7037,"src":"12557:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"},"typeName":{"id":7003,"nodeType":"UserDefinedTypeName","pathNode":{"id":7002,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6179,"src":"12557:8:26"},"referencedDeclaration":6179,"src":"12557:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6179","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:26"},"returnParameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7037,"src":"12599:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:26"},"scope":7038,"src":"12526:256:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7039,"src":"202:12582:26","usedErrors":[]}],"src":"103:12682:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8579]},"id":8580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7040,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7041,"nodeType":"StructuredDocumentation","src":"217:709:27","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":8579,"linearizedBaseContracts":[8579],"name":"SafeCast","nameLocation":"935:8:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":7065,"nodeType":"Block","src":"1339:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"1357:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7052,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":7049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7059,"nodeType":"ExpressionStatement","src":"1349:78:27"},{"expression":{"arguments":[{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"1452:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7060,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:27","typeDescriptions":{}}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7048,"id":7064,"nodeType":"Return","src":"1437:21:27"}]},"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"950:318:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":7066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:27","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"1300:5:27","nodeType":"VariableDeclaration","scope":7066,"src":"1292:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:27"},"returnParameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7066,"src":"1330:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7046,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:27"},"scope":8579,"src":"1273:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7090,"nodeType":"Block","src":"1860:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"1878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7077,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":7074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7084,"nodeType":"ExpressionStatement","src":"1870:78:27"},{"expression":{"arguments":[{"id":7087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"1973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7085,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:27","typeDescriptions":{}}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7073,"id":7089,"nodeType":"Return","src":"1958:21:27"}]},"documentation":{"id":7067,"nodeType":"StructuredDocumentation","src":"1471:318:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":7091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:27","nodeType":"FunctionDefinition","parameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"value","nameLocation":"1821:5:27","nodeType":"VariableDeclaration","scope":7091,"src":"1813:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:27"},"returnParameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7091,"src":"1851:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7071,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:27"},"scope":8579,"src":"1794:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7115,"nodeType":"Block","src":"2381:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"2399:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7102,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":7099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7109,"nodeType":"ExpressionStatement","src":"2391:78:27"},{"expression":{"arguments":[{"id":7112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"2494:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7110,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:27","typeDescriptions":{}}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7098,"id":7114,"nodeType":"Return","src":"2479:21:27"}]},"documentation":{"id":7092,"nodeType":"StructuredDocumentation","src":"1992:318:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":7116,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:27","nodeType":"FunctionDefinition","parameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"value","nameLocation":"2342:5:27","nodeType":"VariableDeclaration","scope":7116,"src":"2334:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:27"},"returnParameters":{"id":7098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7116,"src":"2372:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7096,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:27"},"scope":8579,"src":"2315:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7140,"nodeType":"Block","src":"2902:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"2920:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7127,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":7132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":7124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7134,"nodeType":"ExpressionStatement","src":"2912:78:27"},{"expression":{"arguments":[{"id":7137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"3015:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7135,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:27","typeDescriptions":{}}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7123,"id":7139,"nodeType":"Return","src":"3000:21:27"}]},"documentation":{"id":7117,"nodeType":"StructuredDocumentation","src":"2513:318:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":7141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:27","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"value","nameLocation":"2863:5:27","nodeType":"VariableDeclaration","scope":7141,"src":"2855:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:27"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7141,"src":"2893:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7121,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:27"},"scope":8579,"src":"2836:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"3423:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"3441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7152,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":7149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7159,"nodeType":"ExpressionStatement","src":"3433:78:27"},{"expression":{"arguments":[{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"3536:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7160,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:27","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7148,"id":7164,"nodeType":"Return","src":"3521:21:27"}]},"documentation":{"id":7142,"nodeType":"StructuredDocumentation","src":"3034:318:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:27","nodeType":"FunctionDefinition","parameters":{"id":7145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"value","nameLocation":"3384:5:27","nodeType":"VariableDeclaration","scope":7166,"src":"3376:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:27"},"returnParameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7166,"src":"3414:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7146,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:27"},"scope":8579,"src":"3357:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7190,"nodeType":"Block","src":"3944:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"3962:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7177,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":7174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"3954:78:27"},{"expression":{"arguments":[{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"4057:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7185,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:27","typeDescriptions":{}}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7173,"id":7189,"nodeType":"Return","src":"4042:21:27"}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"3555:318:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":7191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:27","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"value","nameLocation":"3905:5:27","nodeType":"VariableDeclaration","scope":7191,"src":"3897:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:27"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7191,"src":"3935:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7171,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:27"},"scope":8579,"src":"3878:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7215,"nodeType":"Block","src":"4465:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"4483:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7202,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7201,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":7207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":7199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7209,"nodeType":"ExpressionStatement","src":"4475:78:27"},{"expression":{"arguments":[{"id":7212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"4578:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7210,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:27","typeDescriptions":{}}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7198,"id":7214,"nodeType":"Return","src":"4563:21:27"}]},"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"4076:318:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":7216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:27","nodeType":"FunctionDefinition","parameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"value","nameLocation":"4426:5:27","nodeType":"VariableDeclaration","scope":7216,"src":"4418:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:27"},"returnParameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7216,"src":"4456:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7196,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:27"},"scope":8579,"src":"4399:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7240,"nodeType":"Block","src":"4986:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"5004:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7227,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":7232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":7224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7234,"nodeType":"ExpressionStatement","src":"4996:78:27"},{"expression":{"arguments":[{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"5099:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7235,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:27","typeDescriptions":{}}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7223,"id":7239,"nodeType":"Return","src":"5084:21:27"}]},"documentation":{"id":7217,"nodeType":"StructuredDocumentation","src":"4597:318:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":7241,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:27","nodeType":"FunctionDefinition","parameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"value","nameLocation":"4947:5:27","nodeType":"VariableDeclaration","scope":7241,"src":"4939:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:27"},"returnParameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7241,"src":"4977:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7221,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:27"},"scope":8579,"src":"4920:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7265,"nodeType":"Block","src":"5507:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"5525:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7252,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":7249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7259,"nodeType":"ExpressionStatement","src":"5517:78:27"},{"expression":{"arguments":[{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"5620:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7260,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:27","typeDescriptions":{}}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7248,"id":7264,"nodeType":"Return","src":"5605:21:27"}]},"documentation":{"id":7242,"nodeType":"StructuredDocumentation","src":"5118:318:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":7266,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:27","nodeType":"FunctionDefinition","parameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"value","nameLocation":"5468:5:27","nodeType":"VariableDeclaration","scope":7266,"src":"5460:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7243,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:27"},"returnParameters":{"id":7248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7266,"src":"5498:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7246,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:27"},"scope":8579,"src":"5441:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7290,"nodeType":"Block","src":"6028:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"6046:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7277,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":7274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"ExpressionStatement","src":"6038:78:27"},{"expression":{"arguments":[{"id":7287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"6141:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7285,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:27","typeDescriptions":{}}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7273,"id":7289,"nodeType":"Return","src":"6126:21:27"}]},"documentation":{"id":7267,"nodeType":"StructuredDocumentation","src":"5639:318:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:27","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7269,"mutability":"mutable","name":"value","nameLocation":"5989:5:27","nodeType":"VariableDeclaration","scope":7291,"src":"5981:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:27"},"returnParameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7291,"src":"6019:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7271,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:27"},"scope":8579,"src":"5962:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7315,"nodeType":"Block","src":"6549:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"6567:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7302,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":7299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7309,"nodeType":"ExpressionStatement","src":"6559:78:27"},{"expression":{"arguments":[{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"6662:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7310,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:27","typeDescriptions":{}}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7298,"id":7314,"nodeType":"Return","src":"6647:21:27"}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"6160:318:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":7316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:27","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"value","nameLocation":"6510:5:27","nodeType":"VariableDeclaration","scope":7316,"src":"6502:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:27"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7316,"src":"6540:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7296,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:27"},"scope":8579,"src":"6483:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7340,"nodeType":"Block","src":"7070:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7088:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7327,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":7332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":7324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7334,"nodeType":"ExpressionStatement","src":"7080:78:27"},{"expression":{"arguments":[{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7183:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7335,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:27","typeDescriptions":{}}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7323,"id":7339,"nodeType":"Return","src":"7168:21:27"}]},"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"6681:318:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":7341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:27","nodeType":"FunctionDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"value","nameLocation":"7031:5:27","nodeType":"VariableDeclaration","scope":7341,"src":"7023:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:27"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7341,"src":"7061:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7321,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:27"},"scope":8579,"src":"7004:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"7591:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"7609:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7352,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":7349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7359,"nodeType":"ExpressionStatement","src":"7601:78:27"},{"expression":{"arguments":[{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"7704:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7360,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:27","typeDescriptions":{}}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7348,"id":7364,"nodeType":"Return","src":"7689:21:27"}]},"documentation":{"id":7342,"nodeType":"StructuredDocumentation","src":"7202:318:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:27","nodeType":"FunctionDefinition","parameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"value","nameLocation":"7552:5:27","nodeType":"VariableDeclaration","scope":7366,"src":"7544:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7343,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:27"},"returnParameters":{"id":7348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7366,"src":"7582:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7346,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:27"},"scope":8579,"src":"7525:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7390,"nodeType":"Block","src":"8112:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"8130:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7377,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":7374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7384,"nodeType":"ExpressionStatement","src":"8122:78:27"},{"expression":{"arguments":[{"id":7387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"8225:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7385,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:27","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7373,"id":7389,"nodeType":"Return","src":"8210:21:27"}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"7723:318:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":7391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:27","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"value","nameLocation":"8073:5:27","nodeType":"VariableDeclaration","scope":7391,"src":"8065:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7368,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:27"},"returnParameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7391,"src":"8103:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7371,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:27"},"scope":8579,"src":"8046:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7415,"nodeType":"Block","src":"8633:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"8651:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7402,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":7407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":7399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"ExpressionStatement","src":"8643:78:27"},{"expression":{"arguments":[{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"8746:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7410,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:27","typeDescriptions":{}}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7398,"id":7414,"nodeType":"Return","src":"8731:21:27"}]},"documentation":{"id":7392,"nodeType":"StructuredDocumentation","src":"8244:318:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":7416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:27","nodeType":"FunctionDefinition","parameters":{"id":7395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"value","nameLocation":"8594:5:27","nodeType":"VariableDeclaration","scope":7416,"src":"8586:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:27"},"returnParameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7416,"src":"8624:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7396,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:27"},"scope":8579,"src":"8567:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7440,"nodeType":"Block","src":"9154:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"9172:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7427,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":7432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":7424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7434,"nodeType":"ExpressionStatement","src":"9164:78:27"},{"expression":{"arguments":[{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"9267:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7435,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:27","typeDescriptions":{}}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7423,"id":7439,"nodeType":"Return","src":"9252:21:27"}]},"documentation":{"id":7417,"nodeType":"StructuredDocumentation","src":"8765:318:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":7441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:27","nodeType":"FunctionDefinition","parameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"value","nameLocation":"9115:5:27","nodeType":"VariableDeclaration","scope":7441,"src":"9107:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:27"},"returnParameters":{"id":7423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7441,"src":"9145:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7421,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:27"},"scope":8579,"src":"9088:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7465,"nodeType":"Block","src":"9675:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"9693:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7452,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":7449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7459,"nodeType":"ExpressionStatement","src":"9685:78:27"},{"expression":{"arguments":[{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"9788:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7460,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:27","typeDescriptions":{}}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7448,"id":7464,"nodeType":"Return","src":"9773:21:27"}]},"documentation":{"id":7442,"nodeType":"StructuredDocumentation","src":"9286:318:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":7466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:27","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"value","nameLocation":"9636:5:27","nodeType":"VariableDeclaration","scope":7466,"src":"9628:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7443,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:27"},"returnParameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7466,"src":"9666:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7446,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:27"},"scope":8579,"src":"9609:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7490,"nodeType":"Block","src":"10196:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"10214:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7477,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":7474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7484,"nodeType":"ExpressionStatement","src":"10206:78:27"},{"expression":{"arguments":[{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"10309:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7485,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{}}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7473,"id":7489,"nodeType":"Return","src":"10294:21:27"}]},"documentation":{"id":7467,"nodeType":"StructuredDocumentation","src":"9807:318:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":7491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:27","nodeType":"FunctionDefinition","parameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"value","nameLocation":"10157:5:27","nodeType":"VariableDeclaration","scope":7491,"src":"10149:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:27"},"returnParameters":{"id":7473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7491,"src":"10187:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7471,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:27"},"scope":8579,"src":"10130:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7515,"nodeType":"Block","src":"10717:126:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"10735:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7502,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":7499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7509,"nodeType":"ExpressionStatement","src":"10727:78:27"},{"expression":{"arguments":[{"id":7512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"10830:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7510,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:27","typeDescriptions":{}}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7498,"id":7514,"nodeType":"Return","src":"10815:21:27"}]},"documentation":{"id":7492,"nodeType":"StructuredDocumentation","src":"10328:318:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":7516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:27","nodeType":"FunctionDefinition","parameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"value","nameLocation":"10678:5:27","nodeType":"VariableDeclaration","scope":7516,"src":"10670:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:27"},"returnParameters":{"id":7498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7516,"src":"10708:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7496,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:27"},"scope":8579,"src":"10651:192:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7540,"nodeType":"Block","src":"11232:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"11250:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7527,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":7524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7534,"nodeType":"ExpressionStatement","src":"11242:76:27"},{"expression":{"arguments":[{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"11342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7535,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:27","typeDescriptions":{}}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7523,"id":7539,"nodeType":"Return","src":"11328:20:27"}]},"documentation":{"id":7517,"nodeType":"StructuredDocumentation","src":"10849:314:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":7541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:27","nodeType":"FunctionDefinition","parameters":{"id":7520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7519,"mutability":"mutable","name":"value","nameLocation":"11194:5:27","nodeType":"VariableDeclaration","scope":7541,"src":"11186:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:27"},"returnParameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7541,"src":"11224:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7521,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:27"},"scope":8579,"src":"11168:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7565,"nodeType":"Block","src":"11744:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11762:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7552,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":7549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7559,"nodeType":"ExpressionStatement","src":"11754:76:27"},{"expression":{"arguments":[{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"11854:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7560,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:27","typeDescriptions":{}}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7548,"id":7564,"nodeType":"Return","src":"11840:20:27"}]},"documentation":{"id":7542,"nodeType":"StructuredDocumentation","src":"11361:314:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":7566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:27","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"value","nameLocation":"11706:5:27","nodeType":"VariableDeclaration","scope":7566,"src":"11698:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7543,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:27"},"returnParameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7566,"src":"11736:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7546,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:27"},"scope":8579,"src":"11680:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"12256:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"12274:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7577,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":7582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":7574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7584,"nodeType":"ExpressionStatement","src":"12266:76:27"},{"expression":{"arguments":[{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"12366:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7585,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:27","typeDescriptions":{}}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7573,"id":7589,"nodeType":"Return","src":"12352:20:27"}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"11873:314:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:27","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"value","nameLocation":"12218:5:27","nodeType":"VariableDeclaration","scope":7591,"src":"12210:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:27"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"12248:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7571,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:27"},"scope":8579,"src":"12192:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7615,"nodeType":"Block","src":"12768:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"12786:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7602,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":7599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7609,"nodeType":"ExpressionStatement","src":"12778:76:27"},{"expression":{"arguments":[{"id":7612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"12878:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7610,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:27","typeDescriptions":{}}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7598,"id":7614,"nodeType":"Return","src":"12864:20:27"}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"12385:314:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":7616,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:27","nodeType":"FunctionDefinition","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"value","nameLocation":"12730:5:27","nodeType":"VariableDeclaration","scope":7616,"src":"12722:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7593,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:27"},"returnParameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7616,"src":"12760:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7596,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:27"},"scope":8579,"src":"12704:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7640,"nodeType":"Block","src":"13280:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"13298:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7627,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":7624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7634,"nodeType":"ExpressionStatement","src":"13290:76:27"},{"expression":{"arguments":[{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"13390:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7635,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:27","typeDescriptions":{}}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7623,"id":7639,"nodeType":"Return","src":"13376:20:27"}]},"documentation":{"id":7617,"nodeType":"StructuredDocumentation","src":"12897:314:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":7641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:27","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"value","nameLocation":"13242:5:27","nodeType":"VariableDeclaration","scope":7641,"src":"13234:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7618,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:27"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7641,"src":"13272:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7621,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:27"},"scope":8579,"src":"13216:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7665,"nodeType":"Block","src":"13792:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"13810:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7652,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":7649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7659,"nodeType":"ExpressionStatement","src":"13802:76:27"},{"expression":{"arguments":[{"id":7662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"13902:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7660,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:27","typeDescriptions":{}}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7648,"id":7664,"nodeType":"Return","src":"13888:20:27"}]},"documentation":{"id":7642,"nodeType":"StructuredDocumentation","src":"13409:314:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":7666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:27","nodeType":"FunctionDefinition","parameters":{"id":7645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"value","nameLocation":"13754:5:27","nodeType":"VariableDeclaration","scope":7666,"src":"13746:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7643,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:27"},"returnParameters":{"id":7648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7666,"src":"13784:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7646,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:27"},"scope":8579,"src":"13728:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7690,"nodeType":"Block","src":"14304:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"14322:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7677,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":7682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":7674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7684,"nodeType":"ExpressionStatement","src":"14314:76:27"},{"expression":{"arguments":[{"id":7687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"14414:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7685,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:27","typeDescriptions":{}}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7673,"id":7689,"nodeType":"Return","src":"14400:20:27"}]},"documentation":{"id":7667,"nodeType":"StructuredDocumentation","src":"13921:314:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":7691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:27","nodeType":"FunctionDefinition","parameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"value","nameLocation":"14266:5:27","nodeType":"VariableDeclaration","scope":7691,"src":"14258:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7668,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:27"},"returnParameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7691,"src":"14296:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7671,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:27"},"scope":8579,"src":"14240:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7715,"nodeType":"Block","src":"14816:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"14834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7702,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7701,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":7699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"ExpressionStatement","src":"14826:76:27"},{"expression":{"arguments":[{"id":7712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"14926:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7710,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:27","typeDescriptions":{}}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7698,"id":7714,"nodeType":"Return","src":"14912:20:27"}]},"documentation":{"id":7692,"nodeType":"StructuredDocumentation","src":"14433:314:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":7716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:27","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"value","nameLocation":"14778:5:27","nodeType":"VariableDeclaration","scope":7716,"src":"14770:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7693,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:27"},"returnParameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7716,"src":"14808:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7696,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:27"},"scope":8579,"src":"14752:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7740,"nodeType":"Block","src":"15328:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"15346:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7727,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":7724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7734,"nodeType":"ExpressionStatement","src":"15338:76:27"},{"expression":{"arguments":[{"id":7737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"15438:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7735,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:27","typeDescriptions":{}}},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7723,"id":7739,"nodeType":"Return","src":"15424:20:27"}]},"documentation":{"id":7717,"nodeType":"StructuredDocumentation","src":"14945:314:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":7741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:27","nodeType":"FunctionDefinition","parameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"value","nameLocation":"15290:5:27","nodeType":"VariableDeclaration","scope":7741,"src":"15282:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:27"},"returnParameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7741,"src":"15320:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7721,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:27"},"scope":8579,"src":"15264:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7765,"nodeType":"Block","src":"15840:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"15858:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7752,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":7757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":7749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7759,"nodeType":"ExpressionStatement","src":"15850:76:27"},{"expression":{"arguments":[{"id":7762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"15950:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7760,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:27","typeDescriptions":{}}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7748,"id":7764,"nodeType":"Return","src":"15936:20:27"}]},"documentation":{"id":7742,"nodeType":"StructuredDocumentation","src":"15457:314:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:27","nodeType":"FunctionDefinition","parameters":{"id":7745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7744,"mutability":"mutable","name":"value","nameLocation":"15802:5:27","nodeType":"VariableDeclaration","scope":7766,"src":"15794:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7743,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:27"},"returnParameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7766,"src":"15832:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7746,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:27"},"scope":8579,"src":"15776:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7790,"nodeType":"Block","src":"16352:123:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"16370:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7777,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":7774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7784,"nodeType":"ExpressionStatement","src":"16362:76:27"},{"expression":{"arguments":[{"id":7787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"16462:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7785,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:27","typeDescriptions":{}}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7773,"id":7789,"nodeType":"Return","src":"16448:20:27"}]},"documentation":{"id":7767,"nodeType":"StructuredDocumentation","src":"15969:314:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":7791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:27","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"value","nameLocation":"16314:5:27","nodeType":"VariableDeclaration","scope":7791,"src":"16306:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:27"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7791,"src":"16344:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7771,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:27"},"scope":8579,"src":"16288:187:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7815,"nodeType":"Block","src":"16858:120:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"16876:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7802,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":7799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7809,"nodeType":"ExpressionStatement","src":"16868:74:27"},{"expression":{"arguments":[{"id":7812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"16965:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7810,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:27","typeDescriptions":{}}},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7798,"id":7814,"nodeType":"Return","src":"16952:19:27"}]},"documentation":{"id":7792,"nodeType":"StructuredDocumentation","src":"16481:310:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":7816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:27","nodeType":"FunctionDefinition","parameters":{"id":7795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7794,"mutability":"mutable","name":"value","nameLocation":"16821:5:27","nodeType":"VariableDeclaration","scope":7816,"src":"16813:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:27"},"returnParameters":{"id":7798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7816,"src":"16851:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7796,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:27"},"scope":8579,"src":"16796:182:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7836,"nodeType":"Block","src":"17252:103:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"17270:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":7828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":7824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7830,"nodeType":"ExpressionStatement","src":"17262:55:27"},{"expression":{"arguments":[{"id":7833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"17342:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7831,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:27","typeDescriptions":{}}},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7823,"id":7835,"nodeType":"Return","src":"17327:21:27"}]},"documentation":{"id":7817,"nodeType":"StructuredDocumentation","src":"16984:198:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":7837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:27","nodeType":"FunctionDefinition","parameters":{"id":7820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7819,"mutability":"mutable","name":"value","nameLocation":"17213:5:27","nodeType":"VariableDeclaration","scope":7837,"src":"17206:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7818,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:27"},"returnParameters":{"id":7823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7837,"src":"17243:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7821,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:27"},"scope":8579,"src":"17187:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7859,"nodeType":"Block","src":"17790:124:27","statements":[{"expression":{"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"17800:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"17820:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7846,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:27","typeDescriptions":{}}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7851,"nodeType":"ExpressionStatement","src":"17800:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"17844:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"17858:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":7856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":7852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7858,"nodeType":"ExpressionStatement","src":"17836:71:27"}]},"documentation":{"id":7838,"nodeType":"StructuredDocumentation","src":"17361:350:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":7860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:27","nodeType":"FunctionDefinition","parameters":{"id":7841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7840,"mutability":"mutable","name":"value","nameLocation":"17741:5:27","nodeType":"VariableDeclaration","scope":7860,"src":"17734:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7839,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:27"},"returnParameters":{"id":7844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7843,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:27","nodeType":"VariableDeclaration","scope":7860,"src":"17771:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7842,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:27"},"scope":8579,"src":"17716:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7882,"nodeType":"Block","src":"18349:124:27","statements":[{"expression":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"18359:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"18379:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7869,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:27","typeDescriptions":{}}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7874,"nodeType":"ExpressionStatement","src":"18359:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"18403:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"18417:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":7875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7881,"nodeType":"ExpressionStatement","src":"18395:71:27"}]},"documentation":{"id":7861,"nodeType":"StructuredDocumentation","src":"17920:350:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":7883,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:27","nodeType":"FunctionDefinition","parameters":{"id":7864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"mutability":"mutable","name":"value","nameLocation":"18300:5:27","nodeType":"VariableDeclaration","scope":7883,"src":"18293:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7862,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:27"},"returnParameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:27","nodeType":"VariableDeclaration","scope":7883,"src":"18330:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7865,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:27"},"scope":8579,"src":"18275:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7905,"nodeType":"Block","src":"18908:124:27","statements":[{"expression":{"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"18918:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"18938:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7892,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:27","typeDescriptions":{}}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7897,"nodeType":"ExpressionStatement","src":"18918:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"18962:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"18976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":7902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":7898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7904,"nodeType":"ExpressionStatement","src":"18954:71:27"}]},"documentation":{"id":7884,"nodeType":"StructuredDocumentation","src":"18479:350:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":7906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:27","nodeType":"FunctionDefinition","parameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"value","nameLocation":"18859:5:27","nodeType":"VariableDeclaration","scope":7906,"src":"18852:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7885,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:27"},"returnParameters":{"id":7890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7889,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:27","nodeType":"VariableDeclaration","scope":7906,"src":"18889:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7888,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:27"},"scope":8579,"src":"18834:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7928,"nodeType":"Block","src":"19467:124:27","statements":[{"expression":{"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"19477:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"19497:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7915,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:27","typeDescriptions":{}}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7920,"nodeType":"ExpressionStatement","src":"19477:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"19521:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"19535:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":7921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7927,"nodeType":"ExpressionStatement","src":"19513:71:27"}]},"documentation":{"id":7907,"nodeType":"StructuredDocumentation","src":"19038:350:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":7929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:27","nodeType":"FunctionDefinition","parameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"value","nameLocation":"19418:5:27","nodeType":"VariableDeclaration","scope":7929,"src":"19411:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7908,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:27"},"returnParameters":{"id":7913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7912,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:27","nodeType":"VariableDeclaration","scope":7929,"src":"19448:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7911,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:27"},"scope":8579,"src":"19393:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7951,"nodeType":"Block","src":"20026:124:27","statements":[{"expression":{"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"20036:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"20056:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7938,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:27","typeDescriptions":{}}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7943,"nodeType":"ExpressionStatement","src":"20036:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"20080:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"20094:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":7944,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"ExpressionStatement","src":"20072:71:27"}]},"documentation":{"id":7930,"nodeType":"StructuredDocumentation","src":"19597:350:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:27","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"value","nameLocation":"19977:5:27","nodeType":"VariableDeclaration","scope":7952,"src":"19970:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7931,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:27"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7935,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:27","nodeType":"VariableDeclaration","scope":7952,"src":"20007:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7934,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:27"},"scope":8579,"src":"19952:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7974,"nodeType":"Block","src":"20585:124:27","statements":[{"expression":{"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"20595:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"20615:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7961,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:27","typeDescriptions":{}}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7966,"nodeType":"ExpressionStatement","src":"20595:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"20639:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"20653:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":7971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":7967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7973,"nodeType":"ExpressionStatement","src":"20631:71:27"}]},"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"20156:350:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":7975,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:27","nodeType":"FunctionDefinition","parameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"value","nameLocation":"20536:5:27","nodeType":"VariableDeclaration","scope":7975,"src":"20529:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7954,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:27"},"returnParameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:27","nodeType":"VariableDeclaration","scope":7975,"src":"20566:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7957,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:27"},"scope":8579,"src":"20511:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7997,"nodeType":"Block","src":"21144:124:27","statements":[{"expression":{"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"21154:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"21174:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7984,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:27","typeDescriptions":{}}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7989,"nodeType":"ExpressionStatement","src":"21154:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"21198:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"21212:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":7990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7996,"nodeType":"ExpressionStatement","src":"21190:71:27"}]},"documentation":{"id":7976,"nodeType":"StructuredDocumentation","src":"20715:350:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":7998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:27","nodeType":"FunctionDefinition","parameters":{"id":7979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7978,"mutability":"mutable","name":"value","nameLocation":"21095:5:27","nodeType":"VariableDeclaration","scope":7998,"src":"21088:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7977,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:27"},"returnParameters":{"id":7982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7981,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:27","nodeType":"VariableDeclaration","scope":7998,"src":"21125:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7980,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:27"},"scope":8579,"src":"21070:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8020,"nodeType":"Block","src":"21703:124:27","statements":[{"expression":{"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"21713:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"21733:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8007,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:27","typeDescriptions":{}}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8012,"nodeType":"ExpressionStatement","src":"21713:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"21757:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"21771:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":8017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":8013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8019,"nodeType":"ExpressionStatement","src":"21749:71:27"}]},"documentation":{"id":7999,"nodeType":"StructuredDocumentation","src":"21274:350:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":8021,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:27","nodeType":"FunctionDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"value","nameLocation":"21654:5:27","nodeType":"VariableDeclaration","scope":8021,"src":"21647:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8000,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:27"},"returnParameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8004,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:27","nodeType":"VariableDeclaration","scope":8021,"src":"21684:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8003,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:27"},"scope":8579,"src":"21629:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8043,"nodeType":"Block","src":"22262:124:27","statements":[{"expression":{"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8029,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"22272:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"22292:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8030,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:27","typeDescriptions":{}}},"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8035,"nodeType":"ExpressionStatement","src":"22272:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8037,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"22316:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8024,"src":"22330:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":8036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8042,"nodeType":"ExpressionStatement","src":"22308:71:27"}]},"documentation":{"id":8022,"nodeType":"StructuredDocumentation","src":"21833:350:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":8044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:27","nodeType":"FunctionDefinition","parameters":{"id":8025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"mutability":"mutable","name":"value","nameLocation":"22213:5:27","nodeType":"VariableDeclaration","scope":8044,"src":"22206:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8023,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:27"},"returnParameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8027,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:27","nodeType":"VariableDeclaration","scope":8044,"src":"22243:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8026,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:27"},"scope":8579,"src":"22188:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8066,"nodeType":"Block","src":"22821:124:27","statements":[{"expression":{"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"22831:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22851:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8053,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:27","typeDescriptions":{}}},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8058,"nodeType":"ExpressionStatement","src":"22831:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"22875:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"22889:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":8059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8065,"nodeType":"ExpressionStatement","src":"22867:71:27"}]},"documentation":{"id":8045,"nodeType":"StructuredDocumentation","src":"22392:350:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":8067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:27","nodeType":"FunctionDefinition","parameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"value","nameLocation":"22772:5:27","nodeType":"VariableDeclaration","scope":8067,"src":"22765:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8046,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:27"},"returnParameters":{"id":8051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8050,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:27","nodeType":"VariableDeclaration","scope":8067,"src":"22802:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8049,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:27"},"scope":8579,"src":"22747:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8089,"nodeType":"Block","src":"23380:124:27","statements":[{"expression":{"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"23390:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"23410:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8076,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:27","typeDescriptions":{}}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8081,"nodeType":"ExpressionStatement","src":"23390:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"23434:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"23448:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":8082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8088,"nodeType":"ExpressionStatement","src":"23426:71:27"}]},"documentation":{"id":8068,"nodeType":"StructuredDocumentation","src":"22951:350:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":8090,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:27","nodeType":"FunctionDefinition","parameters":{"id":8071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8070,"mutability":"mutable","name":"value","nameLocation":"23331:5:27","nodeType":"VariableDeclaration","scope":8090,"src":"23324:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8069,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:27"},"returnParameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8073,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:27","nodeType":"VariableDeclaration","scope":8090,"src":"23361:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8072,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:27"},"scope":8579,"src":"23306:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8112,"nodeType":"Block","src":"23939:124:27","statements":[{"expression":{"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"23949:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"23969:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8099,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:27","typeDescriptions":{}}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8104,"nodeType":"ExpressionStatement","src":"23949:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"23993:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8093,"src":"24007:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":8109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":8105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8111,"nodeType":"ExpressionStatement","src":"23985:71:27"}]},"documentation":{"id":8091,"nodeType":"StructuredDocumentation","src":"23510:350:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":8113,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:27","nodeType":"FunctionDefinition","parameters":{"id":8094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8093,"mutability":"mutable","name":"value","nameLocation":"23890:5:27","nodeType":"VariableDeclaration","scope":8113,"src":"23883:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8092,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:27"},"returnParameters":{"id":8097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8096,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:27","nodeType":"VariableDeclaration","scope":8113,"src":"23920:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8095,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:27"},"scope":8579,"src":"23865:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"24498:124:27","statements":[{"expression":{"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"24508:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"24528:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8122,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:27","typeDescriptions":{}}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8127,"nodeType":"ExpressionStatement","src":"24508:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"24552:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"24566:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":8132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":8128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8134,"nodeType":"ExpressionStatement","src":"24544:71:27"}]},"documentation":{"id":8114,"nodeType":"StructuredDocumentation","src":"24069:350:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:27","nodeType":"FunctionDefinition","parameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8116,"mutability":"mutable","name":"value","nameLocation":"24449:5:27","nodeType":"VariableDeclaration","scope":8136,"src":"24442:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8115,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:27"},"returnParameters":{"id":8120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8119,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:27","nodeType":"VariableDeclaration","scope":8136,"src":"24479:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8118,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:27"},"scope":8579,"src":"24424:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8158,"nodeType":"Block","src":"25057:124:27","statements":[{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"25067:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"25087:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8145,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:27","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8150,"nodeType":"ExpressionStatement","src":"25067:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"25111:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"25125:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":8151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8157,"nodeType":"ExpressionStatement","src":"25103:71:27"}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"24628:350:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":8159,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:27","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"value","nameLocation":"25008:5:27","nodeType":"VariableDeclaration","scope":8159,"src":"25001:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8138,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:27"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:27","nodeType":"VariableDeclaration","scope":8159,"src":"25038:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8141,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:27"},"scope":8579,"src":"24983:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8181,"nodeType":"Block","src":"25616:124:27","statements":[{"expression":{"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"25626:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"25646:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8168,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:27","typeDescriptions":{}}},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8173,"nodeType":"ExpressionStatement","src":"25626:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"25670:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"25684:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":8174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8180,"nodeType":"ExpressionStatement","src":"25662:71:27"}]},"documentation":{"id":8160,"nodeType":"StructuredDocumentation","src":"25187:350:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":8182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:27","nodeType":"FunctionDefinition","parameters":{"id":8163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8162,"mutability":"mutable","name":"value","nameLocation":"25567:5:27","nodeType":"VariableDeclaration","scope":8182,"src":"25560:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8161,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:27"},"returnParameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:27","nodeType":"VariableDeclaration","scope":8182,"src":"25597:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8164,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:27"},"scope":8579,"src":"25542:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8204,"nodeType":"Block","src":"26175:124:27","statements":[{"expression":{"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"26185:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"26205:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8191,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:27","typeDescriptions":{}}},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8196,"nodeType":"ExpressionStatement","src":"26185:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"26229:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"26243:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":8201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":8197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8203,"nodeType":"ExpressionStatement","src":"26221:71:27"}]},"documentation":{"id":8183,"nodeType":"StructuredDocumentation","src":"25746:350:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":8205,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:27","nodeType":"FunctionDefinition","parameters":{"id":8186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8185,"mutability":"mutable","name":"value","nameLocation":"26126:5:27","nodeType":"VariableDeclaration","scope":8205,"src":"26119:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8184,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:27"},"returnParameters":{"id":8189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:27","nodeType":"VariableDeclaration","scope":8205,"src":"26156:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8187,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:27"},"scope":8579,"src":"26101:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8227,"nodeType":"Block","src":"26734:124:27","statements":[{"expression":{"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"26744:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"26764:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8214,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:27","typeDescriptions":{}}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8219,"nodeType":"ExpressionStatement","src":"26744:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"26788:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"26802:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":8224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":8220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8226,"nodeType":"ExpressionStatement","src":"26780:71:27"}]},"documentation":{"id":8206,"nodeType":"StructuredDocumentation","src":"26305:350:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":8228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:27","nodeType":"FunctionDefinition","parameters":{"id":8209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"value","nameLocation":"26685:5:27","nodeType":"VariableDeclaration","scope":8228,"src":"26678:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8207,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:27"},"returnParameters":{"id":8212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8211,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:27","nodeType":"VariableDeclaration","scope":8228,"src":"26715:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8210,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:27"},"scope":8579,"src":"26660:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8250,"nodeType":"Block","src":"27293:124:27","statements":[{"expression":{"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"27303:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"27323:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8237,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:27","typeDescriptions":{}}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8242,"nodeType":"ExpressionStatement","src":"27303:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"27347:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"27361:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":8243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8249,"nodeType":"ExpressionStatement","src":"27339:71:27"}]},"documentation":{"id":8229,"nodeType":"StructuredDocumentation","src":"26864:350:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":8251,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:27","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"value","nameLocation":"27244:5:27","nodeType":"VariableDeclaration","scope":8251,"src":"27237:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8230,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:27"},"returnParameters":{"id":8235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8234,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:27","nodeType":"VariableDeclaration","scope":8251,"src":"27274:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8233,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:27"},"scope":8579,"src":"27219:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8273,"nodeType":"Block","src":"27852:124:27","statements":[{"expression":{"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"27862:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"27882:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8260,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:27","typeDescriptions":{}}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8265,"nodeType":"ExpressionStatement","src":"27862:26:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"27906:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"27920:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":8270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":8266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8272,"nodeType":"ExpressionStatement","src":"27898:71:27"}]},"documentation":{"id":8252,"nodeType":"StructuredDocumentation","src":"27423:350:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":8274,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:27","nodeType":"FunctionDefinition","parameters":{"id":8255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8254,"mutability":"mutable","name":"value","nameLocation":"27803:5:27","nodeType":"VariableDeclaration","scope":8274,"src":"27796:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8253,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:27"},"returnParameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8257,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:27","nodeType":"VariableDeclaration","scope":8274,"src":"27833:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8256,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:27"},"scope":8579,"src":"27778:198:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8296,"nodeType":"Block","src":"28404:122:27","statements":[{"expression":{"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"28414:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"28433:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8283,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:27","typeDescriptions":{}}},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8288,"nodeType":"ExpressionStatement","src":"28414:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"28457:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"28471:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":8293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":8289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8295,"nodeType":"ExpressionStatement","src":"28449:70:27"}]},"documentation":{"id":8275,"nodeType":"StructuredDocumentation","src":"27982:345:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":8297,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:27","nodeType":"FunctionDefinition","parameters":{"id":8278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8277,"mutability":"mutable","name":"value","nameLocation":"28356:5:27","nodeType":"VariableDeclaration","scope":8297,"src":"28349:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8276,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:27"},"returnParameters":{"id":8281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8280,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:27","nodeType":"VariableDeclaration","scope":8297,"src":"28386:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8279,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:27"},"scope":8579,"src":"28332:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8319,"nodeType":"Block","src":"28954:122:27","statements":[{"expression":{"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8303,"src":"28964:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"28983:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8306,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:27","typeDescriptions":{}}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8311,"nodeType":"ExpressionStatement","src":"28964:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8303,"src":"29007:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"29021:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":8312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8318,"nodeType":"ExpressionStatement","src":"28999:70:27"}]},"documentation":{"id":8298,"nodeType":"StructuredDocumentation","src":"28532:345:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":8320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:27","nodeType":"FunctionDefinition","parameters":{"id":8301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"value","nameLocation":"28906:5:27","nodeType":"VariableDeclaration","scope":8320,"src":"28899:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8299,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:27"},"returnParameters":{"id":8304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8303,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:27","nodeType":"VariableDeclaration","scope":8320,"src":"28936:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8302,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:27"},"scope":8579,"src":"28882:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8342,"nodeType":"Block","src":"29504:122:27","statements":[{"expression":{"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"29514:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"29533:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8329,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:27","typeDescriptions":{}}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8334,"nodeType":"ExpressionStatement","src":"29514:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"29557:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"29571:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":8335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8341,"nodeType":"ExpressionStatement","src":"29549:70:27"}]},"documentation":{"id":8321,"nodeType":"StructuredDocumentation","src":"29082:345:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":8343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:27","nodeType":"FunctionDefinition","parameters":{"id":8324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8323,"mutability":"mutable","name":"value","nameLocation":"29456:5:27","nodeType":"VariableDeclaration","scope":8343,"src":"29449:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8322,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:27"},"returnParameters":{"id":8327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8326,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:27","nodeType":"VariableDeclaration","scope":8343,"src":"29486:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8325,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:27"},"scope":8579,"src":"29432:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8365,"nodeType":"Block","src":"30054:122:27","statements":[{"expression":{"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"30064:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"30083:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8352,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:27","typeDescriptions":{}}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8357,"nodeType":"ExpressionStatement","src":"30064:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"30107:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"30121:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":8362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":8358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8364,"nodeType":"ExpressionStatement","src":"30099:70:27"}]},"documentation":{"id":8344,"nodeType":"StructuredDocumentation","src":"29632:345:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":8366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:27","nodeType":"FunctionDefinition","parameters":{"id":8347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8346,"mutability":"mutable","name":"value","nameLocation":"30006:5:27","nodeType":"VariableDeclaration","scope":8366,"src":"29999:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8345,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:27"},"returnParameters":{"id":8350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8349,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:27","nodeType":"VariableDeclaration","scope":8366,"src":"30036:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8348,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:27"},"scope":8579,"src":"29982:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8388,"nodeType":"Block","src":"30604:122:27","statements":[{"expression":{"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"30614:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"30633:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8375,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:27","typeDescriptions":{}}},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8380,"nodeType":"ExpressionStatement","src":"30614:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"30657:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"30671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":8385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":8381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8387,"nodeType":"ExpressionStatement","src":"30649:70:27"}]},"documentation":{"id":8367,"nodeType":"StructuredDocumentation","src":"30182:345:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":8389,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:27","nodeType":"FunctionDefinition","parameters":{"id":8370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8369,"mutability":"mutable","name":"value","nameLocation":"30556:5:27","nodeType":"VariableDeclaration","scope":8389,"src":"30549:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8368,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:27"},"returnParameters":{"id":8373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8372,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:27","nodeType":"VariableDeclaration","scope":8389,"src":"30586:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8371,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:27"},"scope":8579,"src":"30532:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8411,"nodeType":"Block","src":"31154:122:27","statements":[{"expression":{"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"31164:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"31183:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8398,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:27","typeDescriptions":{}}},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8403,"nodeType":"ExpressionStatement","src":"31164:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"31207:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"31221:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":8404,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8410,"nodeType":"ExpressionStatement","src":"31199:70:27"}]},"documentation":{"id":8390,"nodeType":"StructuredDocumentation","src":"30732:345:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":8412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:27","nodeType":"FunctionDefinition","parameters":{"id":8393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"value","nameLocation":"31106:5:27","nodeType":"VariableDeclaration","scope":8412,"src":"31099:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8391,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:27"},"returnParameters":{"id":8396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8395,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:27","nodeType":"VariableDeclaration","scope":8412,"src":"31136:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8394,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:27"},"scope":8579,"src":"31082:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8434,"nodeType":"Block","src":"31704:122:27","statements":[{"expression":{"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"31714:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"31733:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8421,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:27","typeDescriptions":{}}},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8426,"nodeType":"ExpressionStatement","src":"31714:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"31757:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"31771:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":8431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":8427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8433,"nodeType":"ExpressionStatement","src":"31749:70:27"}]},"documentation":{"id":8413,"nodeType":"StructuredDocumentation","src":"31282:345:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":8435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:27","nodeType":"FunctionDefinition","parameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"value","nameLocation":"31656:5:27","nodeType":"VariableDeclaration","scope":8435,"src":"31649:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8414,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:27"},"returnParameters":{"id":8419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8418,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:27","nodeType":"VariableDeclaration","scope":8435,"src":"31686:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8417,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:27"},"scope":8579,"src":"31632:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8457,"nodeType":"Block","src":"32254:122:27","statements":[{"expression":{"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"32264:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"32283:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8444,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:27","typeDescriptions":{}}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8449,"nodeType":"ExpressionStatement","src":"32264:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"32307:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"32321:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":8454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":8450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8456,"nodeType":"ExpressionStatement","src":"32299:70:27"}]},"documentation":{"id":8436,"nodeType":"StructuredDocumentation","src":"31832:345:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":8458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:27","nodeType":"FunctionDefinition","parameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"value","nameLocation":"32206:5:27","nodeType":"VariableDeclaration","scope":8458,"src":"32199:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8437,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:27"},"returnParameters":{"id":8442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8441,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:27","nodeType":"VariableDeclaration","scope":8458,"src":"32236:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8440,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:27"},"scope":8579,"src":"32182:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8480,"nodeType":"Block","src":"32804:122:27","statements":[{"expression":{"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"32814:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8461,"src":"32833:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8467,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:27","typeDescriptions":{}}},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8472,"nodeType":"ExpressionStatement","src":"32814:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8464,"src":"32857:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8461,"src":"32871:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":8477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":8473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8479,"nodeType":"ExpressionStatement","src":"32849:70:27"}]},"documentation":{"id":8459,"nodeType":"StructuredDocumentation","src":"32382:345:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":8481,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:27","nodeType":"FunctionDefinition","parameters":{"id":8462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8461,"mutability":"mutable","name":"value","nameLocation":"32756:5:27","nodeType":"VariableDeclaration","scope":8481,"src":"32749:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8460,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:27"},"returnParameters":{"id":8465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8464,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:27","nodeType":"VariableDeclaration","scope":8481,"src":"32786:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8463,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:27"},"scope":8579,"src":"32732:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8503,"nodeType":"Block","src":"33354:122:27","statements":[{"expression":{"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"33364:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"33383:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8490,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:27","typeDescriptions":{}}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8495,"nodeType":"ExpressionStatement","src":"33364:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"33407:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8484,"src":"33421:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":8500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":8496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8502,"nodeType":"ExpressionStatement","src":"33399:70:27"}]},"documentation":{"id":8482,"nodeType":"StructuredDocumentation","src":"32932:345:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":8504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:27","nodeType":"FunctionDefinition","parameters":{"id":8485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"value","nameLocation":"33306:5:27","nodeType":"VariableDeclaration","scope":8504,"src":"33299:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8483,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:27"},"returnParameters":{"id":8488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8487,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:27","nodeType":"VariableDeclaration","scope":8504,"src":"33336:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8486,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:27"},"scope":8579,"src":"33282:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8526,"nodeType":"Block","src":"33904:122:27","statements":[{"expression":{"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"33914:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"33933:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8513,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:27","typeDescriptions":{}}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8518,"nodeType":"ExpressionStatement","src":"33914:25:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"33957:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"33971:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":8523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":8519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8525,"nodeType":"ExpressionStatement","src":"33949:70:27"}]},"documentation":{"id":8505,"nodeType":"StructuredDocumentation","src":"33482:345:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":8527,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:27","nodeType":"FunctionDefinition","parameters":{"id":8508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8507,"mutability":"mutable","name":"value","nameLocation":"33856:5:27","nodeType":"VariableDeclaration","scope":8527,"src":"33849:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8506,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:27"},"returnParameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:27","nodeType":"VariableDeclaration","scope":8527,"src":"33886:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8509,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:27"},"scope":8579,"src":"33832:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8549,"nodeType":"Block","src":"34447:120:27","statements":[{"expression":{"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"34457:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"34475:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8536,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:27","typeDescriptions":{}}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8541,"nodeType":"ExpressionStatement","src":"34457:24:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"34499:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8530,"src":"34513:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":8546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":8542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8548,"nodeType":"ExpressionStatement","src":"34491:69:27"}]},"documentation":{"id":8528,"nodeType":"StructuredDocumentation","src":"34032:340:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":8550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:27","nodeType":"FunctionDefinition","parameters":{"id":8531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8530,"mutability":"mutable","name":"value","nameLocation":"34400:5:27","nodeType":"VariableDeclaration","scope":8550,"src":"34393:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8529,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:27"},"returnParameters":{"id":8534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8533,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:27","nodeType":"VariableDeclaration","scope":8550,"src":"34430:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8532,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:27"},"scope":8579,"src":"34377:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8577,"nodeType":"Block","src":"34845:233:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"34962:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8563,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8560,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:27","typeDescriptions":{}}},"id":8567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":8569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":8558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8571,"nodeType":"ExpressionStatement","src":"34954:87:27"},{"expression":{"arguments":[{"id":8574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"35065:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8572,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:27","typeDescriptions":{}}},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8557,"id":8576,"nodeType":"Return","src":"35051:20:27"}]},"documentation":{"id":8551,"nodeType":"StructuredDocumentation","src":"34573:203:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":8578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:27","nodeType":"FunctionDefinition","parameters":{"id":8554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"mutability":"mutable","name":"value","nameLocation":"34807:5:27","nodeType":"VariableDeclaration","scope":8578,"src":"34799:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8552,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:27"},"returnParameters":{"id":8557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8578,"src":"34837:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8555,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:27"},"scope":8579,"src":"34781:297:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8580,"src":"927:34153:27","usedErrors":[]}],"src":"192:34889:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[8684]},"id":8685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8581,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8582,"nodeType":"StructuredDocumentation","src":"134:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8684,"linearizedBaseContracts":[8684],"name":"SignedMath","nameLocation":"223:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":8599,"nodeType":"Block","src":"375:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"392:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"396:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"404:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:28","trueExpression":{"id":8595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"400:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8591,"id":8598,"nodeType":"Return","src":"385:20:28"}]},"documentation":{"id":8583,"nodeType":"StructuredDocumentation","src":"240:66:28","text":" @dev Returns the largest of two signed numbers."},"id":8600,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:28","nodeType":"FunctionDefinition","parameters":{"id":8588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8585,"mutability":"mutable","name":"a","nameLocation":"331:1:28","nodeType":"VariableDeclaration","scope":8600,"src":"324:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8584,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8587,"mutability":"mutable","name":"b","nameLocation":"341:1:28","nodeType":"VariableDeclaration","scope":8600,"src":"334:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8586,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:28"},"returnParameters":{"id":8591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8600,"src":"367:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8589,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:28"},"scope":8684,"src":"311:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8617,"nodeType":"Block","src":"554:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"571:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"575:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"583:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:28","trueExpression":{"id":8613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"579:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8609,"id":8616,"nodeType":"Return","src":"564:20:28"}]},"documentation":{"id":8601,"nodeType":"StructuredDocumentation","src":"418:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":8618,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:28","nodeType":"FunctionDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8603,"mutability":"mutable","name":"a","nameLocation":"510:1:28","nodeType":"VariableDeclaration","scope":8618,"src":"503:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8602,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8605,"mutability":"mutable","name":"b","nameLocation":"520:1:28","nodeType":"VariableDeclaration","scope":8618,"src":"513:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8604,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:28"},"returnParameters":{"id":8609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8618,"src":"546:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8607,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:28"},"scope":8684,"src":"490:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8661,"nodeType":"Block","src":"796:162:28","statements":[{"assignments":[8629],"declarations":[{"constant":false,"id":8629,"mutability":"mutable","name":"x","nameLocation":"865:1:28","nodeType":"VariableDeclaration","scope":8661,"src":"858:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8628,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8642,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"870:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"874:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"881:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"885:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8643,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"910:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8648,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"930:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8646,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:28","typeDescriptions":{}}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8644,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:28","typeDescriptions":{}}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"944:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8654,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"948:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8627,"id":8660,"nodeType":"Return","src":"903:48:28"}]},"documentation":{"id":8619,"nodeType":"StructuredDocumentation","src":"597:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8662,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:28","nodeType":"FunctionDefinition","parameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8621,"mutability":"mutable","name":"a","nameLocation":"752:1:28","nodeType":"VariableDeclaration","scope":8662,"src":"745:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8620,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8623,"mutability":"mutable","name":"b","nameLocation":"762:1:28","nodeType":"VariableDeclaration","scope":8662,"src":"755:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8622,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:28"},"returnParameters":{"id":8627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8662,"src":"788:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8625,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:28"},"scope":8684,"src":"728:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8682,"nodeType":"Block","src":"1102:158:28","statements":[{"id":8681,"nodeType":"UncheckedBlock","src":"1112:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8672,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"1227:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":8673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:28","subExpression":{"id":8676,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"1241:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:28","trueExpression":{"id":8675,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"1236:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:28","typeDescriptions":{}}},"id":8679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8669,"id":8680,"nodeType":"Return","src":"1212:31:28"}]}]},"documentation":{"id":8663,"nodeType":"StructuredDocumentation","src":"964:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8683,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:28","nodeType":"FunctionDefinition","parameters":{"id":8666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8665,"mutability":"mutable","name":"n","nameLocation":"1067:1:28","nodeType":"VariableDeclaration","scope":8683,"src":"1060:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8664,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:28"},"returnParameters":{"id":8669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8683,"src":"1093:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:28"},"scope":8684,"src":"1047:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8685,"src":"215:1047:28","usedErrors":[]}],"src":"109:1154:28"},"id":28},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","exportedSymbols":{"DoubleEndedQueue":[9025],"SafeCast":[8579]},"id":9026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8686,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"117:23:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":8687,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9026,"sourceUnit":8580,"src":"142:30:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DoubleEndedQueue","contractDependencies":[],"contractKind":"library","documentation":{"id":8688,"nodeType":"StructuredDocumentation","src":"174:668:29","text":" @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n the existing queue contents are left in storage.\n The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n used in storage, and not in memory.\n ```solidity\n DoubleEndedQueue.Bytes32Deque queue;\n ```\n _Available since v4.6._"},"fullyImplemented":true,"id":9025,"linearizedBaseContracts":[9025],"name":"DoubleEndedQueue","nameLocation":"851:16:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8689,"nodeType":"StructuredDocumentation","src":"874:103:29","text":" @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty."},"id":8691,"name":"Empty","nameLocation":"988:5:29","nodeType":"ErrorDefinition","parameters":{"id":8690,"nodeType":"ParameterList","parameters":[],"src":"993:2:29"},"src":"982:14:29"},{"documentation":{"id":8692,"nodeType":"StructuredDocumentation","src":"1002:107:29","text":" @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."},"id":8694,"name":"OutOfBounds","nameLocation":"1120:11:29","nodeType":"ErrorDefinition","parameters":{"id":8693,"nodeType":"ParameterList","parameters":[],"src":"1131:2:29"},"src":"1114:20:29"},{"canonicalName":"DoubleEndedQueue.Bytes32Deque","id":8703,"members":[{"constant":false,"id":8696,"mutability":"mutable","name":"_begin","nameLocation":"1945:6:29","nodeType":"VariableDeclaration","scope":8703,"src":"1938:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8695,"name":"int128","nodeType":"ElementaryTypeName","src":"1938:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":8698,"mutability":"mutable","name":"_end","nameLocation":"1968:4:29","nodeType":"VariableDeclaration","scope":8703,"src":"1961:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8697,"name":"int128","nodeType":"ElementaryTypeName","src":"1961:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":8702,"mutability":"mutable","name":"_data","nameLocation":"2009:5:29","nodeType":"VariableDeclaration","scope":8703,"src":"1982:32:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"typeName":{"id":8701,"keyType":{"id":8699,"name":"int128","nodeType":"ElementaryTypeName","src":"1990:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Mapping","src":"1982:26:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"valueType":{"id":8700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2000:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32Deque","nameLocation":"1915:12:29","nodeType":"StructDefinition","scope":9025,"src":"1908:113:29","visibility":"public"},{"body":{"id":8734,"nodeType":"Block","src":"2166:156:29","statements":[{"assignments":[8713],"declarations":[{"constant":false,"id":8713,"mutability":"mutable","name":"backIndex","nameLocation":"2183:9:29","nodeType":"VariableDeclaration","scope":8734,"src":"2176:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8712,"name":"int128","nodeType":"ElementaryTypeName","src":"2176:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8716,"initialValue":{"expression":{"id":8714,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"2195:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"2195:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"2176:29:29"},{"expression":{"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8717,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"2215:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"2215:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8721,"indexExpression":{"id":8719,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"2227:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2215:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8709,"src":"2240:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:30:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8724,"nodeType":"ExpressionStatement","src":"2215:30:29"},{"id":8733,"nodeType":"UncheckedBlock","src":"2255:61:29","statements":[{"expression":{"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8725,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"2279:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"2279:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8728,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"2292:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2292:13:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2279:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8732,"nodeType":"ExpressionStatement","src":"2279:26:29"}]}]},"documentation":{"id":8704,"nodeType":"StructuredDocumentation","src":"2027:64:29","text":" @dev Inserts an item at the end of the queue."},"id":8735,"implemented":true,"kind":"function","modifiers":[],"name":"pushBack","nameLocation":"2105:8:29","nodeType":"FunctionDefinition","parameters":{"id":8710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8707,"mutability":"mutable","name":"deque","nameLocation":"2135:5:29","nodeType":"VariableDeclaration","scope":8735,"src":"2114:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8706,"nodeType":"UserDefinedTypeName","pathNode":{"id":8705,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"2114:12:29"},"referencedDeclaration":8703,"src":"2114:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":8709,"mutability":"mutable","name":"value","nameLocation":"2150:5:29","nodeType":"VariableDeclaration","scope":8735,"src":"2142:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2142:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2113:43:29"},"returnParameters":{"id":8711,"nodeType":"ParameterList","parameters":[],"src":"2166:0:29"},"scope":9025,"src":"2096:226:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8781,"nodeType":"Block","src":"2549:256:29","statements":[{"condition":{"arguments":[{"id":8745,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"2569:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":8744,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"2563:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2563:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8750,"nodeType":"IfStatement","src":"2559:32:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8747,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"2584:5:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2584:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8749,"nodeType":"RevertStatement","src":"2577:14:29"}},{"assignments":[8752],"declarations":[{"constant":false,"id":8752,"mutability":"mutable","name":"backIndex","nameLocation":"2608:9:29","nodeType":"VariableDeclaration","scope":8781,"src":"2601:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8751,"name":"int128","nodeType":"ElementaryTypeName","src":"2601:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8753,"nodeType":"VariableDeclarationStatement","src":"2601:16:29"},{"id":8761,"nodeType":"UncheckedBlock","src":"2627:61:29","statements":[{"expression":{"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8754,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2651:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8755,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"2663:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"2663:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2676:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2663:14:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2651:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8760,"nodeType":"ExpressionStatement","src":"2651:26:29"}]},{"expression":{"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"2697:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":8763,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"2705:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"2705:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8766,"indexExpression":{"id":8765,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2717:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2705:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2697:30:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8768,"nodeType":"ExpressionStatement","src":"2697:30:29"},{"expression":{"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2737:29:29","subExpression":{"baseExpression":{"expression":{"id":8769,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"2744:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"2744:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8772,"indexExpression":{"id":8771,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2756:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2744:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8774,"nodeType":"ExpressionStatement","src":"2737:29:29"},{"expression":{"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8775,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"2776:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"2776:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8778,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2789:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2776:22:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8780,"nodeType":"ExpressionStatement","src":"2776:22:29"}]},"documentation":{"id":8736,"nodeType":"StructuredDocumentation","src":"2328:138:29","text":" @dev Removes the item at the end of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":8782,"implemented":true,"kind":"function","modifiers":[],"name":"popBack","nameLocation":"2480:7:29","nodeType":"FunctionDefinition","parameters":{"id":8740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8739,"mutability":"mutable","name":"deque","nameLocation":"2509:5:29","nodeType":"VariableDeclaration","scope":8782,"src":"2488:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8738,"nodeType":"UserDefinedTypeName","pathNode":{"id":8737,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"2488:12:29"},"referencedDeclaration":8703,"src":"2488:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"2487:28:29"},"returnParameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"value","nameLocation":"2542:5:29","nodeType":"VariableDeclaration","scope":8782,"src":"2534:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:15:29"},"scope":9025,"src":"2471:334:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8816,"nodeType":"Block","src":"2957:183:29","statements":[{"assignments":[8792],"declarations":[{"constant":false,"id":8792,"mutability":"mutable","name":"frontIndex","nameLocation":"2974:10:29","nodeType":"VariableDeclaration","scope":8816,"src":"2967:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8791,"name":"int128","nodeType":"ElementaryTypeName","src":"2967:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8793,"nodeType":"VariableDeclarationStatement","src":"2967:17:29"},{"id":8801,"nodeType":"UncheckedBlock","src":"2994:64:29","statements":[{"expression":{"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8794,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"3018:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8795,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"3031:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"3031:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3046:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3031:16:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3018:29:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8800,"nodeType":"ExpressionStatement","src":"3018:29:29"}]},{"expression":{"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":8802,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"3067:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"3067:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8806,"indexExpression":{"id":8804,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"3079:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3067:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8788,"src":"3093:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3067:31:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8809,"nodeType":"ExpressionStatement","src":"3067:31:29"},{"expression":{"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8810,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8786,"src":"3108:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"3108:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8813,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"3123:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3108:25:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8815,"nodeType":"ExpressionStatement","src":"3108:25:29"}]},"documentation":{"id":8783,"nodeType":"StructuredDocumentation","src":"2811:70:29","text":" @dev Inserts an item at the beginning of the queue."},"id":8817,"implemented":true,"kind":"function","modifiers":[],"name":"pushFront","nameLocation":"2895:9:29","nodeType":"FunctionDefinition","parameters":{"id":8789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8786,"mutability":"mutable","name":"deque","nameLocation":"2926:5:29","nodeType":"VariableDeclaration","scope":8817,"src":"2905:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8785,"nodeType":"UserDefinedTypeName","pathNode":{"id":8784,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"2905:12:29"},"referencedDeclaration":8703,"src":"2905:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":8788,"mutability":"mutable","name":"value","nameLocation":"2941:5:29","nodeType":"VariableDeclaration","scope":8817,"src":"2933:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2933:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2904:43:29"},"returnParameters":{"id":8790,"nodeType":"ParameterList","parameters":[],"src":"2957:0:29"},"scope":9025,"src":"2886:254:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8860,"nodeType":"Block","src":"3374:245:29","statements":[{"condition":{"arguments":[{"id":8827,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"3394:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":8826,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"3388:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3388:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8832,"nodeType":"IfStatement","src":"3384:32:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8829,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"3409:5:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3409:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8831,"nodeType":"RevertStatement","src":"3402:14:29"}},{"assignments":[8834],"declarations":[{"constant":false,"id":8834,"mutability":"mutable","name":"frontIndex","nameLocation":"3433:10:29","nodeType":"VariableDeclaration","scope":8860,"src":"3426:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8833,"name":"int128","nodeType":"ElementaryTypeName","src":"3426:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8837,"initialValue":{"expression":{"id":8835,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"3446:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"3446:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3426:32:29"},{"expression":{"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"3468:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":8839,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"3476:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"3476:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8842,"indexExpression":{"id":8841,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"3488:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3476:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3468:31:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8844,"nodeType":"ExpressionStatement","src":"3468:31:29"},{"expression":{"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3509:30:29","subExpression":{"baseExpression":{"expression":{"id":8845,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"3516:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"3516:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8848,"indexExpression":{"id":8847,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"3528:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3516:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8850,"nodeType":"ExpressionStatement","src":"3509:30:29"},{"id":8859,"nodeType":"UncheckedBlock","src":"3549:64:29","statements":[{"expression":{"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8851,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"3573:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"3573:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8854,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"3588:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3588:14:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3573:29:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8858,"nodeType":"ExpressionStatement","src":"3573:29:29"}]}]},"documentation":{"id":8818,"nodeType":"StructuredDocumentation","src":"3146:144:29","text":" @dev Removes the item at the beginning of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":8861,"implemented":true,"kind":"function","modifiers":[],"name":"popFront","nameLocation":"3304:8:29","nodeType":"FunctionDefinition","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"deque","nameLocation":"3334:5:29","nodeType":"VariableDeclaration","scope":8861,"src":"3313:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8820,"nodeType":"UserDefinedTypeName","pathNode":{"id":8819,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"3313:12:29"},"referencedDeclaration":8703,"src":"3313:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3312:28:29"},"returnParameters":{"id":8825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8824,"mutability":"mutable","name":"value","nameLocation":"3367:5:29","nodeType":"VariableDeclaration","scope":8861,"src":"3359:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3359:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3358:15:29"},"scope":9025,"src":"3295:324:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8887,"nodeType":"Block","src":"3840:131:29","statements":[{"condition":{"arguments":[{"id":8871,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"3860:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":8870,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"3854:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3854:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8876,"nodeType":"IfStatement","src":"3850:32:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8873,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"3875:5:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3875:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8875,"nodeType":"RevertStatement","src":"3868:14:29"}},{"assignments":[8878],"declarations":[{"constant":false,"id":8878,"mutability":"mutable","name":"frontIndex","nameLocation":"3899:10:29","nodeType":"VariableDeclaration","scope":8887,"src":"3892:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8877,"name":"int128","nodeType":"ElementaryTypeName","src":"3892:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8881,"initialValue":{"expression":{"id":8879,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"3912:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"3912:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3892:32:29"},{"expression":{"baseExpression":{"expression":{"id":8882,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"3941:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"3941:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8885,"indexExpression":{"id":8884,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"3953:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3941:23:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8869,"id":8886,"nodeType":"Return","src":"3934:30:29"}]},"documentation":{"id":8862,"nodeType":"StructuredDocumentation","src":"3625:129:29","text":" @dev Returns the item at the beginning of the queue.\n Reverts with `Empty` if the queue is empty."},"id":8888,"implemented":true,"kind":"function","modifiers":[],"name":"front","nameLocation":"3768:5:29","nodeType":"FunctionDefinition","parameters":{"id":8866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8865,"mutability":"mutable","name":"deque","nameLocation":"3795:5:29","nodeType":"VariableDeclaration","scope":8888,"src":"3774:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8864,"nodeType":"UserDefinedTypeName","pathNode":{"id":8863,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"3774:12:29"},"referencedDeclaration":8703,"src":"3774:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3773:28:29"},"returnParameters":{"id":8869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8868,"mutability":"mutable","name":"value","nameLocation":"3833:5:29","nodeType":"VariableDeclaration","scope":8888,"src":"3825:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3825:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3824:15:29"},"scope":9025,"src":"3759:212:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8920,"nodeType":"Block","src":"4185:184:29","statements":[{"condition":{"arguments":[{"id":8898,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"4205:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":8897,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"4199:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$8703_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4199:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8903,"nodeType":"IfStatement","src":"4195:32:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8900,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"4220:5:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4220:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8902,"nodeType":"RevertStatement","src":"4213:14:29"}},{"assignments":[8905],"declarations":[{"constant":false,"id":8905,"mutability":"mutable","name":"backIndex","nameLocation":"4244:9:29","nodeType":"VariableDeclaration","scope":8920,"src":"4237:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8904,"name":"int128","nodeType":"ElementaryTypeName","src":"4237:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8906,"nodeType":"VariableDeclarationStatement","src":"4237:16:29"},{"id":8914,"nodeType":"UncheckedBlock","src":"4263:61:29","statements":[{"expression":{"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8907,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"4287:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8908,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"4299:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"4299:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4312:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4299:14:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4287:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8913,"nodeType":"ExpressionStatement","src":"4287:26:29"}]},{"expression":{"baseExpression":{"expression":{"id":8915,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"4340:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"4340:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8918,"indexExpression":{"id":8917,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"4352:9:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8896,"id":8919,"nodeType":"Return","src":"4333:29:29"}]},"documentation":{"id":8889,"nodeType":"StructuredDocumentation","src":"3977:123:29","text":" @dev Returns the item at the end of the queue.\n Reverts with `Empty` if the queue is empty."},"id":8921,"implemented":true,"kind":"function","modifiers":[],"name":"back","nameLocation":"4114:4:29","nodeType":"FunctionDefinition","parameters":{"id":8893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8892,"mutability":"mutable","name":"deque","nameLocation":"4140:5:29","nodeType":"VariableDeclaration","scope":8921,"src":"4119:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8891,"nodeType":"UserDefinedTypeName","pathNode":{"id":8890,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"4119:12:29"},"referencedDeclaration":8703,"src":"4119:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"4118:28:29"},"returnParameters":{"id":8896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8895,"mutability":"mutable","name":"value","nameLocation":"4178:5:29","nodeType":"VariableDeclaration","scope":8921,"src":"4170:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4170:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4169:15:29"},"scope":9025,"src":"4105:264:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8961,"nodeType":"Block","src":"4699:231:29","statements":[{"assignments":[8933],"declarations":[{"constant":false,"id":8933,"mutability":"mutable","name":"idx","nameLocation":"4765:3:29","nodeType":"VariableDeclaration","scope":8961,"src":"4758:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8932,"name":"int128","nodeType":"ElementaryTypeName","src":"4758:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8947,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8938,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"4796:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"4796:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":8937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4789:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8936,"name":"int256","nodeType":"ElementaryTypeName","src":"4789:6:29","typeDescriptions":{}}},"id":8940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4789:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":8943,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"4830:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8941,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"4812:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":8578,"src":"4812:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4812:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4789:47:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":8934,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"4771:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8579_$","typeString":"type(library SafeCast)"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"4758:79:29"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8948,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"4851:3:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8949,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"4858:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"4858:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4851:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8955,"nodeType":"IfStatement","src":"4847:43:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8952,"name":"OutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"4877:11:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4877:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8954,"nodeType":"RevertStatement","src":"4870:20:29"}},{"expression":{"baseExpression":{"expression":{"id":8956,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"4907:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":8702,"src":"4907:11:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":8959,"indexExpression":{"id":8958,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8933,"src":"4919:3:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4907:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8931,"id":8960,"nodeType":"Return","src":"4900:23:29"}]},"documentation":{"id":8922,"nodeType":"StructuredDocumentation","src":"4375:226:29","text":" @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n `length(deque) - 1`.\n Reverts with `OutOfBounds` if the index is out of bounds."},"id":8962,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4615:2:29","nodeType":"FunctionDefinition","parameters":{"id":8928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8925,"mutability":"mutable","name":"deque","nameLocation":"4639:5:29","nodeType":"VariableDeclaration","scope":8962,"src":"4618:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8924,"nodeType":"UserDefinedTypeName","pathNode":{"id":8923,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"4618:12:29"},"referencedDeclaration":8703,"src":"4618:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":8927,"mutability":"mutable","name":"index","nameLocation":"4654:5:29","nodeType":"VariableDeclaration","scope":8962,"src":"4646:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4646:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4617:43:29"},"returnParameters":{"id":8931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"mutability":"mutable","name":"value","nameLocation":"4692:5:29","nodeType":"VariableDeclaration","scope":8962,"src":"4684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4684:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4683:15:29"},"scope":9025,"src":"4606:324:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8981,"nodeType":"Block","src":"5219:57:29","statements":[{"expression":{"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8969,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"5229:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"5229:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5244:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5229:16:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8974,"nodeType":"ExpressionStatement","src":"5229:16:29"},{"expression":{"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8975,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"5255:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"5255:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5268:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5255:14:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8980,"nodeType":"ExpressionStatement","src":"5255:14:29"}]},"documentation":{"id":8963,"nodeType":"StructuredDocumentation","src":"4936:226:29","text":" @dev Resets the queue back to being empty.\n NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n out on potential gas refunds."},"id":8982,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"5176:5:29","nodeType":"FunctionDefinition","parameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8966,"mutability":"mutable","name":"deque","nameLocation":"5203:5:29","nodeType":"VariableDeclaration","scope":8982,"src":"5182:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8965,"nodeType":"UserDefinedTypeName","pathNode":{"id":8964,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"5182:12:29"},"referencedDeclaration":8703,"src":"5182:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5181:28:29"},"returnParameters":{"id":8968,"nodeType":"ParameterList","parameters":[],"src":"5219:0:29"},"scope":9025,"src":"5167:109:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9007,"nodeType":"Block","src":"5428:287:29","statements":[{"id":9006,"nodeType":"UncheckedBlock","src":"5617:92:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8995,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"5663:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":8996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"5663:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":8994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5656:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8993,"name":"int256","nodeType":"ElementaryTypeName","src":"5656:6:29","typeDescriptions":{}}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5656:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"expression":{"id":9000,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"5684:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":9001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"5684:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":8999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5677:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8998,"name":"int256","nodeType":"ElementaryTypeName","src":"5677:6:29","typeDescriptions":{}}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5677:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5656:41:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5648:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8991,"name":"uint256","nodeType":"ElementaryTypeName","src":"5648:7:29","typeDescriptions":{}}},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5648:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8990,"id":9005,"nodeType":"Return","src":"5641:57:29"}]}]},"documentation":{"id":8983,"nodeType":"StructuredDocumentation","src":"5282:65:29","text":" @dev Returns the number of items in the queue."},"id":9008,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"5361:6:29","nodeType":"FunctionDefinition","parameters":{"id":8987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8986,"mutability":"mutable","name":"deque","nameLocation":"5389:5:29","nodeType":"VariableDeclaration","scope":9008,"src":"5368:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":8985,"nodeType":"UserDefinedTypeName","pathNode":{"id":8984,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"5368:12:29"},"referencedDeclaration":8703,"src":"5368:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5367:28:29"},"returnParameters":{"id":8990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9008,"src":"5419:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8988,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5418:9:29"},"scope":9025,"src":"5352:363:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9023,"nodeType":"Block","src":"5857:50:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9017,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"5874:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":9018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":8698,"src":"5874:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9019,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"5888:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":9020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":8696,"src":"5888:12:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"5874:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9016,"id":9022,"nodeType":"Return","src":"5867:33:29"}]},"documentation":{"id":9009,"nodeType":"StructuredDocumentation","src":"5721:59:29","text":" @dev Returns true if the queue is empty."},"id":9024,"implemented":true,"kind":"function","modifiers":[],"name":"empty","nameLocation":"5794:5:29","nodeType":"FunctionDefinition","parameters":{"id":9013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"mutability":"mutable","name":"deque","nameLocation":"5821:5:29","nodeType":"VariableDeclaration","scope":9024,"src":"5800:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":9011,"nodeType":"UserDefinedTypeName","pathNode":{"id":9010,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":8703,"src":"5800:12:29"},"referencedDeclaration":8703,"src":"5800:12:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$8703_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5799:28:29"},"returnParameters":{"id":9016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9024,"src":"5851:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9014,"name":"bool","nodeType":"ElementaryTypeName","src":"5851:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5850:6:29"},"scope":9025,"src":"5785:122:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":9026,"src":"843:5066:29","usedErrors":[8691,8694]}],"src":"117:5793:29"},"id":29},"contracts/SinDAO.sol":{"ast":{"absolutePath":"contracts/SinDAO.sol","exportedSymbols":{"AccessControl":[315],"Address":[3374],"Checkpoints":[4915],"Context":[4937],"Counters":[5011],"DoubleEndedQueue":[9025],"ECDSA":[5932],"EIP712":[6136],"ERC165":[6160],"Governor":[1800],"GovernorCountingSimple":[2365],"GovernorSettings":[2543],"GovernorVotes":[2640],"GovernorVotesQuorumFraction":[2855],"IAccessControl":[388],"IERC1155Receiver":[3026],"IERC165":[6172],"IERC5267":[2961],"IERC5805":[2970],"IERC6372":[2985],"IERC721Receiver":[3044],"IGovernor":[2139],"IVotes":[2933],"Math":[7038],"SafeCast":[8579],"ShortString":[5016],"ShortStrings":[5227],"SignedMath":[8684],"SinDAO":[9269],"StorageSlot":[5337],"Strings":[5566]},"id":9270,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9027,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:30"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"@openzeppelin/contracts/governance/Governor.sol","id":9028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":1801,"src":"57:57:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","id":9029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":2544,"src":"115:76:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","id":9030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":2366,"src":"192:82:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","id":9031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":2641,"src":"275:73:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","id":9032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":2856,"src":"349:87:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":9033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":316,"src":"437:58:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":9034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9270,"sourceUnit":5012,"src":"496:52:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9035,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"573:8:30"},"id":9036,"nodeType":"InheritanceSpecifier","src":"573:8:30"},{"baseName":{"id":9037,"name":"GovernorSettings","nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"587:16:30"},"id":9038,"nodeType":"InheritanceSpecifier","src":"587:16:30"},{"baseName":{"id":9039,"name":"GovernorCountingSimple","nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"609:22:30"},"id":9040,"nodeType":"InheritanceSpecifier","src":"609:22:30"},{"baseName":{"id":9041,"name":"GovernorVotes","nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"637:13:30"},"id":9042,"nodeType":"InheritanceSpecifier","src":"637:13:30"},{"baseName":{"id":9043,"name":"GovernorVotesQuorumFraction","nodeType":"IdentifierPath","referencedDeclaration":2855,"src":"656:27:30"},"id":9044,"nodeType":"InheritanceSpecifier","src":"656:27:30"},{"baseName":{"id":9045,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"689:13:30"},"id":9046,"nodeType":"InheritanceSpecifier","src":"689:13:30"}],"canonicalName":"SinDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9269,"linearizedBaseContracts":[9269,315,2855,2640,2365,2543,1800,3026,3044,2139,2985,6136,2961,6160,6172,388,4937],"name":"SinDAO","nameLocation":"559:6:30","nodeType":"ContractDefinition","nodes":[{"id":9050,"libraryName":{"id":9047,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":5011,"src":"715:8:30"},"nodeType":"UsingForDirective","src":"709:36:30","typeName":{"id":9049,"nodeType":"UserDefinedTypeName","pathNode":{"id":9048,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"728:16:30"},"referencedDeclaration":4943,"src":"728:16:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}}},{"canonicalName":"SinDAO.MonthlyPaymentStatusEnum","id":9055,"members":[{"id":9051,"name":"GENERATED","nameLocation":"790:9:30","nodeType":"EnumValue","src":"790:9:30"},{"id":9052,"name":"OPEN","nameLocation":"809:4:30","nodeType":"EnumValue","src":"809:4:30"},{"id":9053,"name":"PAYED","nameLocation":"823:5:30","nodeType":"EnumValue","src":"823:5:30"},{"id":9054,"name":"OWNED","nameLocation":"838:5:30","nodeType":"EnumValue","src":"838:5:30"}],"name":"MonthlyPaymentStatusEnum","nameLocation":"755:24:30","nodeType":"EnumDefinition","src":"750:99:30"},{"canonicalName":"SinDAO.SpaceStatusEnum","id":9060,"members":[{"id":9056,"name":"AVAILABLE","nameLocation":"885:9:30","nodeType":"EnumValue","src":"885:9:30"},{"id":9057,"name":"REFORMING","nameLocation":"904:9:30","nodeType":"EnumValue","src":"904:9:30"},{"id":9058,"name":"UNAVAILABLE","nameLocation":"923:11:30","nodeType":"EnumValue","src":"923:11:30"},{"id":9059,"name":"DESCONTINUED","nameLocation":"944:12:30","nodeType":"EnumValue","src":"944:12:30"}],"name":"SpaceStatusEnum","nameLocation":"859:15:30","nodeType":"EnumDefinition","src":"854:108:30"},{"constant":true,"functionSelector":"13119161","id":9065,"mutability":"constant","name":"USER_ROLE","nameLocation":"991:9:30","nodeType":"VariableDeclaration","scope":9269,"src":"967:58:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"555345525f524f4c45","id":9063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1013:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_14823911f2da1b49f045a0929a60b8c1f2a7fc8c06c7284ca3e8ab4e193a08c8","typeString":"literal_string \"USER_ROLE\""},"value":"USER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14823911f2da1b49f045a0929a60b8c1f2a7fc8c06c7284ca3e8ab4e193a08c8","typeString":"literal_string \"USER_ROLE\""}],"id":9062,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1003:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1003:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"033e6f4d","id":9070,"mutability":"constant","name":"CARETAKER_ROLE","nameLocation":"1055:14:30","nodeType":"VariableDeclaration","scope":9269,"src":"1031:68:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1031:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4341524554414b45525f524f4c45","id":9068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1082:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_53b89ac75efe2c37162cd6795f5bf8b9c749f1d0387576893c1d2d0c23a326f3","typeString":"literal_string \"CARETAKER_ROLE\""},"value":"CARETAKER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_53b89ac75efe2c37162cd6795f5bf8b9c749f1d0387576893c1d2d0c23a326f3","typeString":"literal_string \"CARETAKER_ROLE\""}],"id":9067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1072:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1072:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"797669c9","id":9075,"mutability":"constant","name":"MODERATOR_ROLE","nameLocation":"1129:14:30","nodeType":"VariableDeclaration","scope":9269,"src":"1105:68:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1105:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d4f44455241544f525f524f4c45","id":9073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1156:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f","typeString":"literal_string \"MODERATOR_ROLE\""},"value":"MODERATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f","typeString":"literal_string \"MODERATOR_ROLE\""}],"id":9072,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1146:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1146:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"SinDAO.User","id":9082,"members":[{"constant":false,"id":9077,"mutability":"mutable","name":"name","nameLocation":"1209:4:30","nodeType":"VariableDeclaration","scope":9082,"src":"1202:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9076,"name":"string","nodeType":"ElementaryTypeName","src":"1202:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9079,"mutability":"mutable","name":"active","nameLocation":"1228:6:30","nodeType":"VariableDeclaration","scope":9082,"src":"1223:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9078,"name":"bool","nodeType":"ElementaryTypeName","src":"1223:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9081,"mutability":"mutable","name":"canInteract","nameLocation":"1249:11:30","nodeType":"VariableDeclaration","scope":9082,"src":"1244:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9080,"name":"bool","nodeType":"ElementaryTypeName","src":"1244:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"User","nameLocation":"1187:4:30","nodeType":"StructDefinition","scope":9269,"src":"1180:140:30","visibility":"public"},{"canonicalName":"SinDAO.Sale","id":9089,"members":[{"constant":false,"id":9084,"mutability":"mutable","name":"description","nameLocation":"1355:11:30","nodeType":"VariableDeclaration","scope":9089,"src":"1348:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9083,"name":"string","nodeType":"ElementaryTypeName","src":"1348:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9086,"mutability":"mutable","name":"value","nameLocation":"1384:5:30","nodeType":"VariableDeclaration","scope":9089,"src":"1376:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9088,"mutability":"mutable","name":"referenceUrl","nameLocation":"1406:12:30","nodeType":"VariableDeclaration","scope":9089,"src":"1399:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9087,"name":"string","nodeType":"ElementaryTypeName","src":"1399:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Sale","nameLocation":"1333:4:30","nodeType":"StructDefinition","scope":9269,"src":"1326:99:30","visibility":"public"},{"canonicalName":"SinDAO.MoneyMovement","id":9098,"members":[{"constant":false,"id":9091,"mutability":"mutable","name":"description","nameLocation":"1469:11:30","nodeType":"VariableDeclaration","scope":9098,"src":"1462:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9090,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9093,"mutability":"mutable","name":"value","nameLocation":"1498:5:30","nodeType":"VariableDeclaration","scope":9098,"src":"1490:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9095,"mutability":"mutable","name":"payee","nameLocation":"1521:5:30","nodeType":"VariableDeclaration","scope":9098,"src":"1513:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9094,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9097,"mutability":"mutable","name":"receiver","nameLocation":"1544:8:30","nodeType":"VariableDeclaration","scope":9098,"src":"1536:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9096,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"MoneyMovement","nameLocation":"1438:13:30","nodeType":"StructDefinition","scope":9269,"src":"1431:128:30","visibility":"public"},{"canonicalName":"SinDAO.Reservation","id":9107,"members":[{"constant":false,"id":9100,"mutability":"mutable","name":"apartment","nameLocation":"1602:9:30","nodeType":"VariableDeclaration","scope":9107,"src":"1594:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9102,"mutability":"mutable","name":"spaceId","nameLocation":"1629:7:30","nodeType":"VariableDeclaration","scope":9107,"src":"1621:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9104,"mutability":"mutable","name":"date","nameLocation":"1651:4:30","nodeType":"VariableDeclaration","scope":9107,"src":"1646:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9103,"name":"uint","nodeType":"ElementaryTypeName","src":"1646:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9106,"mutability":"mutable","name":"value","nameLocation":"1673:5:30","nodeType":"VariableDeclaration","scope":9107,"src":"1665:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reservation","nameLocation":"1572:11:30","nodeType":"StructDefinition","scope":9269,"src":"1565:120:30","visibility":"public"},{"canonicalName":"SinDAO.Space","id":9121,"members":[{"constant":false,"id":9109,"mutability":"mutable","name":"name","nameLocation":"1721:4:30","nodeType":"VariableDeclaration","scope":9121,"src":"1714:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9108,"name":"string","nodeType":"ElementaryTypeName","src":"1714:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9111,"mutability":"mutable","name":"description","nameLocation":"1742:11:30","nodeType":"VariableDeclaration","scope":9121,"src":"1735:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9110,"name":"string","nodeType":"ElementaryTypeName","src":"1735:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9115,"mutability":"mutable","name":"reservations","nameLocation":"1777:12:30","nodeType":"VariableDeclaration","scope":9121,"src":"1763:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reservation_$9107_storage_$dyn_storage_ptr","typeString":"struct SinDAO.Reservation[]"},"typeName":{"baseType":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"Reservation","nodeType":"IdentifierPath","referencedDeclaration":9107,"src":"1763:11:30"},"referencedDeclaration":9107,"src":"1763:11:30","typeDescriptions":{"typeIdentifier":"t_struct$_Reservation_$9107_storage_ptr","typeString":"struct SinDAO.Reservation"}},"id":9114,"nodeType":"ArrayTypeName","src":"1763:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reservation_$9107_storage_$dyn_storage_ptr","typeString":"struct SinDAO.Reservation[]"}},"visibility":"internal"},{"constant":false,"id":9117,"mutability":"mutable","name":"reservationValue","nameLocation":"1807:16:30","nodeType":"VariableDeclaration","scope":9121,"src":"1799:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9120,"mutability":"mutable","name":"status","nameLocation":"1849:6:30","nodeType":"VariableDeclaration","scope":9121,"src":"1833:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SpaceStatusEnum_$9060","typeString":"enum SinDAO.SpaceStatusEnum"},"typeName":{"id":9119,"nodeType":"UserDefinedTypeName","pathNode":{"id":9118,"name":"SpaceStatusEnum","nodeType":"IdentifierPath","referencedDeclaration":9060,"src":"1833:15:30"},"referencedDeclaration":9060,"src":"1833:15:30","typeDescriptions":{"typeIdentifier":"t_enum$_SpaceStatusEnum_$9060","typeString":"enum SinDAO.SpaceStatusEnum"}},"visibility":"internal"}],"name":"Space","nameLocation":"1698:5:30","nodeType":"StructDefinition","scope":9269,"src":"1691:171:30","visibility":"public"},{"canonicalName":"SinDAO.MonthlyPayment","id":9131,"members":[{"constant":false,"id":9125,"mutability":"mutable","name":"bills","nameLocation":"1916:5:30","nodeType":"VariableDeclaration","scope":9131,"src":"1900:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage_ptr","typeString":"struct SinDAO.MoneyMovement[]"},"typeName":{"baseType":{"id":9123,"nodeType":"UserDefinedTypeName","pathNode":{"id":9122,"name":"MoneyMovement","nodeType":"IdentifierPath","referencedDeclaration":9098,"src":"1900:13:30"},"referencedDeclaration":9098,"src":"1900:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_MoneyMovement_$9098_storage_ptr","typeString":"struct SinDAO.MoneyMovement"}},"id":9124,"nodeType":"ArrayTypeName","src":"1900:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage_ptr","typeString":"struct SinDAO.MoneyMovement[]"}},"visibility":"internal"},{"constant":false,"id":9128,"mutability":"mutable","name":"status","nameLocation":"1956:6:30","nodeType":"VariableDeclaration","scope":9131,"src":"1931:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MonthlyPaymentStatusEnum_$9055","typeString":"enum SinDAO.MonthlyPaymentStatusEnum"},"typeName":{"id":9127,"nodeType":"UserDefinedTypeName","pathNode":{"id":9126,"name":"MonthlyPaymentStatusEnum","nodeType":"IdentifierPath","referencedDeclaration":9055,"src":"1931:24:30"},"referencedDeclaration":9055,"src":"1931:24:30","typeDescriptions":{"typeIdentifier":"t_enum$_MonthlyPaymentStatusEnum_$9055","typeString":"enum SinDAO.MonthlyPaymentStatusEnum"}},"visibility":"internal"},{"constant":false,"id":9130,"mutability":"mutable","name":"payee","nameLocation":"1980:5:30","nodeType":"VariableDeclaration","scope":9131,"src":"1972:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9129,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"MonthlyPayment","nameLocation":"1875:14:30","nodeType":"StructDefinition","scope":9269,"src":"1868:124:30","visibility":"public"},{"constant":false,"functionSelector":"28bdcde8","id":9135,"mutability":"mutable","name":"bills","nameLocation":"2021:5:30","nodeType":"VariableDeclaration","scope":9269,"src":"1998:28:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage","typeString":"struct SinDAO.MoneyMovement[]"},"typeName":{"baseType":{"id":9133,"nodeType":"UserDefinedTypeName","pathNode":{"id":9132,"name":"MoneyMovement","nodeType":"IdentifierPath","referencedDeclaration":9098,"src":"1998:13:30"},"referencedDeclaration":9098,"src":"1998:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_MoneyMovement_$9098_storage_ptr","typeString":"struct SinDAO.MoneyMovement"}},"id":9134,"nodeType":"ArrayTypeName","src":"1998:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage_ptr","typeString":"struct SinDAO.MoneyMovement[]"}},"visibility":"public"},{"constant":false,"functionSelector":"a71e9a9c","id":9139,"mutability":"mutable","name":"archivedBills","nameLocation":"2055:13:30","nodeType":"VariableDeclaration","scope":9269,"src":"2032:36:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage","typeString":"struct SinDAO.MoneyMovement[]"},"typeName":{"baseType":{"id":9137,"nodeType":"UserDefinedTypeName","pathNode":{"id":9136,"name":"MoneyMovement","nodeType":"IdentifierPath","referencedDeclaration":9098,"src":"2032:13:30"},"referencedDeclaration":9098,"src":"2032:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_MoneyMovement_$9098_storage_ptr","typeString":"struct SinDAO.MoneyMovement"}},"id":9138,"nodeType":"ArrayTypeName","src":"2032:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MoneyMovement_$9098_storage_$dyn_storage_ptr","typeString":"struct SinDAO.MoneyMovement[]"}},"visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":9144,"mutability":"mutable","name":"users","nameLocation":"2106:5:30","nodeType":"VariableDeclaration","scope":9269,"src":"2074:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$9082_storage_$","typeString":"mapping(address => struct SinDAO.User)"},"typeName":{"id":9143,"keyType":{"id":9140,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2074:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$9082_storage_$","typeString":"mapping(address => struct SinDAO.User)"},"valueType":{"id":9142,"nodeType":"UserDefinedTypeName","pathNode":{"id":9141,"name":"User","nodeType":"IdentifierPath","referencedDeclaration":9082,"src":"2093:4:30"},"referencedDeclaration":9082,"src":"2093:4:30","typeDescriptions":{"typeIdentifier":"t_struct$_User_$9082_storage_ptr","typeString":"struct SinDAO.User"}}},"visibility":"public"},{"constant":false,"id":9147,"mutability":"mutable","name":"_spaceIdCounter","nameLocation":"2142:15:30","nodeType":"VariableDeclaration","scope":9269,"src":"2117:40:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage","typeString":"struct Counters.Counter"},"typeName":{"id":9146,"nodeType":"UserDefinedTypeName","pathNode":{"id":9145,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"2117:16:30"},"referencedDeclaration":4943,"src":"2117:16:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$4943_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"7586353b","id":9152,"mutability":"mutable","name":"spaces","nameLocation":"2196:6:30","nodeType":"VariableDeclaration","scope":9269,"src":"2163:39:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Space_$9121_storage_$","typeString":"mapping(uint256 => struct SinDAO.Space)"},"typeName":{"id":9151,"keyType":{"id":9148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2163:25:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Space_$9121_storage_$","typeString":"mapping(uint256 => struct SinDAO.Space)"},"valueType":{"id":9150,"nodeType":"UserDefinedTypeName","pathNode":{"id":9149,"name":"Space","nodeType":"IdentifierPath","referencedDeclaration":9121,"src":"2182:5:30"},"referencedDeclaration":9121,"src":"2182:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Space_$9121_storage_ptr","typeString":"struct SinDAO.Space"}}},"visibility":"public"},{"constant":false,"functionSelector":"3ef4cc8b","id":9159,"mutability":"mutable","name":"apartamentToDateToMonthlyPayments","nameLocation":"2275:33:30","nodeType":"VariableDeclaration","scope":9269,"src":"2208:100:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct SinDAO.MonthlyPayment))"},"typeName":{"id":9158,"keyType":{"id":9153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2216:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2208:51:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct SinDAO.MonthlyPayment))"},"valueType":{"id":9157,"keyType":{"id":9154,"name":"uint","nodeType":"ElementaryTypeName","src":"2235:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2227:31:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$","typeString":"mapping(uint256 => struct SinDAO.MonthlyPayment)"},"valueType":{"id":9156,"nodeType":"UserDefinedTypeName","pathNode":{"id":9155,"name":"MonthlyPayment","nodeType":"IdentifierPath","referencedDeclaration":9131,"src":"2243:14:30"},"referencedDeclaration":9131,"src":"2243:14:30","typeDescriptions":{"typeIdentifier":"t_struct$_MonthlyPayment_$9131_storage_ptr","typeString":"struct SinDAO.MonthlyPayment"}}}},"visibility":"public"},{"constant":false,"functionSelector":"40dd07b9","id":9166,"mutability":"mutable","name":"dateToApartamentToMonthlyPayments","nameLocation":"2381:33:30","nodeType":"VariableDeclaration","scope":9269,"src":"2314:100:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct SinDAO.MonthlyPayment))"},"typeName":{"id":9165,"keyType":{"id":9160,"name":"uint","nodeType":"ElementaryTypeName","src":"2322:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2314:51:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct SinDAO.MonthlyPayment))"},"valueType":{"id":9164,"keyType":{"id":9161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2330:34:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MonthlyPayment_$9131_storage_$","typeString":"mapping(uint256 => struct SinDAO.MonthlyPayment)"},"valueType":{"id":9163,"nodeType":"UserDefinedTypeName","pathNode":{"id":9162,"name":"MonthlyPayment","nodeType":"IdentifierPath","referencedDeclaration":9131,"src":"2349:14:30"},"referencedDeclaration":9131,"src":"2349:14:30","typeDescriptions":{"typeIdentifier":"t_struct$_MonthlyPayment_$9131_storage_ptr","typeString":"struct SinDAO.MonthlyPayment"}}}},"visibility":"public"},{"constant":false,"id":9168,"mutability":"mutable","name":"_stableCoinAddress","nameLocation":"2436:18:30","nodeType":"VariableDeclaration","scope":9269,"src":"2420:34:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9167,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":9170,"mutability":"mutable","name":"_pollingTokenAddress","nameLocation":"2476:20:30","nodeType":"VariableDeclaration","scope":9269,"src":"2460:36:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9169,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":9196,"nodeType":"Block","src":"2680:59:30","statements":[{"expression":{"arguments":[{"id":9191,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2701:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2721:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2721:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9190,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2690:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2690:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9195,"nodeType":"ExpressionStatement","src":"2690:42:30"}]},"id":9197,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"53696e44414f","id":9176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2543:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3cb995445cc17fcf69072b205cc218d0546e67f45979272f02c78cd5db87c0a","typeString":"literal_string \"SinDAO\""},"value":"SinDAO"}],"id":9177,"kind":"baseConstructorSpecifier","modifierName":{"id":9175,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"2534:8:30"},"nodeType":"ModifierInvocation","src":"2534:18:30"},{"arguments":[{"hexValue":"37323030","id":9179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2574:4:30","typeDescriptions":{"typeIdentifier":"t_rational_7200_by_1","typeString":"int_const 7200"},"value":"7200"},{"hexValue":"3530343030","id":9180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2592:5:30","typeDescriptions":{"typeIdentifier":"t_rational_50400_by_1","typeString":"int_const 50400"},"value":"50400"},{"hexValue":"30","id":9181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2612:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9182,"kind":"baseConstructorSpecifier","modifierName":{"id":9178,"name":"GovernorSettings","nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"2557:16:30"},"nodeType":"ModifierInvocation","src":"2557:57:30"},{"arguments":[{"id":9184,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"2633:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"}}],"id":9185,"kind":"baseConstructorSpecifier","modifierName":{"id":9183,"name":"GovernorVotes","nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"2619:13:30"},"nodeType":"ModifierInvocation","src":"2619:21:30"},{"arguments":[{"hexValue":"34","id":9187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"id":9188,"kind":"baseConstructorSpecifier","modifierName":{"id":9186,"name":"GovernorVotesQuorumFraction","nodeType":"IdentifierPath","referencedDeclaration":2855,"src":"2645:27:30"},"nodeType":"ModifierInvocation","src":"2645:30:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9173,"mutability":"mutable","name":"_token","nameLocation":"2522:6:30","nodeType":"VariableDeclaration","scope":9197,"src":"2515:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"},"typeName":{"id":9172,"nodeType":"UserDefinedTypeName","pathNode":{"id":9171,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":2933,"src":"2515:6:30"},"referencedDeclaration":2933,"src":"2515:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2933","typeString":"contract IVotes"}},"visibility":"internal"}],"src":"2514:15:30"},"returnParameters":{"id":9189,"nodeType":"ParameterList","parameters":[],"src":"2680:0:30"},"scope":9269,"src":"2503:236:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1969,2428],"body":{"id":9209,"nodeType":"Block","src":"2945:43:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9205,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2962:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SinDAO_$9269_$","typeString":"type(contract super SinDAO)"}},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"votingDelay","nodeType":"MemberAccess","referencedDeclaration":2428,"src":"2962:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9204,"id":9208,"nodeType":"Return","src":"2955:26:30"}]},"functionSelector":"3932abb1","id":9210,"implemented":true,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"2827:11:30","nodeType":"FunctionDefinition","overrides":{"id":9201,"nodeType":"OverrideSpecifier","overrides":[{"id":9199,"name":"IGovernor","nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"2886:9:30"},{"id":9200,"name":"GovernorSettings","nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"2897:16:30"}],"src":"2877:37:30"},"parameters":{"id":9198,"nodeType":"ParameterList","parameters":[],"src":"2838:2:30"},"returnParameters":{"id":9204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9210,"src":"2932:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2932:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2931:9:30"},"scope":9269,"src":"2818:170:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1975,2438],"body":{"id":9222,"nodeType":"Block","src":"3122:44:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9218,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3139:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SinDAO_$9269_$","typeString":"type(contract super SinDAO)"}},"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"votingPeriod","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"3139:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9217,"id":9221,"nodeType":"Return","src":"3132:27:30"}]},"functionSelector":"02a251a3","id":9223,"implemented":true,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"3003:12:30","nodeType":"FunctionDefinition","overrides":{"id":9214,"nodeType":"OverrideSpecifier","overrides":[{"id":9212,"name":"IGovernor","nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"3063:9:30"},{"id":9213,"name":"GovernorSettings","nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"3074:16:30"}],"src":"3054:37:30"},"parameters":{"id":9211,"nodeType":"ParameterList","parameters":[],"src":"3015:2:30"},"returnParameters":{"id":9217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9223,"src":"3109:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3108:9:30"},"scope":9269,"src":"2994:172:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1983,2776],"body":{"id":9238,"nodeType":"Block","src":"3338:49:30","statements":[{"expression":{"arguments":[{"id":9235,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"3368:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9233,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3355:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SinDAO_$9269_$","typeString":"type(contract super SinDAO)"}},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"quorum","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"3355:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3355:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9232,"id":9237,"nodeType":"Return","src":"3348:32:30"}]},"functionSelector":"f8ce560a","id":9239,"implemented":true,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"3181:6:30","nodeType":"FunctionDefinition","overrides":{"id":9229,"nodeType":"OverrideSpecifier","overrides":[{"id":9227,"name":"IGovernor","nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"3268:9:30"},{"id":9228,"name":"GovernorVotesQuorumFraction","nodeType":"IdentifierPath","referencedDeclaration":2855,"src":"3279:27:30"}],"src":"3259:48:30"},"parameters":{"id":9226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9225,"mutability":"mutable","name":"blockNumber","nameLocation":"3205:11:30","nodeType":"VariableDeclaration","scope":9239,"src":"3197:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3197:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3187:35:30"},"returnParameters":{"id":9232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9239,"src":"3325:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3324:9:30"},"scope":9269,"src":"3172:215:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[763,2448],"body":{"id":9251,"nodeType":"Block","src":"3525:49:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9247,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3542:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SinDAO_$9269_$","typeString":"type(contract super SinDAO)"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proposalThreshold","nodeType":"MemberAccess","referencedDeclaration":2448,"src":"3542:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3542:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9246,"id":9250,"nodeType":"Return","src":"3535:32:30"}]},"functionSelector":"b58131b0","id":9252,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"3402:17:30","nodeType":"FunctionDefinition","overrides":{"id":9243,"nodeType":"OverrideSpecifier","overrides":[{"id":9241,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"3467:8:30"},{"id":9242,"name":"GovernorSettings","nodeType":"IdentifierPath","referencedDeclaration":2543,"src":"3477:16:30"}],"src":"3458:36:30"},"parameters":{"id":9240,"nodeType":"ParameterList","parameters":[],"src":"3419:2:30"},"returnParameters":{"id":9246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9252,"src":"3512:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3512:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3511:9:30"},"scope":9269,"src":"3393:181:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[60,612],"body":{"id":9267,"nodeType":"Block","src":"3702:60:30","statements":[{"expression":{"arguments":[{"id":9264,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"3743:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9262,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3719:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SinDAO_$9269_$","typeString":"type(contract super SinDAO)"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"3719:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3719:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9261,"id":9266,"nodeType":"Return","src":"3712:43:30"}]},"functionSelector":"01ffc9a7","id":9268,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3589:17:30","nodeType":"FunctionDefinition","overrides":{"id":9258,"nodeType":"OverrideSpecifier","overrides":[{"id":9256,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3662:13:30"},{"id":9257,"name":"Governor","nodeType":"IdentifierPath","referencedDeclaration":1800,"src":"3677:8:30"}],"src":"3653:33:30"},"parameters":{"id":9255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9254,"mutability":"mutable","name":"interfaceId","nameLocation":"3623:11:30","nodeType":"VariableDeclaration","scope":9268,"src":"3616:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9253,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3616:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3606:34:30"},"returnParameters":{"id":9261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9268,"src":"3696:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9259,"name":"bool","nodeType":"ElementaryTypeName","src":"3696:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3695:6:30"},"scope":9269,"src":"3580:182:30","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9270,"src":"550:3214:30","usedErrors":[5024,5026,8691]}],"src":"32:3732:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/Governor.sol":{"Governor":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Core of the governance system, designed to be extended though various modules. This contract is abstract and requires several functions to be implemented in various modules: - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote} - A voting module must implement {_getVotes} - Additionally, {votingPeriod} must also be implemented _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"See EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"See {IERC6372}\"},\"constructor\":{\"details\":\"Sets the value for {name} and {version}\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"stateVariables\":{\"_proposals\":{\"custom:oz-retyped-from\":\"mapping(uint256 => Governor.ProposalCore)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLOCK_MODE()\":{\"notice\":\"module:core\"},\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"clock()\":{\"notice\":\"module:core\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/Governor.sol\":\"Governor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/IGovernor.sol":{"IGovernor":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the {Governor} core. _Available since v4.3._\",\"events\":{\"ProposalCanceled(uint256)\":{\"details\":\"Emitted when a proposal is canceled.\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"details\":\"Emitted when a proposal is executed.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast without params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\"},\"VoteCastWithParams(address,uint256,uint8,uint256,string,bytes)\":{\"details\":\"Emitted when a vote is cast with params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used. `params` are additional encoded parameters. Their interpepretation also depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"See EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Cancel a proposal. A proposal is cancellable by the proposer, but only while it is Pending state, i.e. before the vote starts. Emits a {ProposalCanceled} event.\"},\"castVote(uint256,uint8)\":{\"details\":\"Cast a vote Emits a {VoteCast} event.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"Cast a vote using the user's cryptographic signature. Emits a {VoteCast} event.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"Cast a vote with a reason Emits a {VoteCast} event.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"Cast a vote with a reason and additional encoded parameters Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature. Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\"},\"clock()\":{\"details\":\"See {IERC6372}\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the deadline to be reached. Emits a {ProposalExecuted} event. Note: some module can modify the requirements for execution, for example by adding an additional timelock.\"},\"getVotes(address,uint256)\":{\"details\":\"Voting power of an `account` at a specific `timepoint`. Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or multiple), {ERC20Votes} tokens.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"Voting power of an `account` at a specific `timepoint` given additional encoded parameters.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Hashing function used to (re)build the proposal id from the proposal details..\"},\"name()\":{\"details\":\"Name of the governor instance (used in building the ERC712 domain separator).\"},\"proposalDeadline(uint256)\":{\"details\":\"Timepoint at which votes close. If using block number, votes close at the end of this block, so it is possible to cast a vote during this block.\"},\"proposalProposer(uint256)\":{\"details\":\"The account that created a proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"Timepoint used to retrieve user's votes and quorum. If using block number (as per Compound's Comp), the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the beginning of the following block.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"Create a new proposal. Vote start after a delay specified by {IGovernor-votingDelay} and lasts for a duration specified by {IGovernor-votingPeriod}. Emits a {ProposalCreated} event.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"state(uint256)\":{\"details\":\"Current state of a proposal, following Compound's convention\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"version()\":{\"details\":\"Version of the governor instance (used in building the ERC712 domain separator). Default: \\\"1\\\"\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLOCK_MODE()\":{\"notice\":\"module:core\"},\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"clock()\":{\"notice\":\"module:core\"},\"getVotes(address,uint256)\":{\"notice\":\"module:reputation\"},\"getVotesWithParams(address,uint256,bytes)\":{\"notice\":\"module:reputation\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"notice\":\"module:core\"},\"name()\":{\"notice\":\"module:core\"},\"proposalDeadline(uint256)\":{\"notice\":\"module:core\"},\"proposalProposer(uint256)\":{\"notice\":\"module:core\"},\"proposalSnapshot(uint256)\":{\"notice\":\"module:core\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"state(uint256)\":{\"notice\":\"module:core\"},\"version()\":{\"notice\":\"module:core\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/IGovernor.sol\":\"IGovernor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"GovernorCountingSimple":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalVotes","outputs":[{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"abstainVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","proposalVotes(uint256)":"544ffc9c","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for simple, 3 options, vote counting. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"See EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"See {IERC6372}\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLOCK_MODE()\":{\"notice\":\"module:core\"},\"clock()\":{\"notice\":\"module:core\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":\"GovernorCountingSimple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x42f5e97a7010e44b312beeadbf5e5e183bc8a08f8953ee9e270b69f16249a632\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57667020ad6ab50f89b1cd6865644f34532d0d617abf4ea292c393c8a0d9b3d6\",\"dweb:/ipfs/QmV2eENAmJfmAKSKjUMtGEscYTB2L5giUxVeA9fNeXmgQC\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"GovernorSettings":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldProposalThreshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"ProposalThresholdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingDelay","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"VotingDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"VotingPeriodSet","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"setProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"setVotingDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","setProposalThreshold(uint256)":"ece40cc1","setVotingDelay(uint256)":"70b0f660","setVotingPeriod(uint256)":"ea0217cf","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for settings updatable through governance. _Available since v4.4._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"See EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"See {IERC6372}\"},\"constructor\":{\"details\":\"Initialize the governance parameters.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"See {Governor-proposalThreshold}.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"setProposalThreshold(uint256)\":{\"details\":\"Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.\"},\"setVotingDelay(uint256)\":{\"details\":\"Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.\"},\"setVotingPeriod(uint256)\":{\"details\":\"Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"See {IGovernor-votingDelay}.\"},\"votingPeriod()\":{\"details\":\"See {IGovernor-votingPeriod}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLOCK_MODE()\":{\"notice\":\"module:core\"},\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"clock()\":{\"notice\":\"module:core\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":\"GovernorSettings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0x75ee4199a73c91478c00b6ce5eba3d2c36f965db01bd3462c6e3e47785b4cab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8f2a61669d7796054d0f7751f6a48a188f96ae571770982a4bdc39a941dd013\",\"dweb:/ipfs/QmfFNfdnKjkDJNQGKm6FTXbap3bTuLRfGExQXE5S6BnMvy\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"GovernorVotes":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC5805","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC5805\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token does not implement EIP-6372.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. NOTE: The `timepoint` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this timepoint (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":\"GovernorVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0x0272a2c5aff31e5f2398369598c2694eee19986f3b1c43a578b4252555ba2a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df8bca39a5ba89bfd8becbc09dc5f66dc2bde7c0a3722d6c7452f1395609fac9\",\"dweb:/ipfs/QmXqwvZWPLTAS7LrPJS7LBAywc3JWoLGhah1eSM4JvqzFW\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"GovernorVotesQuorumFraction":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuorumNumerator","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"QuorumNumeratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC5805","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"updateQuorumNumerator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","quorumDenominator()":"97c3d334","quorumNumerator()":"a7713a70","quorumNumerator(uint256)":"60c4247f","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","updateQuorumNumerator(uint256)":"06f3f9e6","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC5805\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a fraction of the total supply. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token does not implement EIP-6372.\"},\"constructor\":{\"details\":\"Initialize quorum as a fraction of the token's total supply. The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be customized by overriding {quorumDenominator}.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Returns the quorum for a timepoint, in terms of number of votes: `supply * numerator / denominator`.\"},\"quorumDenominator()\":{\"details\":\"Returns the quorum denominator. Defaults to 100, but may be overridden.\"},\"quorumNumerator()\":{\"details\":\"Returns the current quorum numerator. See {quorumDenominator}.\"},\"quorumNumerator(uint256)\":{\"details\":\"Returns the quorum numerator at a specific timepoint. See {quorumDenominator}.\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateQuorumNumerator(uint256)\":{\"details\":\"Changes the quorum numerator. Emits a {QuorumNumeratorUpdated} event. Requirements: - Must be called through a governance proposal. - New numerator must be smaller or equal to the denominator.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, between the proposal is created and the vote starts. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. This can be increased to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay between the vote start and vote end. The unit this duration is expressed in depends on the clock (see EIP-6372) this contract uses. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"stateVariables\":{\"_quorumNumeratorHistory\":{\"custom:oz-retyped-from\":\"Checkpoints.History\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":\"GovernorVotesQuorumFraction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0x0272a2c5aff31e5f2398369598c2694eee19986f3b1c43a578b4252555ba2a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df8bca39a5ba89bfd8becbc09dc5f66dc2bde7c0a3722d6c7452f1395609fac9\",\"dweb:/ipfs/QmXqwvZWPLTAS7LrPJS7LBAywc3JWoLGhah1eSM4JvqzFW\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x806f81d08cf596c55f544d1d7b09fb2636e9fb7f2625020a301b288379635252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ae93259b78896d323ebbf520e8c59384c7a48a9f279272bd7ff40b4966b0aa3\",\"dweb:/ipfs/QmSJQVjYnoFYM4Go8URnzjfkYkPwBTrbiyQRwUTQAApsBK\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e8f3bb4623866d8ea1a344b18c70db526ed54a476c073b76e7edf06cd4206ce64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DUP16 EXTCODESIZE 0xB4 PUSH3 0x3866D8 0xEA BYTE CALLVALUE 0x4B XOR 0xC7 0xD 0xB5 0x26 0xED SLOAD LOG4 PUSH23 0xC073B76E7EDF06CD4206CE64736F6C6343000809003300 ","sourceMap":"194:9169:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e8f3bb4623866d8ea1a344b18c70db526ed54a476c073b76e7edf06cd4206ce64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 DUP16 EXTCODESIZE 0xB4 PUSH3 0x3866D8 0xEA BYTE CALLVALUE 0x4B XOR 0xC7 0xD 0xB5 0x26 0xED SLOAD LOG4 PUSH23 0xC073B76E7EDF06CD4206CE64736F6C6343000809003300 ","sourceMap":"194:9169:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Checkpoints.sol":{"Checkpoints":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1d1d54173f2103cf29592da1f3c2433f3aa8dcc06b6683fd530a7b04c5a7cdc64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD1 0xD5 COINBASE PUSH20 0xF2103CF29592DA1F3C2433F3AA8DCC06B6683FD5 ADDRESS 0xA7 0xB0 0x4C GAS PUSH29 0xDC64736F6C634300080900330000000000000000000000000000000000 ","sourceMap":"708:19732:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;708:19732:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1d1d54173f2103cf29592da1f3c2433f3aa8dcc06b6683fd530a7b04c5a7cdc64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD1 0xD5 COINBASE PUSH20 0xF2103CF29592DA1F3C2433F3AA8DCC06B6683FD5 ADDRESS 0xA7 0xB0 0x4C GAS PUSH29 0xDC64736F6C634300080900330000000000000000000000000000000000 ","sourceMap":"708:19732:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220933bc6304dbcd880d97963c87168b2dd2f1316baa9b071ecea11ffb974a71cb964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EXTCODESIZE 0xC6 ADDRESS 0x4D 0xBC 0xD8 DUP1 0xD9 PUSH26 0x63C87168B2DD2F1316BAA9B071ECEA11FFB974A71CB964736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"424:971:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220933bc6304dbcd880d97963c87168b2dd2f1316baa9b071ecea11ffb974a71cb964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EXTCODESIZE 0xC6 ADDRESS 0x4D 0xBC 0xD8 DUP1 0xD9 PUSH26 0x63C87168B2DD2F1316BAA9B071ECEA11FFB974A71CB964736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"424:971:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031a2a2bf0d3be9da31e58684077b6b7b9c3ff0fe5c3a381e9495b75873ad353c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE LOG2 LOG2 0xBF 0xD EXTCODESIZE 0xE9 0xDA BALANCE 0xE5 DUP7 DUP5 SMOD PUSH28 0x6B7B9C3FF0FE5C3A381E9495B75873AD353C64736F6C634300080900 CALLER ","sourceMap":"1235:3050:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031a2a2bf0d3be9da31e58684077b6b7b9c3ff0fe5c3a381e9495b75873ad353c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE LOG2 LOG2 0xBF 0xD EXTCODESIZE 0xE9 0xDA BALANCE 0xE5 DUP7 DUP5 SMOD PUSH28 0x6B7B9C3FF0FE5C3A381E9495B75873AD353C64736F6C634300080900 CALLER ","sourceMap":"1235:3050:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031e6847e0e002f5ce60d75d3395e3fae8a8f22d53221fe764ad289904c04855864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xE6 DUP5 PUSH31 0xE002F5CE60D75D3395E3FAE8A8F22D53221FE764AD289904C04855864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"1420:2685:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031e6847e0e002f5ce60d75d3395e3fae8a8f22d53221fe764ad289904c04855864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xE6 DUP5 PUSH31 0xE002F5CE60D75D3395E3FAE8A8F22D53221FE764AD289904C04855864736F PUSH13 0x63430008090033000000000000 ","sourceMap":"1420:2685:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e6fa0dcc6f7f00f4ca97db1028b38963a61e59b36485cfd5efa969a8e0204ba64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH16 0xA0DCC6F7F00F4CA97DB1028B38963A61 0xE5 SWAP12 CALLDATASIZE BASEFEE 0x5C REVERT 0x5E STATICCALL SWAP7 SWAP11 DUP15 MUL DIV 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e6fa0dcc6f7f00f4ca97db1028b38963a61e59b36485cfd5efa969a8e0204ba64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH16 0xA0DCC6F7F00F4CA97DB1028B38963A61 0xE5 SWAP12 CALLDATASIZE BASEFEE 0x5C REVERT 0x5E STATICCALL SWAP7 SWAP11 DUP15 MUL DIV 0xBA PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf87389ba7d3daa8ccf52dd579abc769c0feb85a8fb219e2febb90129f6763a564736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP8 CODESIZE SWAP12 0xA7 0xD3 0xDA 0xA8 0xCC CREATE2 0x2D 0xD5 PUSH26 0xABC769C0FEB85A8FB219E2FEBB90129F6763A564736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8761:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf87389ba7d3daa8ccf52dd579abc769c0feb85a8fb219e2febb90129f6763a564736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP8 CODESIZE SWAP12 0xA7 0xD3 0xDA 0xA8 0xCC CREATE2 0x2D 0xD5 PUSH26 0xABC769C0FEB85A8FB219E2FEBB90129F6763A564736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8761:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f676667b9e656d6d9b5d57fbb63ee7ec7a989b281a5e2f74817294c0fc9a8fb64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x676667B9E656D6D9B5D57FBB63EE7EC7A989B281A5E2F74817294C0FC9A8FB64 PUSH20 0x6F6C634300080900330000000000000000000000 ","sourceMap":"202:12582:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f676667b9e656d6d9b5d57fbb63ee7ec7a989b281a5e2f74817294c0fc9a8fb64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x676667B9E656D6D9B5D57FBB63EE7EC7A989B281A5E2F74817294C0FC9A8FB64 PUSH20 0x6F6C634300080900330000000000000000000000 ","sourceMap":"202:12582:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f302c0f6193154e11147b0261aeb489ccde768b88472a793ef57a08d3f4e3a4a64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN MUL 0xC0 0xF6 NOT BALANCE SLOAD 0xE1 GT SELFBALANCE 0xB0 0x26 BYTE 0xEB BASEFEE SWAP13 0xCD 0xE7 PUSH9 0xB88472A793EF57A08D EXTCODEHASH 0x4E GASPRICE 0x4A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;927:34153:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f302c0f6193154e11147b0261aeb489ccde768b88472a793ef57a08d3f4e3a4a64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN MUL 0xC0 0xF6 NOT BALANCE SLOAD 0xE1 GT SELFBALANCE 0xB0 0x26 BYTE 0xEB BASEFEE SWAP13 0xCD 0xE7 PUSH9 0xB88472A793EF57A08D EXTCODEHASH 0x4E GASPRICE 0x4A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c53dd2f80eb959fdb479abf4f11d7eecb1dbff8219c04807541d738ad57407c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 MSTORE8 0xDD 0x2F DUP1 0xEB SWAP6 SWAP16 0xDB SELFBALANCE SWAP11 0xBF 0x4F GT 0xD7 0xEE 0xCB SAR 0xBF 0xF8 0x21 SWAP13 DIV DUP1 PUSH22 0x41D738AD57407C64736F6C6343000809003300000000 ","sourceMap":"215:1047:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c53dd2f80eb959fdb479abf4f11d7eecb1dbff8219c04807541d738ad57407c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 MSTORE8 0xDD 0x2F DUP1 0xEB SWAP6 SWAP16 0xDB SELFBALANCE SWAP11 0xBF 0x4F GT 0xD7 0xEE 0xCB SAR 0xBF 0xF8 0x21 SWAP13 DIV DUP1 PUSH22 0x41D738AD57407C64736F6C6343000809003300000000 ","sourceMap":"215:1047:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"DoubleEndedQueue":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"OutOfBounds","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7268fbeabd5d66b5ec29ac12cd1b307118e2ca9cc183c2ae776932970ab210d64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x26 DUP16 0xBE 0xAB 0xD5 0xD6 PUSH12 0x5EC29AC12CD1B307118E2CA9 0xCC XOR EXTCODECOPY 0x2A 0xE7 PUSH23 0x932970AB210D64736F6C63430008090033000000000000 ","sourceMap":"843:5066:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;843:5066:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7268fbeabd5d66b5ec29ac12cd1b307118e2ca9cc183c2ae776932970ab210d64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x26 DUP16 0xBE 0xAB 0xD5 0xD6 PUSH12 0x5EC29AC12CD1B307118E2CA9 0xCC XOR EXTCODECOPY 0x2A 0xE7 PUSH23 0x932970AB210D64736F6C63430008090033000000000000 ","sourceMap":"843:5066:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that the existing queue contents are left in storage. The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be used in storage, and not in memory. ```solidity DoubleEndedQueue.Bytes32Deque queue; ``` _Available since v4.6._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":\"DoubleEndedQueue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]}},\"version\":1}"}},"contracts/SinDAO.sol":{"SinDAO":{"abi":[{"inputs":[{"internalType":"contract IVotes","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"voteStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"voteEnd","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldProposalThreshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"ProposalThresholdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuorumNumerator","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"QuorumNumeratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingDelay","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"VotingDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"VotingPeriodSet","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CARETAKER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"apartamentToDateToMonthlyPayments","outputs":[{"internalType":"enum SinDAO.MonthlyPaymentStatusEnum","name":"status","type":"uint8"},{"internalType":"address","name":"payee","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"archivedBills","outputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"address","name":"payee","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bills","outputs":[{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"address","name":"payee","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"cancel","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"dateToApartamentToMonthlyPayments","outputs":[{"internalType":"enum SinDAO.MonthlyPaymentStatusEnum","name":"status","type":"uint8"},{"internalType":"address","name":"payee","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalVotes","outputs":[{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"abstainVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"setProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"setVotingDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"spaces","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"reservationValue","type":"uint256"},{"internalType":"enum SinDAO.SpaceStatusEnum","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC5805","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"updateQuorumNumerator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"canInteract","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2418":{"entryPoint":null,"id":2418,"parameterSlots":3,"returnSlots":0},"@_2569":{"entryPoint":null,"id":2569,"parameterSlots":1,"returnSlots":0},"@_2675":{"entryPoint":null,"id":2675,"parameterSlots":1,"returnSlots":0},"@_506":{"entryPoint":null,"id":506,"parameterSlots":1,"returnSlots":0},"@_6025":{"entryPoint":null,"id":6025,"parameterSlots":2,"returnSlots":0},"@_9197":{"entryPoint":null,"id":9197,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_6072":{"entryPoint":null,"id":6072,"parameterSlots":0,"returnSlots":1},"@_grantRole_283":{"entryPoint":1269,"id":283,"parameterSlots":2,"returnSlots":0},"@_insert_4293":{"entryPoint":2134,"id":4293,"parameterSlots":3,"returnSlots":2},"@_msgSender_4927":{"entryPoint":null,"id":4927,"parameterSlots":0,"returnSlots":1},"@_setProposalThreshold_2542":{"entryPoint":767,"id":2542,"parameterSlots":1,"returnSlots":0},"@_setVotingDelay_2503":{"entryPoint":535,"id":2503,"parameterSlots":1,"returnSlots":0},"@_setVotingPeriod_2526":{"entryPoint":600,"id":2526,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_4412":{"entryPoint":null,"id":4412,"parameterSlots":2,"returnSlots":1},"@_updateQuorumNumerator_2854":{"entryPoint":832,"id":2854,"parameterSlots":1,"returnSlots":0},"@clock_2596":{"entryPoint":1673,"id":2596,"parameterSlots":0,"returnSlots":1},"@getStringSlot_5314":{"entryPoint":1501,"id":5314,"parameterSlots":1,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@latest_4140":{"entryPoint":1951,"id":4140,"parameterSlots":1,"returnSlots":1},"@push_3943":{"entryPoint":1922,"id":3943,"parameterSlots":3,"returnSlots":2},"@quorumDenominator_2753":{"entryPoint":null,"id":2753,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2693":{"entryPoint":1504,"id":2693,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_5168":{"entryPoint":451,"id":5168,"parameterSlots":2,"returnSlots":1},"@toShortString_5070":{"entryPoint":1434,"id":5070,"parameterSlots":1,"returnSlots":1},"@toUint224_7141":{"entryPoint":1562,"id":7141,"parameterSlots":1,"returnSlots":1},"@toUint32_7741":{"entryPoint":1819,"id":7741,"parameterSlots":1,"returnSlots":1},"@toUint48_7691":{"entryPoint":2029,"id":7691,"parameterSlots":1,"returnSlots":1},"@version_632":{"entryPoint":424,"id":632,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_contract$_IVotes_$2933_fromMemory":{"entryPoint":2729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48_fromMemory":{"entryPoint":2900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2942,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2860,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5335:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"110:209:31","statements":[{"body":{"nodeType":"YulBlock","src":"156:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"165:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"168:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"158:6:31"},"nodeType":"YulFunctionCall","src":"158:12:31"},"nodeType":"YulExpressionStatement","src":"158:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"131:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"140:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"127:3:31"},"nodeType":"YulFunctionCall","src":"127:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"152:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"123:3:31"},"nodeType":"YulFunctionCall","src":"123:32:31"},"nodeType":"YulIf","src":"120:52:31"},{"nodeType":"YulVariableDeclaration","src":"181:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"200:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"194:5:31"},"nodeType":"YulFunctionCall","src":"194:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"185:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"273:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"282:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"285:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"275:6:31"},"nodeType":"YulFunctionCall","src":"275:12:31"},"nodeType":"YulExpressionStatement","src":"275:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"232:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"243:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"258:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"263:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"254:3:31"},"nodeType":"YulFunctionCall","src":"254:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"267:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:31"},"nodeType":"YulFunctionCall","src":"250:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"239:3:31"},"nodeType":"YulFunctionCall","src":"239:31:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"229:2:31"},"nodeType":"YulFunctionCall","src":"229:42:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"222:6:31"},"nodeType":"YulFunctionCall","src":"222:50:31"},"nodeType":"YulIf","src":"219:70:31"},{"nodeType":"YulAssignment","src":"298:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"308:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"298:6:31"}]}]},"name":"abi_decode_tuple_t_contract$_IVotes_$2933_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"76:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"87:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"99:6:31","type":""}],"src":"14:305:31"},{"body":{"nodeType":"YulBlock","src":"537:276:31","statements":[{"nodeType":"YulAssignment","src":"547:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"570:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:31"},"nodeType":"YulFunctionCall","src":"555:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"547:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"590:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"601:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"583:6:31"},"nodeType":"YulFunctionCall","src":"583:25:31"},"nodeType":"YulExpressionStatement","src":"583:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"628:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"639:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"624:3:31"},"nodeType":"YulFunctionCall","src":"624:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"644:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:31"},"nodeType":"YulFunctionCall","src":"617:34:31"},"nodeType":"YulExpressionStatement","src":"617:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"671:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"682:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"667:3:31"},"nodeType":"YulFunctionCall","src":"667:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"687:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"660:6:31"},"nodeType":"YulFunctionCall","src":"660:34:31"},"nodeType":"YulExpressionStatement","src":"660:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"714:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"725:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"710:3:31"},"nodeType":"YulFunctionCall","src":"710:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"730:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"703:6:31"},"nodeType":"YulFunctionCall","src":"703:34:31"},"nodeType":"YulExpressionStatement","src":"703:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"768:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:31"},"nodeType":"YulFunctionCall","src":"753:19:31"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"778:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"794:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"790:3:31"},"nodeType":"YulFunctionCall","src":"790:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"786:3:31"},"nodeType":"YulFunctionCall","src":"786:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"774:3:31"},"nodeType":"YulFunctionCall","src":"774:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"746:6:31"},"nodeType":"YulFunctionCall","src":"746:61:31"},"nodeType":"YulExpressionStatement","src":"746:61:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"474:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"485:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"493:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"501:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"509:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"517:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"528:4:31","type":""}],"src":"324:489:31"},{"body":{"nodeType":"YulBlock","src":"947:119:31","statements":[{"nodeType":"YulAssignment","src":"957:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"980:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"965:3:31"},"nodeType":"YulFunctionCall","src":"965:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"957:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"999:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"1010:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"992:6:31"},"nodeType":"YulFunctionCall","src":"992:25:31"},"nodeType":"YulExpressionStatement","src":"992:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1037:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1048:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1033:3:31"},"nodeType":"YulFunctionCall","src":"1033:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"1053:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1026:6:31"},"nodeType":"YulFunctionCall","src":"1026:34:31"},"nodeType":"YulExpressionStatement","src":"1026:34:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"908:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"919:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"927:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"938:4:31","type":""}],"src":"818:248:31"},{"body":{"nodeType":"YulBlock","src":"1245:229:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1262:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1273:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1255:6:31"},"nodeType":"YulFunctionCall","src":"1255:21:31"},"nodeType":"YulExpressionStatement","src":"1255:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1307:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1292:3:31"},"nodeType":"YulFunctionCall","src":"1292:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"1312:2:31","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1285:6:31"},"nodeType":"YulFunctionCall","src":"1285:30:31"},"nodeType":"YulExpressionStatement","src":"1285:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1335:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1346:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1331:3:31"},"nodeType":"YulFunctionCall","src":"1331:18:31"},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420","kind":"string","nodeType":"YulLiteral","src":"1351:34:31","type":"","value":"GovernorSettings: voting period "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1324:6:31"},"nodeType":"YulFunctionCall","src":"1324:62:31"},"nodeType":"YulExpressionStatement","src":"1324:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1402:3:31"},"nodeType":"YulFunctionCall","src":"1402:18:31"},{"hexValue":"746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"1422:9:31","type":"","value":"too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1395:6:31"},"nodeType":"YulFunctionCall","src":"1395:37:31"},"nodeType":"YulExpressionStatement","src":"1395:37:31"},{"nodeType":"YulAssignment","src":"1441:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1464:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1449:3:31"},"nodeType":"YulFunctionCall","src":"1449:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1441:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1222:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1236:4:31","type":""}],"src":"1071:403:31"},{"body":{"nodeType":"YulBlock","src":"1653:297:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1670:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1681:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1663:6:31"},"nodeType":"YulFunctionCall","src":"1663:21:31"},"nodeType":"YulExpressionStatement","src":"1663:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1704:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1700:3:31"},"nodeType":"YulFunctionCall","src":"1700:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"1720:2:31","type":"","value":"67"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1693:6:31"},"nodeType":"YulFunctionCall","src":"1693:30:31"},"nodeType":"YulExpressionStatement","src":"1693:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1743:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1754:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:31"},"nodeType":"YulFunctionCall","src":"1739:18:31"},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f","kind":"string","nodeType":"YulLiteral","src":"1759:34:31","type":"","value":"GovernorVotesQuorumFraction: quo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1732:6:31"},"nodeType":"YulFunctionCall","src":"1732:62:31"},"nodeType":"YulExpressionStatement","src":"1732:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1814:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1825:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1810:3:31"},"nodeType":"YulFunctionCall","src":"1810:18:31"},{"hexValue":"72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61","kind":"string","nodeType":"YulLiteral","src":"1830:34:31","type":"","value":"rumNumerator over quorumDenomina"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1803:6:31"},"nodeType":"YulFunctionCall","src":"1803:62:31"},"nodeType":"YulExpressionStatement","src":"1803:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1885:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1896:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:31"},"nodeType":"YulFunctionCall","src":"1881:19:31"},{"hexValue":"746f72","kind":"string","nodeType":"YulLiteral","src":"1902:5:31","type":"","value":"tor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:31"},"nodeType":"YulFunctionCall","src":"1874:34:31"},"nodeType":"YulExpressionStatement","src":"1874:34:31"},{"nodeType":"YulAssignment","src":"1917:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1929:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1940:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1925:3:31"},"nodeType":"YulFunctionCall","src":"1925:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1917:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1630:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1644:4:31","type":""}],"src":"1479:471:31"},{"body":{"nodeType":"YulBlock","src":"2076:476:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2086:12:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2096:2:31","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2090:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2114:9:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2125:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2107:6:31"},"nodeType":"YulFunctionCall","src":"2107:21:31"},"nodeType":"YulExpressionStatement","src":"2107:21:31"},{"nodeType":"YulVariableDeclaration","src":"2137:27:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2157:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2151:5:31"},"nodeType":"YulFunctionCall","src":"2151:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2141:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2195:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:31"},"nodeType":"YulFunctionCall","src":"2180:18:31"},{"name":"length","nodeType":"YulIdentifier","src":"2200:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:31"},"nodeType":"YulFunctionCall","src":"2173:34:31"},"nodeType":"YulExpressionStatement","src":"2173:34:31"},{"nodeType":"YulVariableDeclaration","src":"2216:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2225:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2220:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2285:90:31","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2314:9:31"},{"name":"i","nodeType":"YulIdentifier","src":"2325:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2310:3:31"},"nodeType":"YulFunctionCall","src":"2310:17:31"},{"kind":"number","nodeType":"YulLiteral","src":"2329:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2306:3:31"},"nodeType":"YulFunctionCall","src":"2306:26:31"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2348:6:31"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2344:3:31"},"nodeType":"YulFunctionCall","src":"2344:14:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2360:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2340:3:31"},"nodeType":"YulFunctionCall","src":"2340:23:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2334:5:31"},"nodeType":"YulFunctionCall","src":"2334:30:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2299:6:31"},"nodeType":"YulFunctionCall","src":"2299:66:31"},"nodeType":"YulExpressionStatement","src":"2299:66:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2246:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"2249:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2243:2:31"},"nodeType":"YulFunctionCall","src":"2243:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2257:19:31","statements":[{"nodeType":"YulAssignment","src":"2259:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2268:1:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2271:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2264:3:31"},"nodeType":"YulFunctionCall","src":"2264:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2259:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"2239:3:31","statements":[]},"src":"2235:140:31"},{"body":{"nodeType":"YulBlock","src":"2409:66:31","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2438:9:31"},{"name":"length","nodeType":"YulIdentifier","src":"2449:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:31"},"nodeType":"YulFunctionCall","src":"2434:22:31"},{"kind":"number","nodeType":"YulLiteral","src":"2458:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:31"},"nodeType":"YulFunctionCall","src":"2430:31:31"},{"kind":"number","nodeType":"YulLiteral","src":"2463:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2423:6:31"},"nodeType":"YulFunctionCall","src":"2423:42:31"},"nodeType":"YulExpressionStatement","src":"2423:42:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2390:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2387:2:31"},"nodeType":"YulFunctionCall","src":"2387:13:31"},"nodeType":"YulIf","src":"2384:91:31"},{"nodeType":"YulAssignment","src":"2484:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2500:9:31"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2519:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2527:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2515:3:31"},"nodeType":"YulFunctionCall","src":"2515:15:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2536:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2532:3:31"},"nodeType":"YulFunctionCall","src":"2532:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2511:3:31"},"nodeType":"YulFunctionCall","src":"2511:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2496:3:31"},"nodeType":"YulFunctionCall","src":"2496:45:31"},{"kind":"number","nodeType":"YulLiteral","src":"2543:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:31"},"nodeType":"YulFunctionCall","src":"2492:54:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2484:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2045:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2056:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2067:4:31","type":""}],"src":"1955:597:31"},{"body":{"nodeType":"YulBlock","src":"2651:203:31","statements":[{"nodeType":"YulVariableDeclaration","src":"2661:26:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2681:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2675:5:31"},"nodeType":"YulFunctionCall","src":"2675:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2665:6:31","type":""}]},{"nodeType":"YulAssignment","src":"2696:32:31","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2715:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2722:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2711:3:31"},"nodeType":"YulFunctionCall","src":"2711:16:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2705:5:31"},"nodeType":"YulFunctionCall","src":"2705:23:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2696:5:31"}]},{"body":{"nodeType":"YulBlock","src":"2765:83:31","statements":[{"nodeType":"YulAssignment","src":"2779:59:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2792:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2807:1:31","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2814:4:31","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"2820:6:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2810:3:31"},"nodeType":"YulFunctionCall","src":"2810:17:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2803:3:31"},"nodeType":"YulFunctionCall","src":"2803:25:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2830:3:31"},"nodeType":"YulFunctionCall","src":"2830:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2799:3:31"},"nodeType":"YulFunctionCall","src":"2799:38:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2788:3:31"},"nodeType":"YulFunctionCall","src":"2788:50:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2779:5:31"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2743:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2751:4:31","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2740:2:31"},"nodeType":"YulFunctionCall","src":"2740:16:31"},"nodeType":"YulIf","src":"2737:111:31"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2631:5:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2641:5:31","type":""}],"src":"2557:297:31"},{"body":{"nodeType":"YulBlock","src":"3033:229:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3050:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3061:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3043:6:31"},"nodeType":"YulFunctionCall","src":"3043:21:31"},"nodeType":"YulExpressionStatement","src":"3043:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3095:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:31"},"nodeType":"YulFunctionCall","src":"3080:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"3100:2:31","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3073:6:31"},"nodeType":"YulFunctionCall","src":"3073:30:31"},"nodeType":"YulExpressionStatement","src":"3073:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3123:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3134:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3119:3:31"},"nodeType":"YulFunctionCall","src":"3119:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"3139:34:31","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3112:6:31"},"nodeType":"YulFunctionCall","src":"3112:62:31"},"nodeType":"YulExpressionStatement","src":"3112:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3194:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3205:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3190:3:31"},"nodeType":"YulFunctionCall","src":"3190:18:31"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"3210:9:31","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3183:6:31"},"nodeType":"YulFunctionCall","src":"3183:37:31"},"nodeType":"YulExpressionStatement","src":"3183:37:31"},{"nodeType":"YulAssignment","src":"3229:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3241:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3252:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3237:3:31"},"nodeType":"YulFunctionCall","src":"3237:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3229:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3010:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3024:4:31","type":""}],"src":"2859:403:31"},{"body":{"nodeType":"YulBlock","src":"3347:204:31","statements":[{"body":{"nodeType":"YulBlock","src":"3393:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3402:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3405:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3395:6:31"},"nodeType":"YulFunctionCall","src":"3395:12:31"},"nodeType":"YulExpressionStatement","src":"3395:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3368:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3377:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3364:3:31"},"nodeType":"YulFunctionCall","src":"3364:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3389:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3360:3:31"},"nodeType":"YulFunctionCall","src":"3360:32:31"},"nodeType":"YulIf","src":"3357:52:31"},{"nodeType":"YulVariableDeclaration","src":"3418:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3437:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3431:5:31"},"nodeType":"YulFunctionCall","src":"3431:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3422:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3505:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3514:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3517:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3507:6:31"},"nodeType":"YulFunctionCall","src":"3507:12:31"},"nodeType":"YulExpressionStatement","src":"3507:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3469:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3480:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"3487:14:31","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3476:3:31"},"nodeType":"YulFunctionCall","src":"3476:26:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3466:2:31"},"nodeType":"YulFunctionCall","src":"3466:37:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3459:6:31"},"nodeType":"YulFunctionCall","src":"3459:45:31"},"nodeType":"YulIf","src":"3456:65:31"},{"nodeType":"YulAssignment","src":"3530:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3540:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3530:6:31"}]}]},"name":"abi_decode_tuple_t_uint48_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3313:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3324:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3336:6:31","type":""}],"src":"3267:284:31"},{"body":{"nodeType":"YulBlock","src":"3730:228:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3747:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3758:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3740:6:31"},"nodeType":"YulFunctionCall","src":"3740:21:31"},"nodeType":"YulExpressionStatement","src":"3740:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3781:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3792:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:31"},"nodeType":"YulFunctionCall","src":"3777:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"3797:2:31","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:31"},"nodeType":"YulFunctionCall","src":"3770:30:31"},"nodeType":"YulExpressionStatement","src":"3770:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3820:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3831:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3816:3:31"},"nodeType":"YulFunctionCall","src":"3816:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"3836:34:31","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3809:6:31"},"nodeType":"YulFunctionCall","src":"3809:62:31"},"nodeType":"YulExpressionStatement","src":"3809:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3902:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:31"},"nodeType":"YulFunctionCall","src":"3887:18:31"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"3907:8:31","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3880:6:31"},"nodeType":"YulFunctionCall","src":"3880:36:31"},"nodeType":"YulExpressionStatement","src":"3880:36:31"},{"nodeType":"YulAssignment","src":"3925:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3937:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3948:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3933:3:31"},"nodeType":"YulFunctionCall","src":"3933:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3925:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3707:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3721:4:31","type":""}],"src":"3556:402:31"},{"body":{"nodeType":"YulBlock","src":"4012:173:31","statements":[{"body":{"nodeType":"YulBlock","src":"4042:111:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4063:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4075:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4066:3:31"},"nodeType":"YulFunctionCall","src":"4066:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4056:6:31"},"nodeType":"YulFunctionCall","src":"4056:31:31"},"nodeType":"YulExpressionStatement","src":"4056:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4107:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4110:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4100:6:31"},"nodeType":"YulFunctionCall","src":"4100:15:31"},"nodeType":"YulExpressionStatement","src":"4100:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4135:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4138:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4128:6:31"},"nodeType":"YulFunctionCall","src":"4128:15:31"},"nodeType":"YulExpressionStatement","src":"4128:15:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4028:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"4031:1:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4025:2:31"},"nodeType":"YulFunctionCall","src":"4025:8:31"},"nodeType":"YulIf","src":"4022:131:31"},{"nodeType":"YulAssignment","src":"4162:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4174:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"4177:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4170:3:31"},"nodeType":"YulFunctionCall","src":"4170:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4162:4:31"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3994:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"3997:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4003:4:31","type":""}],"src":"3963:222:31"},{"body":{"nodeType":"YulBlock","src":"4364:228:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4381:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4392:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4374:6:31"},"nodeType":"YulFunctionCall","src":"4374:21:31"},"nodeType":"YulExpressionStatement","src":"4374:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4415:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4426:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4411:3:31"},"nodeType":"YulFunctionCall","src":"4411:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"4431:2:31","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4404:6:31"},"nodeType":"YulFunctionCall","src":"4404:30:31"},"nodeType":"YulExpressionStatement","src":"4404:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4465:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:31"},"nodeType":"YulFunctionCall","src":"4450:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"4470:34:31","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4443:6:31"},"nodeType":"YulFunctionCall","src":"4443:62:31"},"nodeType":"YulExpressionStatement","src":"4443:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4525:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4536:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4521:3:31"},"nodeType":"YulFunctionCall","src":"4521:18:31"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"4541:8:31","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4514:6:31"},"nodeType":"YulFunctionCall","src":"4514:36:31"},"nodeType":"YulExpressionStatement","src":"4514:36:31"},{"nodeType":"YulAssignment","src":"4559:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4582:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4567:3:31"},"nodeType":"YulFunctionCall","src":"4567:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4559:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4341:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4355:4:31","type":""}],"src":"4190:402:31"},{"body":{"nodeType":"YulBlock","src":"4771:177:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4788:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4799:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4781:6:31"},"nodeType":"YulFunctionCall","src":"4781:21:31"},"nodeType":"YulExpressionStatement","src":"4781:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4822:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:31"},"nodeType":"YulFunctionCall","src":"4818:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"4838:2:31","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4811:6:31"},"nodeType":"YulFunctionCall","src":"4811:30:31"},"nodeType":"YulExpressionStatement","src":"4811:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4872:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:31"},"nodeType":"YulFunctionCall","src":"4857:18:31"},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","kind":"string","nodeType":"YulLiteral","src":"4877:29:31","type":"","value":"Checkpoint: decreasing keys"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:31"},"nodeType":"YulFunctionCall","src":"4850:57:31"},"nodeType":"YulExpressionStatement","src":"4850:57:31"},{"nodeType":"YulAssignment","src":"4916:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4928:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4939:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4924:3:31"},"nodeType":"YulFunctionCall","src":"4924:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4916:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4748:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4762:4:31","type":""}],"src":"4597:351:31"},{"body":{"nodeType":"YulBlock","src":"5008:325:31","statements":[{"nodeType":"YulAssignment","src":"5018:22:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5032:1:31","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5035:4:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5028:3:31"},"nodeType":"YulFunctionCall","src":"5028:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"5049:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5079:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"5085:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5075:3:31"},"nodeType":"YulFunctionCall","src":"5075:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5053:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5126:31:31","statements":[{"nodeType":"YulAssignment","src":"5128:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5142:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5150:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5138:3:31"},"nodeType":"YulFunctionCall","src":"5138:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5128:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5106:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5099:6:31"},"nodeType":"YulFunctionCall","src":"5099:26:31"},"nodeType":"YulIf","src":"5096:61:31"},{"body":{"nodeType":"YulBlock","src":"5216:111:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5237:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5244:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5249:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5240:3:31"},"nodeType":"YulFunctionCall","src":"5240:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5230:6:31"},"nodeType":"YulFunctionCall","src":"5230:31:31"},"nodeType":"YulExpressionStatement","src":"5230:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5281:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5284:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5274:6:31"},"nodeType":"YulFunctionCall","src":"5274:15:31"},"nodeType":"YulExpressionStatement","src":"5274:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5309:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5312:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5302:6:31"},"nodeType":"YulFunctionCall","src":"5302:15:31"},"nodeType":"YulExpressionStatement","src":"5302:15:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5172:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5195:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5203:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5192:2:31"},"nodeType":"YulFunctionCall","src":"5192:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5169:2:31"},"nodeType":"YulFunctionCall","src":"5169:38:31"},"nodeType":"YulIf","src":"5166:161:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4988:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4997:6:31","type":""}],"src":"4953:380:31"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IVotes_$2933_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"GovernorSettings: voting period \")\n        mstore(add(headStart, 96), \"too low\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"GovernorVotesQuorumFraction: quo\")\n        mstore(add(headStart, 96), \"rumNumerator over quorumDenomina\")\n        mstore(add(headStart, 128), \"tor\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 2\")\n        mstore(add(headStart, 96), \"24 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint48_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 4\")\n        mstore(add(headStart, 96), \"8 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Checkpoint: decreasing keys\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101806040523480156200001257600080fd5b506040516200570c3803806200570c833981016040819052620000359162000aa9565b600481611c2061c4e060006040518060400160405280600681526020016553696e44414f60d01b8152508062000070620001a860201b60201c565b6200008b600083620001c360201b62001fbc1790919060201c565b61012052620000a8816001620001c3602090811b62001fbc17901c565b61014052815160208084019190912060e052815190820120610100524660a0526200013660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05280516200015490600290602084019062000a0d565b506200016290508362000217565b6200016d8262000258565b6200017881620002ff565b5050506001600160a01b031661016052620001938162000340565b50620001a1600033620004f5565b5062000bdb565b6040805180820190915260018152603160f81b602082015290565b6000602083511015620001e357620001db836200059a565b905062000211565b82620001fa83620005dd60201b62001ff31760201c565b81516200020b926020019062000a0d565b5060ff90505b92915050565b60065460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600655565b60008111620002be5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60075460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600755565b60085460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600855565b6064811115620003c55760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401620002b5565b6000620003d1620005e0565b90508015801590620003e35750600b54155b156200045e57600b6000016040518060400160405280600063ffffffff1681526020016200041c846200061a60201b62001ff61760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620004b6620004896200047062000689565b65ffffffffffff166200071b60201b620020631760201c565b6200049f846200061a60201b62001ff61760201c565b600b6200078260201b620020c8179092919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6000828152600c602090815260408083206001600160a01b038516845290915290205460ff1662000596576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620005553390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080829050601f81511115620005c8578260405163305a27a960e01b8152600401620002b5919062000ad4565b8051620005d58262000b2c565b179392505050565b90565b600b5460009015620006115762000603600b6200079f60201b620020e31760201c565b6001600160e01b0316905090565b600a545b905090565b60006001600160e01b03821115620006855760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401620002b5565b5090565b6000610160516001600160a01b03166391ddadf46040518163ffffffff1660e01b815260040160206040518083038186803b158015620006c857600080fd5b505afa925050508015620006fb575060408051601f3d908101601f19168201909252620006f89181019062000b54565b60015b62000716576200061543620007ed60201b6200212a1760201c565b919050565b600063ffffffff821115620006855760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401620002b5565b6000806200079285858562000856565b915091505b935093915050565b80546000908015620007e357620007cb83620007bd60018462000b7e565b600091825260209091200190565b5464010000000090046001600160e01b0316620007e6565b60005b9392505050565b600065ffffffffffff821115620006855760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401620002b5565b825460009081908015620009b25760006200087887620007bd60018562000b7e565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620008fc5760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401620002b5565b8563ffffffff16816000015163ffffffff1614156200095157846200092888620007bd60018662000b7e565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055620009a1565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620007979050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a81529182209551925190931664010000000002919093161792019190915590508162000797565b82805462000a1b9062000ba4565b90600052602060002090601f01602090048101928262000a3f576000855562000a8a565b82601f1062000a5a57805160ff191683800117855562000a8a565b8280016001018555821562000a8a579182015b8281111562000a8a57825182559160200191906001019062000a6d565b50620006859291505b8082111562000685576000815560010162000a93565b60006020828403121562000abc57600080fd5b81516001600160a01b0381168114620007e657600080fd5b600060208083528351808285015260005b8181101562000b035785810183015185820160400152820162000ae5565b8181111562000b16576000604083870101525b50601f01601f1916929092016040019392505050565b8051602080830151919081101562000b4e576000198160200360031b1b821691505b50919050565b60006020828403121562000b6757600080fd5b815165ffffffffffff81168114620007e657600080fd5b60008282101562000b9f57634e487b7160e01b600052601160045260246000fd5b500390565b600181811c9082168062000bb957607f821691505b6020821081141562000b4e57634e487b7160e01b600052602260045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051614aaf62000c5d60003960008181610cbd0152818161144d01528181611c3d01528181612b6c0152612d0601526000611bbe01526000611b94015260006130f6015260006130ce01526000613029015260006130530152600061307d0152614aaf6000f3fe60806040526004361061037a5760003560e01c806360c4247f116101d1578063a87430ba11610102578063dd4e2ba5116100a0578063ece40cc11161006f578063ece40cc114610c3f578063f23a6e6114610c5f578063f8ce560a14610c8b578063fc0c546a14610cab57600080fd5b8063dd4e2ba514610b85578063deaaa7cc14610bcb578063ea0217cf14610bff578063eb9019d414610c1f57600080fd5b8063c01f9e37116100dc578063c01f9e3714610af9578063c28bc2fa14610b32578063c59057e414610b45578063d547741f14610b6557600080fd5b8063a87430ba14610a89578063b58131b014610ab8578063bc197c8114610acd57600080fd5b806391d148541161016f5780639a802a6d116101495780639a802a6d14610a1f578063a217fddf14610a3f578063a71e9a9c14610a54578063a7713a7014610a7457600080fd5b806391d14854146109bf57806391ddadf4146109df57806397c3d33414610a0b57600080fd5b8063797669c9116101ab578063797669c9146109235780637b3c71d3146109575780637d5e81e21461097757806384b0196e1461099757600080fd5b806360c4247f146108b357806370b0f660146108d35780637586353b146108f357600080fd5b80632fe3e261116102ab5780634385963211610249578063544ffc9c11610223578063544ffc9c146107f457806354fd4d501461084957806356781388146108735780635f398a141461089357600080fd5b80634385963214610775578063452115d6146107bf5780634bf5d7e9146107df57600080fd5b80633bccf4fd116102855780633bccf4fd1461067e5780633e4f49e61461069e5780633ef4cc8b146106cb57806340dd07b91461072757600080fd5b80632fe3e2611461061557806336568abe146106495780633932abb11461066957600080fd5b8063143489d0116103185780632656227d116102f25780632656227d1461057c57806328bdcde81461058f5780632d63f693146105bf5780632f2ff15d146105f557600080fd5b8063143489d0146104b3578063150b7a0214610508578063248a9ca31461054c57600080fd5b80630342018111610354578063034201811461041d57806306f3f9e61461043d57806306fdde031461045d578063131191611461047f57600080fd5b806301ffc9a71461039157806302a251a3146103c6578063033e6f4d146103e957600080fd5b3661038c57005b60405180910390fd5b005b600080fd5b34801561039d57600080fd5b506103b16103ac366004613a43565b610cdf565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610cf0565b6040519081526020016103bd565b3480156103f557600080fd5b506103db7f53b89ac75efe2c37162cd6795f5bf8b9c749f1d0387576893c1d2d0c23a326f381565b34801561042957600080fd5b506103db610438366004613b91565b610d00565b34801561044957600080fd5b5061038a610458366004613c37565b610df8565b34801561046957600080fd5b50610472610e3f565b6040516103bd9190613cac565b34801561048b57600080fd5b506103db7f14823911f2da1b49f045a0929a60b8c1f2a7fc8c06c7284ca3e8ab4e193a08c881565b3480156104bf57600080fd5b506104f06104ce366004613c37565b600090815260036020526040902054600160401b90046001600160a01b031690565b6040516001600160a01b0390911681526020016103bd565b34801561051457600080fd5b50610533610523366004613cd6565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016103bd565b34801561055857600080fd5b506103db610567366004613c37565b6000908152600c602052604090206001015490565b6103db61058a366004613ea7565b610ed1565b34801561059b57600080fd5b506105af6105aa366004613c37565b610ffd565b6040516103bd9493929190613f36565b3480156105cb57600080fd5b506103db6105da366004613c37565b6000908152600360205260409020546001600160401b031690565b34801561060157600080fd5b5061038a610610366004613f6f565b6110d2565b34801561062157600080fd5b506103db7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561065557600080fd5b5061038a610664366004613f6f565b6110fc565b34801561067557600080fd5b506103db61117a565b34801561068a57600080fd5b506103db610699366004613f9b565b611185565b3480156106aa57600080fd5b506106be6106b9366004613c37565b6111fb565b6040516103bd9190613fff565b3480156106d757600080fd5b506107196106e6366004614019565b601260209081526000928352604080842090915290825290206001015460ff81169061010090046001600160a01b031682565b6040516103bd92919061404b565b34801561073357600080fd5b50610719610742366004614019565b601360209081526000928352604080842090915290825290206001015460ff81169061010090046001600160a01b031682565b34801561078157600080fd5b506103b1610790366004613f6f565b60008281526009602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156107cb57600080fd5b506103db6107da366004613ea7565b611338565b3480156107eb57600080fd5b50610472611449565b34801561080057600080fd5b5061082e61080f366004613c37565b6000908152600960205260409020805460018201546002909201549092565b604080519384526020840192909252908201526060016103bd565b34801561085557600080fd5b506040805180820190915260018152603160f81b6020820152610472565b34801561087f57600080fd5b506103db61088e366004614070565b61151a565b34801561089f57600080fd5b506103db6108ae366004614093565b611543565b3480156108bf57600080fd5b506103db6108ce366004613c37565b61158d565b3480156108df57600080fd5b5061038a6108ee366004613c37565b61163c565b3480156108ff57600080fd5b5061091361090e366004613c37565b611680565b6040516103bd9493929190614116565b34801561092f57600080fd5b506103db7f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f81565b34801561096357600080fd5b506103db61097236600461415c565b6117bc565b34801561098357600080fd5b506103db6109923660046141b5565b611804565b3480156109a357600080fd5b506109ac611b86565b6040516103bd97969594939291906142a4565b3480156109cb57600080fd5b506103b16109da366004613f6f565b611c0e565b3480156109eb57600080fd5b506109f4611c39565b60405165ffffffffffff90911681526020016103bd565b348015610a1757600080fd5b5060646103db565b348015610a2b57600080fd5b506103db610a3a366004614306565b611cd1565b348015610a4b57600080fd5b506103db600081565b348015610a6057600080fd5b506105af610a6f366004613c37565b611ce8565b348015610a8057600080fd5b506103db611cf8565b348015610a9557600080fd5b50610aa9610aa436600461435c565b611d22565b6040516103bd93929190614377565b348015610ac457600080fd5b506103db611dd2565b348015610ad957600080fd5b50610533610ae83660046143a1565b63bc197c8160e01b95945050505050565b348015610b0557600080fd5b506103db610b14366004613c37565b6000908152600360205260409020600101546001600160401b031690565b61038a610b40366004614430565b611ddd565b348015610b5157600080fd5b506103db610b60366004613ea7565b611ea9565b348015610b7157600080fd5b5061038a610b80366004613f6f565b611ee3565b348015610b9157600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610472565b348015610bd757600080fd5b506103db7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610c0b57600080fd5b5061038a610c1a366004613c37565b611f08565b348015610c2b57600080fd5b506103db610c3a366004614471565b611f4c565b348015610c4b57600080fd5b5061038a610c5a366004613c37565b611f6d565b348015610c6b57600080fd5b50610533610c7a36600461449b565b63f23a6e6160e01b95945050505050565b348015610c9757600080fd5b506103db610ca6366004613c37565b611fb1565b348015610cb757600080fd5b506104f07f000000000000000000000000000000000000000000000000000000000000000081565b6000610cea82612191565b92915050565b6000610cfb60075490565b905090565b600080610da4610d9c7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c604051610d3c9291906144ff565b60405180910390208b80519060200120604051602001610d81959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b604051602081830303815290604052805190602001206121b6565b8686866121e3565b9050610dea8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250612201915050565b9a9950505050505050505050565b333014610e175760405162461bcd60e51b81526004016103819061450f565b610e33565b80610e276004612353565b14610e3157610e1c565b505b610e3c816123d2565b50565b606060028054610e4e90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7a90614546565b8015610ec75780601f10610e9c57610100808354040283529160200191610ec7565b820191906000526020600020905b815481529060010190602001808311610eaa57829003601f168201915b5050505050905090565b600080610ee086868686611ea9565b90506000610eed826111fb565b90506004816007811115610f0357610f03613fe9565b1480610f2057506005816007811115610f1e57610f1e613fe9565b145b610f765760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610381565b60008281526003602052604090819020600201805460ff19166001179055517f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90610fc49084815260200190565b60405180910390a1610fd98288888888612540565b610fe682888888886125ce565b610ff38288888888612540565b5095945050505050565b600d818154811061100d57600080fd5b906000526020600020906004020160009150905080600001805461103090614546565b80601f016020809104026020016040519081016040528092919081815260200182805461105c90614546565b80156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b5050505060018301546002840154600390940154929390926001600160a01b0391821692501684565b6000828152600c60205260409020600101546110ed816126c4565b6110f783836126ce565b505050565b6001600160a01b038116331461116c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610381565b6111768282612754565b5050565b6000610cfb60065490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff8516606082015260009081906111d390610d9c90608001610d81565b90506111f0878288604051806020016040528060008152506127bb565b979650505050505050565b6000818152600360205260408120600281015460ff161561121f5750600792915050565b6002810154610100900460ff161561123a5750600292915050565b6000838152600360205260409020546001600160401b03168061129f5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610381565b60006112a9611c39565b65ffffffffffff1690508082106112c557506000949350505050565b6000858152600360205260409020600101546001600160401b03168181106112f35750600195945050505050565b6112fc866127e7565b801561131b575060008681526009602052604090208054600190910154115b1561132c5750600495945050505050565b50600395945050505050565b60008061134786868686611ea9565b90506000611354826111fb565b600781111561136557611365613fe9565b146113b25760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20746f6f206c61746520746f2063616e63656c000000006044820152606401610381565b600081815260036020526040902054600160401b90046001600160a01b0316336001600160a01b0316146114335760405162461bcd60e51b815260206004820152602260248201527f476f7665726e6f723a206f6e6c792070726f706f7365722063616e2063616e63604482015261195b60f21b6064820152608401610381565b61143f86868686612833565b9695505050505050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634bf5d7e96040518163ffffffff1660e01b815260040160006040518083038186803b1580156114a457600080fd5b505afa9250505080156114d957506040513d6000823e601f3d908101601f191682016040526114d69190810190614581565b60015b611515575060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b919050565b60008033905061153b848285604051806020016040528060008152506127bb565b949350505050565b6000803390506111f087828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250612201915050565b600b54600090806115a2575050600a54919050565b6000600b6115b1600184614604565b815481106115c1576115c161461b565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b0316928201929092529150841061161757602001516001600160e01b03169392505050565b61162b61162385612063565b600b90612951565b6001600160e01b0316949350505050565b33301461165b5760405162461bcd60e51b81526004016103819061450f565b611677565b8061166b6004612353565b1461167557611660565b505b610e3c816129f6565b60116020526000908152604090208054819061169b90614546565b80601f01602080910402602001604051908101604052809291908181526020018280546116c790614546565b80156117145780601f106116e957610100808354040283529160200191611714565b820191906000526020600020905b8154815290600101906020018083116116f757829003601f168201915b50505050509080600101805461172990614546565b80601f016020809104026020016040519081016040528092919081815260200182805461175590614546565b80156117a25780601f10611777576101008083540402835291602001916117a2565b820191906000526020600020905b81548152906001019060200180831161178557829003601f168201915b50505050600383015460049093015491929160ff16905084565b60008033905061143f86828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506127bb92505050565b60003381611810611c39565b65ffffffffffff169050611822611dd2565b61183183610c3a600185614604565b10156118995760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610381565b60006118ae8888888880519060200120611ea9565b905086518851146118d15760405162461bcd60e51b815260040161038190614631565b85518851146118f25760405162461bcd60e51b815260040161038190614631565b60008851116119435760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610381565b6000818152600360205260409020546001600160401b0316156119b25760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610381565b60006119bc61117a565b6119c69084614672565b905060006119d2610cf0565b6119dc9083614672565b90506040518060e001604052806119f284612a37565b6001600160401b031681526001600160a01b038716602082015260006040820152606001611a1f83612a37565b6001600160401b039081168252600060208084018290526040808501839052606094850183905288835260038252918290208551815492870151878501519186166001600160e01b031990941693909317600160401b6001600160a01b039094168402176001600160e01b0316600160e01b60e09290921c91909102178155938501516080860151908416921c0217600183015560a08301516002909201805460c09094015161ffff1990941692151561ff00191692909217610100931515939093029290921790558a517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e091859188918e918e91811115611b2357611b23613ac6565b604051908082528060200260200182016040528015611b5657816020015b6060815260200190600190039081611b415790505b508d88888f604051611b709998979695949392919061471b565b60405180910390a1509098975050505050505050565b600060608082808083611bb97f000000000000000000000000000000000000000000000000000000000000000083612a9f565b611be47f00000000000000000000000000000000000000000000000000000000000000006001612a9f565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391ddadf46040518163ffffffff1660e01b815260040160206040518083038186803b158015611c9457600080fd5b505afa925050508015611cc4575060408051601f3d908101601f19168201909252611cc1918101906147f2565b60015b61151557610cfb4361212a565b6000611cde848484612b43565b90505b9392505050565b600e818154811061100d57600080fd5b600b5460009015611d1b57611d0d600b6120e3565b6001600160e01b0316905090565b50600a5490565b600f60205260009081526040902080548190611d3d90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6990614546565b8015611db65780601f10611d8b57610100808354040283529160200191611db6565b820191906000526020600020905b815481529060010190602001808311611d9957829003601f168201915b5050506001909301549192505060ff8082169161010090041683565b6000610cfb60085490565b333014611dfc5760405162461bcd60e51b81526004016103819061450f565b611e18565b80611e0c6004612353565b14611e1657611e01565b505b600080856001600160a01b0316858585604051611e369291906144ff565b60006040518083038185875af1925050503d8060008114611e73576040519150601f19603f3d011682016040523d82523d6000602084013e611e78565b606091505b5091509150611ea08282604051806060016040528060288152602001614a2b60289139612be8565b50505050505050565b600084848484604051602001611ec2949392919061481a565b60408051601f19818403018152919052805160209091012095945050505050565b6000828152600c6020526040902060010154611efe816126c4565b6110f78383612754565b333014611f275760405162461bcd60e51b81526004016103819061450f565b611f43565b80611f376004612353565b14611f4157611f2c565b505b610e3c81612c01565b6000611ce18383611f6860408051602081019091526000815290565b612b43565b333014611f8c5760405162461bcd60e51b81526004016103819061450f565b611fa8565b80611f9c6004612353565b14611fa657611f91565b505b610e3c81612ca2565b6000610cea82612ce3565b6000602083511015611fd857611fd183612d9c565b9050610cea565b82828151611fe992602001906139b3565b5060ff9050610cea565b90565b60006001600160e01b0382111561205f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610381565b5090565b600063ffffffff82111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610381565b6000806120d6858585612dda565b915091505b935093915050565b805460009080156121215761210b836120fd600184614604565b600091825260209091200190565b54600160201b90046001600160e01b0316611ce1565b60009392505050565b600065ffffffffffff82111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610381565b60006001600160e01b03198216637965db0b60e01b1480610cea5750610cea82612f80565b6000610cea6121c361301c565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006121f487878787613147565b91509150610ff38161320b565b6000858152600360205260408120600161221a886111fb565b600781111561222b5761222b613fe9565b146122845760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610381565b805460009061229e9088906001600160401b031686612b43565b90506122ad8888888488613359565b83516122ff57866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516122f29493929190614865565b60405180910390a26111f0565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb8712898884898960405161234095949392919061488d565b60405180910390a2979650505050505050565b600061236e8254600f81810b600160801b909204900b131590565b1561238c57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60648111156124555760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610381565b600061245f611cf8565b905080158015906124705750600b54155b156124d4576040805180820190915260008152600b906020810161249384611ff6565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b6125016124ef6124e2611c39565b65ffffffffffff16612063565b6124f884611ff6565b600b91906120c8565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6125c7565b84518110156125c557306001600160a01b031685828151811061256a5761256a61461b565b60200260200101516001600160a01b031614156125b5576125b58382815181106125965761259661461b565b60200260200101518051906020012060046134d890919063ffffffff16565b6125be816148d3565b9050612545565b505b5050505050565b6000604051806060016040528060278152602001614a5360279139905060005b8551811015611ea05760008087838151811061260c5761260c61461b565b60200260200101516001600160a01b031687848151811061262f5761262f61461b565b60200260200101518785815181106126495761264961461b565b602002602001015160405161265e91906148ee565b60006040518083038185875af1925050503d806000811461269b576040519150601f19603f3d011682016040523d82523d6000602084013e6126a0565b606091505b50915091506126b0828286612be8565b505050806126bd906148d3565b90506125ee565b610e3c8133613514565b6126d88282611c0e565b611176576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff191660011790556127103390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61275e8282611c0e565b15611176576000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006127de858585856127d960408051602081019091526000815290565b612201565b95945050505050565b6000818152600960205260408120600281015460018201546128099190614672565b60008481526003602052604090205461282a906001600160401b0316611fb1565b11159392505050565b60008061284286868686611ea9565b9050600061284f826111fb565b9050600281600781111561286557612865613fe9565b141580156128855750600681600781111561288257612882613fe9565b14155b80156128a3575060078160078111156128a0576128a0613fe9565b14155b6128ef5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f74206163746976650000006044820152606401610381565b60008281526003602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9061293f9084815260200190565b60405180910390a15095945050505050565b8154600090818160058111156129ae57600061296c8461356d565b6129769085614604565b60008881526020902090915081015463ffffffff908116908716101561299e578091506129ac565b6129a9816001614672565b92505b505b60006129bc87878585613652565b905080156129e9576129d3876120fd600184614604565b54600160201b90046001600160e01b03166111f0565b6000979650505050505050565b60065460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600655565b60006001600160401b0382111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610381565b606060ff8314612ab257611fd1836136b0565b818054612abe90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054612aea90614546565b8015612b375780601f10612b0c57610100808354040283529160200191612b37565b820191906000526020600020905b815481529060010190602001808311612b1a57829003601f168201915b50505050509050610cea565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015612bb057600080fd5b505afa158015612bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde919061490a565b60608315612bf7575081611ce1565b611ce183836136ef565b60008111612c615760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610381565b60075460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600755565b60085460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600855565b60006064612cf08361158d565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b158015612d5057600080fd5b505afa158015612d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d88919061490a565b612d929190614923565b610cea9190614958565b600080829050601f81511115612dc7578260405163305a27a960e01b81526004016103819190613cac565b8051612dd28261497a565b179392505050565b825460009081908015612f27576000612df8876120fd600185614604565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b031660208401529192509087161015612e795760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610381565b8563ffffffff16816000015163ffffffff161415612ec85784612ea1886120fd600186614604565b80546001600160e01b0392909216600160201b0263ffffffff909216919091179055612f17565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506120db9050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050816120db565b600063288ace0360e11b6318df743f60e31b63bf26d89760e01b6379dd796f60e01b6001600160e01b03198616821480612fc657506001600160e01b0319868116908216145b80612fdd57506001600160e01b0319868116908516145b80612ff857506001600160e01b03198616630271189760e51b145b8061143f57506301ffc9a760e01b6001600160e01b03198716149695505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561307557507f000000000000000000000000000000000000000000000000000000000000000046145b1561309f57507f000000000000000000000000000000000000000000000000000000000000000090565b610cfb604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561317e5750600090506003613202565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131d2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166131fb57600060019250925050613202565b9150600090505b94509492505050565b600081600481111561321f5761321f613fe9565b14156132285750565b600181600481111561323c5761323c613fe9565b141561328a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610381565b600281600481111561329e5761329e613fe9565b14156132ec5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610381565b600381600481111561330057613300613fe9565b1415610e3c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610381565b60008581526009602090815260408083206001600160a01b0388168452600381019092529091205460ff16156133e15760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608401610381565b6001600160a01b03851660009081526003820160205260408120805460ff1916600117905560ff168460ff16141561343257828160000160008282546134279190614672565b909155506125c59050565b60ff84166001141561345257828160010160008282546134279190614672565b60ff84166002141561347257828160020160008282546134279190614672565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610381565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b61351e8282611c0e565b6111765761352b81613719565b61353683602061372b565b60405160200161354792919061499e565b60408051601f198184030181529082905262461bcd60e51b825261038191600401613cac565b60008161357c57506000919050565b60006001613589846138c6565b901c6001901b905060018184816135a2576135a2614942565b048201901c905060018184816135ba576135ba614942565b048201901c905060018184816135d2576135d2614942565b048201901c905060018184816135ea576135ea614942565b048201901c9050600181848161360257613602614942565b048201901c9050600181848161361a5761361a614942565b048201901c9050600181848161363257613632614942565b048201901c9050611ce18182858161364c5761364c614942565b0461395a565b60005b818310156136a85760006136698484613970565b60008781526020902090915063ffffffff86169082015463ffffffff161115613694578092506136a2565b61369f816001614672565b93505b50613655565b509392505050565b606060006136bd8361398b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b8151156136ff5781518083602001fd5b8060405162461bcd60e51b81526004016103819190613cac565b6060610cea6001600160a01b03831660145b6060600061373a836002614923565b613745906002614672565b6001600160401b0381111561375c5761375c613ac6565b6040519080825280601f01601f191660200182016040528015613786576020820181803683370190505b509050600360fc1b816000815181106137a1576137a161461b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106137d0576137d061461b565b60200101906001600160f81b031916908160001a90535060006137f4846002614923565b6137ff906001614672565b90505b6001811115613877576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106138335761383361461b565b1a60f81b8282815181106138495761384961461b565b60200101906001600160f81b031916908160001a90535060049490941c9361387081614a13565b9050613802565b508315611ce15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610381565b600080608083901c156138db57608092831c92015b604083901c156138ed57604092831c92015b602083901c156138ff57602092831c92015b601083901c1561391157601092831c92015b600883901c1561392357600892831c92015b600483901c1561393557600492831c92015b600283901c1561394757600292831c92015b600183901c15610cea5760010192915050565b60008183106139695781611ce1565b5090919050565b600061397f6002848418614958565b611ce190848416614672565b600060ff8216601f811115610cea57604051632cd44ac360e21b815260040160405180910390fd5b8280546139bf90614546565b90600052602060002090601f0160209004810192826139e15760008555613a27565b82601f106139fa57805160ff1916838001178555613a27565b82800160010185558215613a27579182015b82811115613a27578251825591602001919060010190613a0c565b5061205f9291505b8082111561205f5760008155600101613a2f565b600060208284031215613a5557600080fd5b81356001600160e01b031981168114611ce157600080fd5b803560ff8116811461151557600080fd5b60008083601f840112613a9057600080fd5b5081356001600160401b03811115613aa757600080fd5b602083019150836020828501011115613abf57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613b0457613b04613ac6565b604052919050565b60006001600160401b03821115613b2557613b25613ac6565b50601f01601f191660200190565b6000613b46613b4184613b0c565b613adc565b9050828152838383011115613b5a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112613b8257600080fd5b611ce183833560208501613b33565b60008060008060008060008060e0898b031215613bad57600080fd5b88359750613bbd60208a01613a6d565b965060408901356001600160401b0380821115613bd957600080fd5b613be58c838d01613a7e565b909850965060608b0135915080821115613bfe57600080fd5b50613c0b8b828c01613b71565b945050613c1a60808a01613a6d565b925060a0890135915060c089013590509295985092959890939650565b600060208284031215613c4957600080fd5b5035919050565b60005b83811015613c6b578181015183820152602001613c53565b83811115613c7a576000848401525b50505050565b60008151808452613c98816020860160208601613c50565b601f01601f19169290920160200192915050565b602081526000611ce16020830184613c80565b80356001600160a01b038116811461151557600080fd5b60008060008060808587031215613cec57600080fd5b613cf585613cbf565b9350613d0360208601613cbf565b92506040850135915060608501356001600160401b03811115613d2557600080fd5b613d3187828801613b71565b91505092959194509250565b60006001600160401b03821115613d5657613d56613ac6565b5060051b60200190565b600082601f830112613d7157600080fd5b81356020613d81613b4183613d3d565b82815260059290921b84018101918181019086841115613da057600080fd5b8286015b84811015613dc257613db581613cbf565b8352918301918301613da4565b509695505050505050565b600082601f830112613dde57600080fd5b81356020613dee613b4183613d3d565b82815260059290921b84018101918181019086841115613e0d57600080fd5b8286015b84811015613dc25780358352918301918301613e11565b600082601f830112613e3957600080fd5b81356020613e49613b4183613d3d565b82815260059290921b84018101918181019086841115613e6857600080fd5b8286015b84811015613dc25780356001600160401b03811115613e8b5760008081fd5b613e998986838b0101613b71565b845250918301918301613e6c565b60008060008060808587031215613ebd57600080fd5b84356001600160401b0380821115613ed457600080fd5b613ee088838901613d60565b95506020870135915080821115613ef657600080fd5b613f0288838901613dcd565b94506040870135915080821115613f1857600080fd5b50613f2587828801613e28565b949793965093946060013593505050565b608081526000613f496080830187613c80565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b60008060408385031215613f8257600080fd5b82359150613f9260208401613cbf565b90509250929050565b600080600080600060a08688031215613fb357600080fd5b85359450613fc360208701613a6d565b9350613fd160408701613a6d565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061401357614013613fe9565b91905290565b6000806040838503121561402c57600080fd5b50508035926020909101359150565b60048110610e3c57610e3c613fe9565b604081016140588461403b565b9281526001600160a01b039190911660209091015290565b6000806040838503121561408357600080fd5b82359150613f9260208401613a6d565b6000806000806000608086880312156140ab57600080fd5b853594506140bb60208701613a6d565b935060408601356001600160401b03808211156140d757600080fd5b6140e389838a01613a7e565b909550935060608801359150808211156140fc57600080fd5b5061410988828901613b71565b9150509295509295909350565b6080815260006141296080830187613c80565b828103602084015261413b8187613c80565b91505083604083015261414d8361403b565b82606083015295945050505050565b6000806000806060858703121561417257600080fd5b8435935061418260208601613a6d565b925060408501356001600160401b0381111561419d57600080fd5b6141a987828801613a7e565b95989497509550505050565b600080600080608085870312156141cb57600080fd5b84356001600160401b03808211156141e257600080fd5b6141ee88838901613d60565b9550602087013591508082111561420457600080fd5b61421088838901613dcd565b9450604087013591508082111561422657600080fd5b61423288838901613e28565b9350606087013591508082111561424857600080fd5b508501601f8101871361425a57600080fd5b613d3187823560208401613b33565b600081518084526020808501945080840160005b838110156142995781518752958201959082019060010161427d565b509495945050505050565b60ff60f81b8816815260e0602082015260006142c360e0830189613c80565b82810360408401526142d58189613c80565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501529050610dea8185614269565b60008060006060848603121561431b57600080fd5b61432484613cbf565b92506020840135915060408401356001600160401b0381111561434657600080fd5b61435286828701613b71565b9150509250925092565b60006020828403121561436e57600080fd5b611ce182613cbf565b60608152600061438a6060830186613c80565b931515602083015250901515604090910152919050565b600080600080600060a086880312156143b957600080fd5b6143c286613cbf565b94506143d060208701613cbf565b935060408601356001600160401b03808211156143ec57600080fd5b6143f889838a01613dcd565b9450606088013591508082111561440e57600080fd5b61441a89838a01613dcd565b935060808801359150808211156140fc57600080fd5b6000806000806060858703121561444657600080fd5b61444f85613cbf565b93506020850135925060408501356001600160401b0381111561419d57600080fd5b6000806040838503121561448457600080fd5b61448d83613cbf565b946020939093013593505050565b600080600080600060a086880312156144b357600080fd5b6144bc86613cbf565b94506144ca60208701613cbf565b9350604086013592506060860135915060808601356001600160401b038111156144f357600080fd5b61410988828901613b71565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c9082168061455a57607f821691505b6020821081141561457b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561459357600080fd5b81516001600160401b038111156145a957600080fd5b8201601f810184136145ba57600080fd5b80516145c8613b4182613b0c565b8181528560208385010111156145dd57600080fd5b6127de826020830160208601613c50565b634e487b7160e01b600052601160045260246000fd5b600082821015614616576146166145ee565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60008219821115614685576146856145ee565b500190565b600081518084526020808501945080840160005b838110156142995781516001600160a01b03168752958201959082019060010161469e565b600082825180855260208086019550808260051b84010181860160005b8481101561470e57601f198684030189526146fc838351613c80565b988401989250908301906001016146e0565b5090979650505050505050565b60006101208b8352602060018060a01b038c16818501528160408501526147448285018c61468a565b91508382036060850152614758828b614269565b915083820360808501528189518084528284019150828160051b850101838c0160005b838110156147a957601f19878403018552614797838351613c80565b9486019492509085019060010161477b565b505086810360a08801526147bd818c6146c3565b9450505050508560c08401528460e08401528281036101008401526147e28185613c80565b9c9b505050505050505050505050565b60006020828403121561480457600080fd5b815165ffffffffffff81168114611ce157600080fd5b60808152600061482d608083018761468a565b828103602084015261483f8187614269565b9050828103604084015261485381866146c3565b91505082606083015295945050505050565b84815260ff8416602082015282604082015260806060820152600061143f6080830184613c80565b85815260ff8516602082015283604082015260a0606082015260006148b560a0830185613c80565b82810360808401526148c78185613c80565b98975050505050505050565b60006000198214156148e7576148e76145ee565b5060010190565b60008251614900818460208701613c50565b9190910192915050565b60006020828403121561491c57600080fd5b5051919050565b600081600019048311821515161561493d5761493d6145ee565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261497557634e487b7160e01b600052601260045260246000fd5b500490565b8051602080830151919081101561457b5760001960209190910360031b1b16919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516149d6816017850160208801613c50565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351614a07816028840160208801613c50565b01602801949350505050565b600081614a2257614a226145ee565b50600019019056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a2646970667358221220827ac346b24897929dfa34ff2416ba523b19422583d3243ebe8b2fdd35a08dcd64736f6c63430008090033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x570C CODESIZE SUB DUP1 PUSH3 0x570C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0xAA9 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH2 0x1C20 PUSH2 0xC4E0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x53696E44414F PUSH1 0xD0 SHL DUP2 MSTORE POP DUP1 PUSH3 0x70 PUSH3 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8B PUSH1 0x0 DUP4 PUSH3 0x1C3 PUSH1 0x20 SHL PUSH3 0x1FBC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xA8 DUP2 PUSH1 0x1 PUSH3 0x1C3 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1FBC OR SWAP1 SHR JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x136 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE DUP1 MLOAD PUSH3 0x154 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xA0D JUMP JUMPDEST POP PUSH3 0x162 SWAP1 POP DUP4 PUSH3 0x217 JUMP JUMPDEST PUSH3 0x16D DUP3 PUSH3 0x258 JUMP JUMPDEST PUSH3 0x178 DUP2 PUSH3 0x2FF JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 MSTORE PUSH3 0x193 DUP2 PUSH3 0x340 JUMP JUMPDEST POP PUSH3 0x1A1 PUSH1 0x0 CALLER PUSH3 0x4F5 JUMP JUMPDEST POP PUSH3 0xBDB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1E3 JUMPI PUSH3 0x1DB DUP4 PUSH3 0x59A JUMP JUMPDEST SWAP1 POP PUSH3 0x211 JUMP JUMPDEST DUP3 PUSH3 0x1FA DUP4 PUSH3 0x5DD PUSH1 0x20 SHL PUSH3 0x1FF3 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MLOAD PUSH3 0x20B SWAP3 PUSH1 0x20 ADD SWAP1 PUSH3 0xA0D JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x746F6F206C6F77 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH3 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x3A37B9 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH3 0x2B5 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D1 PUSH3 0x5E0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH3 0x3E3 JUMPI POP PUSH1 0xB SLOAD ISZERO JUMPDEST ISZERO PUSH3 0x45E JUMPI PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x41C DUP5 PUSH3 0x61A PUSH1 0x20 SHL PUSH3 0x1FF6 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST PUSH3 0x4B6 PUSH3 0x489 PUSH3 0x470 PUSH3 0x689 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH3 0x71B PUSH1 0x20 SHL PUSH3 0x2063 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x49F DUP5 PUSH3 0x61A PUSH1 0x20 SHL PUSH3 0x1FF6 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB PUSH3 0x782 PUSH1 0x20 SHL PUSH3 0x20C8 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x596 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x555 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x5C8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2B5 SWAP2 SWAP1 PUSH3 0xAD4 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5D5 DUP3 PUSH3 0xB2C JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH3 0x611 JUMPI PUSH3 0x603 PUSH1 0xB PUSH3 0x79F PUSH1 0x20 SHL PUSH3 0x20E3 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH3 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x91DDADF4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x6FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x6F8 SWAP2 DUP2 ADD SWAP1 PUSH3 0xB54 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x716 JUMPI PUSH3 0x615 NUMBER PUSH3 0x7ED PUSH1 0x20 SHL PUSH3 0x212A OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH3 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x792 DUP6 DUP6 DUP6 PUSH3 0x856 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH3 0x7E3 JUMPI PUSH3 0x7CB DUP4 PUSH3 0x7BD PUSH1 0x1 DUP5 PUSH3 0xB7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH3 0x7E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x382062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2B5 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH3 0x9B2 JUMPI PUSH1 0x0 PUSH3 0x878 DUP8 PUSH3 0x7BD PUSH1 0x1 DUP6 PUSH3 0xB7E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND LT ISZERO PUSH3 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B706F696E743A2064656372656173696E67206B6579730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2B5 JUMP JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH3 0x951 JUMPI DUP5 PUSH3 0x928 DUP9 PUSH3 0x7BD PUSH1 0x1 DUP7 PUSH3 0xB7E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x9A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP12 SLOAD PUSH1 0x1 DUP2 ADD DUP14 SSTORE PUSH1 0x0 DUP14 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH5 0x100000000 MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 POP DUP4 SWAP2 POP PUSH3 0x797 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH5 0x100000000 MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH3 0x797 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xA1B SWAP1 PUSH3 0xBA4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xA8A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xA5A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xA8A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xA8A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xA8A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xA6D JUMP JUMPDEST POP PUSH3 0x685 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x685 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xA93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xB03 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0xAE5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0xB16 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0xB4E JUMPI PUSH1 0x0 NOT DUP2 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL DUP3 AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xBB9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xB4E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x4AAF PUSH3 0xC5D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xCBD ADD MSTORE DUP2 DUP2 PUSH2 0x144D ADD MSTORE DUP2 DUP2 PUSH2 0x1C3D ADD MSTORE DUP2 DUP2 PUSH2 0x2B6C ADD MSTORE PUSH2 0x2D06 ADD MSTORE PUSH1 0x0 PUSH2 0x1BBE ADD MSTORE PUSH1 0x0 PUSH2 0x1B94 ADD MSTORE PUSH1 0x0 PUSH2 0x30F6 ADD MSTORE PUSH1 0x0 PUSH2 0x30CE ADD MSTORE PUSH1 0x0 PUSH2 0x3029 ADD MSTORE PUSH1 0x0 PUSH2 0x3053 ADD MSTORE PUSH1 0x0 PUSH2 0x307D ADD MSTORE PUSH2 0x4AAF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60C4247F GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA87430BA GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDD4E2BA5 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xECE40CC1 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xECE40CC1 EQ PUSH2 0xC3F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xC5F JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0xBCB JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0xBFF JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01F9E37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0xAF9 JUMPI DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0xB32 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0xB45 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA87430BA EQ PUSH2 0xA89 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0xAB8 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x9A802A6D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x9A802A6D EQ PUSH2 0xA1F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xA71E9A9C EQ PUSH2 0xA54 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9BF JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0x97C3D334 EQ PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x797669C9 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x797669C9 EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60C4247F EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0x7586353B EQ PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FE3E261 GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x43859632 GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x544FFC9C GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x7F4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x5F398A14 EQ PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43859632 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x452115D6 EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BCCF4FD GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x3EF4CC8B EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0x40DD07B9 EQ PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FE3E261 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x143489D0 GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x2656227D GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x28BDCDE8 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x143489D0 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3420181 GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x3420181 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x13119161 EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x33E6F4D EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3A43 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x53B89AC75EFE2C37162CD6795F5BF8B9C749F1D0387576893C1D2D0C23A326F3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B91 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x14823911F2DA1B49F045A0929A60B8C1F2A7FC8C06C7284CA3E8AB4E193A08C8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD6 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x117A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x6B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3FFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP3 SWAP2 SWAP1 PUSH2 0x404B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x790 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x1338 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0x1449 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH2 0x80F CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x472 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x4070 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4093 JUMP JUMPDEST PUSH2 0x1543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x8EE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x163C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x913 PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x71F3D55856E4058ED06EE057D79ADA615F65CDF5F9EE88181B914225088F834F DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x972 CALLDATASIZE PUSH1 0x4 PUSH2 0x415C JUMP JUMPDEST PUSH2 0x17BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x41B5 JUMP JUMPDEST PUSH2 0x1804 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AC PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x1C0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x3DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xA3A CALLDATASIZE PUSH1 0x4 PUSH2 0x4306 JUMP JUMPDEST PUSH2 0x1CD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0xA6F CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1CE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA9 PUSH2 0xAA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x435C JUMP JUMPDEST PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1DD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0xAE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x43A1 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xB14 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x38A PUSH2 0xB40 CALLDATASIZE PUSH1 0x4 PUSH2 0x4430 JUMP JUMPDEST PUSH2 0x1DDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xB60 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xB80 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x1EE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E SWAP1 DUP3 ADD MSTORE PUSH2 0x472 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1F08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xC3A CALLDATASIZE PUSH1 0x4 PUSH2 0x4471 JUMP JUMPDEST PUSH2 0x1F4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC5A CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1F6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0xC7A CALLDATASIZE PUSH1 0x4 PUSH2 0x449B JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xCA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1FB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDA4 PUSH2 0xD9C PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP13 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP3 SWAP2 SWAP1 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP12 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD81 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x21B6 JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x21E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEA DUP11 DUP3 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP PUSH2 0x2201 SWAP2 POP POP JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xE17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST DUP1 PUSH2 0xE27 PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0xE31 JUMPI PUSH2 0xE1C JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x23D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xE4E SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE9C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEE0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEED DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF03 PUSH2 0x3FE9 JUMP JUMPDEST EQ DUP1 PUSH2 0xF20 JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1E PUSH2 0x3FE9 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH2 0xFC4 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFD9 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0xFE6 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xFF3 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2540 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1030 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x105C SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x107E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x108C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 POP AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10ED DUP2 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 PUSH2 0x26CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x116C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x1176 DUP3 DUP3 PUSH2 0x2754 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x11D3 SWAP1 PUSH2 0xD9C SWAP1 PUSH1 0x80 ADD PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27BB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x121F JUMPI POP PUSH1 0x7 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x123A JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 LT PUSH2 0x12C5 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 DUP2 LT PUSH2 0x12F3 JUMPI POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12FC DUP7 PUSH2 0x27E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x131B JUMPI POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x132C JUMPI POP PUSH1 0x4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1347 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1354 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1365 PUSH2 0x3FE9 JUMP JUMPDEST EQ PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20746F6F206C61746520746F2063616E63656C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A206F6E6C792070726F706F7365722063616E2063616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x143F DUP7 DUP7 DUP7 DUP7 PUSH2 0x2833 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BF5D7E9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14D6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4581 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1515 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x153B DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x11F0 DUP8 DUP3 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x2201 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x15A2 JUMPI POP POP PUSH1 0xA SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH2 0x15B1 PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15C1 JUMPI PUSH2 0x15C1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 POP DUP5 LT PUSH2 0x1617 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1623 DUP6 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0xB SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1677 JUMP JUMPDEST DUP1 PUSH2 0x166B PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1675 JUMPI PUSH2 0x1660 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x169B SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C7 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1729 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1785 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x143F DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x27BB SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x1810 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x1822 PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1831 DUP4 PUSH2 0xC3A PUSH1 0x1 DUP6 PUSH2 0x4604 JUMP JUMPDEST LT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73657220766F7465732062656C6F772070 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1C9BDC1BDCD85B081D1A1C995CDA1BDB19 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AE DUP9 DUP9 DUP9 DUP9 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP DUP7 MLOAD DUP9 MLOAD EQ PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x4631 JUMP JUMPDEST DUP6 MLOAD DUP9 MLOAD EQ PUSH2 0x18F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x4631 JUMP JUMPDEST PUSH1 0x0 DUP9 MLOAD GT PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20656D7074792070726F706F73616C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BC PUSH2 0x117A JUMP JUMPDEST PUSH2 0x19C6 SWAP1 DUP5 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19D2 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x19DC SWAP1 DUP4 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x19F2 DUP5 PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A1F DUP4 PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE DUP9 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP3 DUP8 ADD MLOAD DUP8 DUP6 ADD MLOAD SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 MUL OR DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 DUP5 AND SWAP3 SHR MUL OR PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xC0 SWAP1 SWAP5 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE DUP11 MLOAD PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 SWAP2 DUP6 SWAP2 DUP9 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B56 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B41 JUMPI SWAP1 POP JUMPDEST POP DUP14 DUP9 DUP9 DUP16 PUSH1 0x40 MLOAD PUSH2 0x1B70 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x1BB9 PUSH32 0x0 DUP4 PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x1BE4 PUSH32 0x0 PUSH1 0x1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x91DDADF4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1CC4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1CC1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x47F2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1515 JUMPI PUSH2 0xCFB NUMBER PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDE DUP5 DUP5 DUP5 PUSH2 0x2B43 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D0D PUSH1 0xB PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1D3D SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D69 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DB6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DB6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D99 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1E18 JUMP JUMPDEST DUP1 PUSH2 0x1E0C PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1E16 JUMPI PUSH2 0x1E01 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E36 SWAP3 SWAP2 SWAP1 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EA0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A2B PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x2BE8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EC2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x481A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1EFE DUP2 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 PUSH2 0x2754 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1F27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1F43 JUMP JUMPDEST DUP1 PUSH2 0x1F37 PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1F41 JUMPI PUSH2 0x1F2C JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 DUP4 DUP4 PUSH2 0x1F68 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2B43 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1F8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1FA8 JUMP JUMPDEST DUP1 PUSH2 0x1F9C PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1FA6 JUMPI PUSH2 0x1F91 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA DUP3 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD1 DUP4 PUSH2 0x2D9C JUMP JUMPDEST SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD PUSH2 0x1FE9 SWAP3 PUSH1 0x20 ADD SWAP1 PUSH2 0x39B3 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20D6 DUP6 DUP6 DUP6 PUSH2 0x2DDA JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x2121 JUMPI PUSH2 0x210B DUP4 PUSH2 0x20FD PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x382062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xCEA JUMPI POP PUSH2 0xCEA DUP3 PUSH2 0x2F80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA PUSH2 0x21C3 PUSH2 0x301C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x21F4 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFF3 DUP2 PUSH2 0x320B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH2 0x221A DUP9 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222B PUSH2 0x3FE9 JUMP JUMPDEST EQ PUSH2 0x2284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x229E SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH2 0x2B43 JUMP JUMPDEST SWAP1 POP PUSH2 0x22AD DUP9 DUP9 DUP9 DUP5 DUP9 PUSH2 0x3359 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x22FF JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP10 DUP9 DUP5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x22F2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x11F0 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2BABFBAC5889A709B63BB7F598B324E08BC5A4FB9EC647FB3CBC9EC07EB8712 DUP10 DUP9 DUP5 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2340 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236E DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x3A37B9 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245F PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2470 JUMPI POP PUSH1 0xB SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xB SWAP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2493 DUP5 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST PUSH2 0x2501 PUSH2 0x24EF PUSH2 0x24E2 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x24F8 DUP5 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0xB SWAP2 SWAP1 PUSH2 0x20C8 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x25C7 JUMP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25C5 JUMPI ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x256A PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2596 JUMPI PUSH2 0x2596 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 PUSH2 0x34D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25BE DUP2 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2545 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A53 PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x260C JUMPI PUSH2 0x260C PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x262F JUMPI PUSH2 0x262F PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2649 JUMPI PUSH2 0x2649 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x265E SWAP2 SWAP1 PUSH2 0x48EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x269B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x26B0 DUP3 DUP3 DUP7 PUSH2 0x2BE8 JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x26BD SWAP1 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x25EE JUMP JUMPDEST PUSH2 0xE3C DUP2 CALLER PUSH2 0x3514 JUMP JUMPDEST PUSH2 0x26D8 DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1176 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2710 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x275E DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27DE DUP6 DUP6 DUP6 DUP6 PUSH2 0x27D9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2201 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x2809 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x282A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1FB1 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2842 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x284F DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2865 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2885 JUMPI POP PUSH1 0x6 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2882 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x28A3 JUMPI POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x28A0 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x28EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE MLOAD PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH2 0x293F SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x29AE JUMPI PUSH1 0x0 PUSH2 0x296C DUP5 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x2976 SWAP1 DUP6 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x299E JUMPI DUP1 SWAP2 POP PUSH2 0x29AC JUMP JUMPDEST PUSH2 0x29A9 DUP2 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x29BC DUP8 DUP8 DUP6 DUP6 PUSH2 0x3652 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x29E9 JUMPI PUSH2 0x29D3 DUP8 PUSH2 0x20FD PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x342062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x2AB2 JUMPI PUSH2 0x1FD1 DUP4 PUSH2 0x36B0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2ABE SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AEA SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B37 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B0C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B37 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B1A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x748D635 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x3A46B1A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CDE SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2BF7 JUMPI POP DUP2 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1CE1 DUP4 DUP4 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2C61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x746F6F206C6F77 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2CF0 DUP4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2394E7A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E539E8C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D88 SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x4958 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x2DC7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2DD2 DUP3 PUSH2 0x497A JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x2F27 JUMPI PUSH1 0x0 PUSH2 0x2DF8 DUP8 PUSH2 0x20FD PUSH1 0x1 DUP6 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND LT ISZERO PUSH2 0x2E79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B706F696E743A2064656372656173696E67206B6579730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x2EC8 JUMPI DUP5 PUSH2 0x2EA1 DUP9 PUSH2 0x20FD PUSH1 0x1 DUP7 PUSH2 0x4604 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP12 SLOAD PUSH1 0x1 DUP2 ADD DUP14 SSTORE PUSH1 0x0 DUP14 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x20DB SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x20 SHL MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH4 0x288ACE03 PUSH1 0xE1 SHL PUSH4 0x18DF743F PUSH1 0xE3 SHL PUSH4 0xBF26D897 PUSH1 0xE0 SHL PUSH4 0x79DD796F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND DUP3 EQ DUP1 PUSH2 0x2FC6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 DUP2 AND SWAP1 DUP3 AND EQ JUMPDEST DUP1 PUSH2 0x2FDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 DUP2 AND SWAP1 DUP6 AND EQ JUMPDEST DUP1 PUSH2 0x2FF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ JUMPDEST DUP1 PUSH2 0x143F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP8 AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x3075 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x309F JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xCFB PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x317E JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x3202 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x31FB JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x3202 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x321F JUMPI PUSH2 0x321F PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x3228 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x323C JUMPI PUSH2 0x323C PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x328A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329E PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x32EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3300 JUMPI PUSH2 0x3300 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x33E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x191E4818D85CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xFF AND DUP5 PUSH1 0xFF AND EQ ISZERO PUSH2 0x3432 JUMPI DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x25C5 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x1 EQ ISZERO PUSH2 0x3452 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x2 EQ ISZERO PUSH2 0x3472 JUMPI DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6C756520666F7220656E756D20566F746554797065 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP1 SWAP2 ADD AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x351E DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1176 JUMPI PUSH2 0x352B DUP2 PUSH2 0x3719 JUMP JUMPDEST PUSH2 0x3536 DUP4 PUSH1 0x20 PUSH2 0x372B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3547 SWAP3 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x381 SWAP2 PUSH1 0x4 ADD PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x357C JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3589 DUP5 PUSH2 0x38C6 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35A2 JUMPI PUSH2 0x35A2 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35BA JUMPI PUSH2 0x35BA PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35D2 JUMPI PUSH2 0x35D2 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35EA JUMPI PUSH2 0x35EA PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x3602 JUMPI PUSH2 0x3602 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x361A JUMPI PUSH2 0x361A PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x3632 JUMPI PUSH2 0x3632 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1CE1 DUP2 DUP3 DUP6 DUP2 PUSH2 0x364C JUMPI PUSH2 0x364C PUSH2 0x4942 JUMP JUMPDEST DIV PUSH2 0x395A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x0 PUSH2 0x3669 DUP5 DUP5 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3694 JUMPI DUP1 SWAP3 POP PUSH2 0x36A2 JUMP JUMPDEST PUSH2 0x369F DUP2 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x3655 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x36BD DUP4 PUSH2 0x398B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x36FF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCEA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x373A DUP4 PUSH1 0x2 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0x3745 SWAP1 PUSH1 0x2 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x375C JUMPI PUSH2 0x375C PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3786 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x37A1 JUMPI PUSH2 0x37A1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x37D0 JUMPI PUSH2 0x37D0 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x37F4 DUP5 PUSH1 0x2 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0x37FF SWAP1 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3877 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x3833 JUMPI PUSH2 0x3833 PUSH2 0x461B JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3849 JUMPI PUSH2 0x3849 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x3870 DUP2 PUSH2 0x4A13 JUMP JUMPDEST SWAP1 POP PUSH2 0x3802 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x38DB JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x38ED JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x38FF JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x3911 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x3923 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x3935 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x3947 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0xCEA JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3969 JUMPI DUP2 PUSH2 0x1CE1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x4958 JUMP JUMPDEST PUSH2 0x1CE1 SWAP1 DUP5 DUP5 AND PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x39BF SWAP1 PUSH2 0x4546 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x39E1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3A27 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x39FA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3A27 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3A27 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3A27 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3A0C JUMP JUMPDEST POP PUSH2 0x205F SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3B04 JUMPI PUSH2 0x3B04 PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3B25 JUMPI PUSH2 0x3B25 PUSH2 0x3AC6 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B46 PUSH2 0x3B41 DUP5 PUSH2 0x3B0C JUMP JUMPDEST PUSH2 0x3ADC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3BAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH2 0x3BBD PUSH1 0x20 DUP11 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE5 DUP13 DUP4 DUP14 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0B DUP12 DUP3 DUP13 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x3C1A PUSH1 0x80 DUP11 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C6B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C53 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3C98 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF5 DUP6 PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH2 0x3D03 PUSH1 0x20 DUP7 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D31 DUP8 DUP3 DUP9 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3D56 JUMPI PUSH2 0x3D56 PUSH2 0x3AC6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D81 PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI PUSH2 0x3DB5 DUP2 PUSH2 0x3CBF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3DA4 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3DEE PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3E49 PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3E8B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3E99 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x3B71 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3E6C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EE0 DUP9 DUP4 DUP10 ADD PUSH2 0x3D60 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F02 DUP9 DUP4 DUP10 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F25 DUP8 DUP3 DUP9 ADD PUSH2 0x3E28 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3F49 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3C80 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3F92 PUSH1 0x20 DUP5 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x3FC3 PUSH1 0x20 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP4 POP PUSH2 0x3FD1 PUSH1 0x40 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x8 DUP4 LT PUSH2 0x4013 JUMPI PUSH2 0x4013 PUSH2 0x3FE9 JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x402C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3C PUSH2 0x3FE9 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x4058 DUP5 PUSH2 0x403B JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3F92 PUSH1 0x20 DUP5 ADD PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x40AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x40BB PUSH1 0x20 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x40D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E3 DUP10 DUP4 DUP11 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4109 DUP9 DUP3 DUP10 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4129 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x413B DUP2 DUP8 PUSH2 0x3C80 JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x414D DUP4 PUSH2 0x403B JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x4182 PUSH1 0x20 DUP7 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x419D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41A9 DUP8 DUP3 DUP9 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x41CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x41E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41EE DUP9 DUP4 DUP10 ADD PUSH2 0x3D60 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4210 DUP9 DUP4 DUP10 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4232 DUP9 DUP4 DUP10 ADD PUSH2 0x3E28 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x425A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D31 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4299 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x427D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x42C3 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x42D5 DUP2 DUP10 PUSH2 0x3C80 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0xDEA DUP2 DUP6 PUSH2 0x4269 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x431B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4324 DUP5 PUSH2 0x3CBF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4352 DUP7 DUP3 DUP8 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE1 DUP3 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x438A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3C80 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x43B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43C2 DUP7 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 POP PUSH2 0x43D0 PUSH1 0x20 DUP8 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x43EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43F8 DUP10 DUP4 DUP11 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x440E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x441A DUP10 DUP4 DUP11 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x444F DUP6 PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x419D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448D DUP4 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x44B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44BC DUP7 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 POP PUSH2 0x44CA PUSH1 0x20 DUP8 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4109 DUP9 DUP3 DUP10 ADD PUSH2 0x3B71 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A206F6E6C79476F7665726E616E63650000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x455A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x457B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x45BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x45C8 PUSH2 0x3B41 DUP3 PUSH2 0x3B0C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x45DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27DE DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4616 JUMPI PUSH2 0x4616 PUSH2 0x45EE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4685 JUMPI PUSH2 0x4685 PUSH2 0x45EE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4299 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x469E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x470E JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x46FC DUP4 DUP4 MLOAD PUSH2 0x3C80 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46E0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND DUP2 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x4744 DUP3 DUP6 ADD DUP13 PUSH2 0x468A JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x4758 DUP3 DUP12 PUSH2 0x4269 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP10 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD DUP4 DUP13 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47A9 JUMPI PUSH1 0x1F NOT DUP8 DUP5 SUB ADD DUP6 MSTORE PUSH2 0x4797 DUP4 DUP4 MLOAD PUSH2 0x3C80 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x477B JUMP JUMPDEST POP POP DUP7 DUP2 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x47BD DUP2 DUP13 PUSH2 0x46C3 JUMP JUMPDEST SWAP5 POP POP POP POP POP DUP6 PUSH1 0xC0 DUP5 ADD MSTORE DUP5 PUSH1 0xE0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x47E2 DUP2 DUP6 PUSH2 0x3C80 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x482D PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x468A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x483F DUP2 DUP8 PUSH2 0x4269 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4853 DUP2 DUP7 PUSH2 0x46C3 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x143F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x48B5 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x48C7 DUP2 DUP6 PUSH2 0x3C80 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x48E7 JUMPI PUSH2 0x48E7 PUSH2 0x45EE JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4900 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3C50 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x493D JUMPI PUSH2 0x493D PUSH2 0x45EE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4975 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x457B JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x49D6 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x4A07 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3C50 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4A22 JUMPI PUSH2 0x4A22 PUSH2 0x45EE JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID SELFBALANCE PUSH16 0x7665726E6F723A2072656C6179207265 PUSH23 0x657274656420776974686F7574206D657373616765476F PUSH23 0x65726E6F723A2063616C6C207265766572746564207769 PUSH21 0x686F7574206D657373616765A26469706673582212 KECCAK256 DUP3 PUSH27 0xC346B24897929DFA34FF2416BA523B19422583D3243EBE8B2FDD35 LOG0 DUP14 0xCD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"550:3214:30:-:0;;;2503:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2673:1;2633:6;2574:4;2592:5;2612:1;3771:88:2;;;;;;;;;;;;;-1:-1:-1;;;3771:88:2;;;3811:5;3818:9;:7;;;:9;;:::i;:::-;3251:45:23;3282:13;3251:4;:30;;;;;;:45;;;;:::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;;;;;;;:51;;:::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;583:25:31;624:18;;;617:34;;;;667:18;;;660:34;4106:13:23;710:18:31;;;703:34;4129:4:23;753:19:31;;;746:61;4018:7:23;;555:19:31;;4054:81:23;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:23;3575:27;;3839:13:2;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;877:35:5;;-1:-1:-1;893:18:5;877:15;:35::i;:::-;922:37;939:19;922:16;:37::i;:::-;969:47;991:24;969:21;:47::i;:::-;-1:-1:-1;;;;;;;;511:39:6;;;1300:44:7;1323:20;1300:22;:44::i;:::-;-1:-1:-1;2690:42:30::4;2198:4:0;2721:10:30;2690;:42::i;:::-;2503:236:::0;550:3214;;5525:99:2;5607:10;;;;;;;;;;;;-1:-1:-1;;;5607:10:2;;;;;5525:99::o;2895:341:19:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;;;:32;;:::i;:::-;:46;;;;;;;;:::i;:::-;-1:-1:-1;1371:66:19;;-1:-1:-1;3014:216:19;2895:341;;;;:::o;2607:171:5:-;2703:12;;2688:44;;;992:25:31;;;1048:2;1033:18;;1026:34;;;2688:44:5;;965:18:31;2688:44:5;;;;;;;2742:12;:29;2607:171::o;2898:316::-;3059:1;3041:15;:19;3033:71;;;;-1:-1:-1;;;3033:71:5;;1273:2:31;3033:71:5;;;1255:21:31;1312:2;1292:18;;;1285:30;1351:34;1331:18;;;1324:62;-1:-1:-1;;;1402:18:31;;;1395:37;1449:19;;3033:71:5;;;;;;;;;3135:13;;3119:47;;;992:25:31;;;1048:2;1033:18;;1026:34;;;3119:47:5;;965:18:31;3119:47:5;;;;;;;3176:13;:31;2898:316::o;3344:213::-;3458:18;;3437:62;;;992:25:31;;;1048:2;1033:18;;1026:34;;;3437:62:5;;965:18:31;3437:62:5;;;;;;;3509:18;:41;3344:213::o;3592:930:7:-;2606:3;3700:18;:41;;3679:155;;;;-1:-1:-1;;;3679:155:7;;1681:2:31;3679:155:7;;;1663:21:31;1720:2;1700:18;;;1693:30;1759:34;1739:18;;;1732:62;1830:34;1810:18;;;1803:62;-1:-1:-1;;;1881:19:31;;;1874:34;1925:19;;3679:155:7;1479:471:31;3679:155:7;3845:26;3874:17;:15;:17::i;:::-;3845:46;-1:-1:-1;4025:23:7;;;;;:75;;-1:-1:-1;4052:23:7;:43;:48;4025:75;4021:263;;;4116:23;:36;;4175:84;;;;;;;;4208:1;4175:84;;;;;;4219:38;4238:18;4219;;;;;:38;;:::i;:::-;-1:-1:-1;;;;;4175:84:7;;;;;;4116:157;;;;;;;-1:-1:-1;4116:157:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4021:263;4341:96;4370:26;4388:7;:5;:7::i;:::-;4370:26;;:17;;;;;:26;;:::i;:::-;4398:38;4417:18;4398;;;;;:38;;:::i;:::-;4341:23;:28;;;;;;:96;;;;;:::i;:::-;-1:-1:-1;;4453:62:7;;;992:25:31;;;1048:2;1033:18;;1026:34;;;4453:62:7;;965:18:31;4453:62:7;;;;;;;3669:853;3592:930;:::o;7587:233:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:17;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;1689:286:19:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:19;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:19:o;3310:202:20:-;3486:10;3310:202::o;1448:191:7:-;1530:23;:43;1504:7;;1530:48;:102;;1600:32;:23;:30;;;;;:32;;:::i;:::-;-1:-1:-1;;;;;1530:102:7;1523:109;;1448:191;:::o;1530:102::-;1581:16;;1530:102;1523:109;;1448:191;:::o;2836:192:27:-;2893:7;-1:-1:-1;;;;;2920:26:27;;;2912:78;;;;-1:-1:-1;;;2912:78:27;;3061:2:31;2912:78:27;;;3043:21:31;3100:2;3080:18;;;3073:30;3139:34;3119:18;;;3112:62;-1:-1:-1;;;3190:18:31;;;3183:37;3237:19;;2912:78:27;2859:403:31;2912:78:27;-1:-1:-1;3015:5:27;2836:192::o;734:235:6:-;789:6;811:5;;-1:-1:-1;;;;;811:11:6;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;811:13:6;;;;;;;;-1:-1:-1;;811:13:6;;;;;;;;;;;;:::i;:::-;;;807:156;;921:31;939:12;921:17;;;;;:31;;:::i;807:156::-;873:9;734:235;-1:-1:-1;734:235:6:o;15264:187:27:-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:27;;3758:2:31;15338:76:27;;;3740:21:31;3797:2;3777:18;;;3770:30;3836:34;3816:18;;;3809:62;-1:-1:-1;;;3887:18:31;;;3880:36;3933:19;;15338:76:27;3556:402:31;8063:162:16;8145:7;;8180:38;8188:4;8207:3;8212:5;8180:7;:38::i;:::-;8173:45;;;;8063:162;;;;;;;:::o;10152:206::-;10247:24;;10214:7;;10288:8;;:63;;10303:41;10317:4;10336:7;10342:1;10336:3;:7;:::i;:::-;13936:28;13999:20;;;14064:4;14051:18;;;14047:28;;13826:265;10303:41;:48;;;;-1:-1:-1;;;;;10303:48:16;10288:63;;;10299:1;10288:63;10281:70;10152:206;-1:-1:-1;;;10152:206:16:o;14240:187:27:-;14296:6;14331:16;14322:25;;;14314:76;;;;-1:-1:-1;;;14314:76:27;;4392:2:31;14314:76:27;;;4374:21:31;4431:2;4411:18;;;4404:30;4470:34;4450:18;;;4443:62;-1:-1:-1;;;4521:18:31;;;4514:36;4567:19;;14314:76:27;4190:402:31;11288:836:16;11421:11;;11379:7;;;;11447;;11443:675;;11522:25;11550:28;11564:4;11570:7;11576:1;11570:3;:7;:::i;11550:28::-;11522:56;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11522:56:16;;;;;;;-1:-1:-1;11656:16:16;;;-1:-1:-1;11656:16:16;11648:56;;;;-1:-1:-1;;;11648:56:16;;4799:2:31;11648:56:16;;;4781:21:31;4838:2;4818:18;;;4811:30;4877:29;4857:18;;;4850:57;4924:18;;11648:56:16;4597:351:31;11648:56:16;11781:3;11768:16;;:4;:9;;;:16;;;11764:189;;;11842:5;11804:28;11818:4;11824:7;11830:1;11824:3;:7;:::i;11804:28::-;:43;;-1:-1:-1;;;;;11804:43:16;;;;;;;;;;;;;;;;11764:189;;;11896:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;11896:41:16;;;;;;;;;;11886:52;;;;;;;-1:-1:-1;11886:52:16;;;;;;;;;;;;;;;;;;;;;;;;;11764:189;11974:11;;;;-1:-1:-1;11987:5:16;;-1:-1:-1;11966:27:16;;-1:-1:-1;11966:27:16;11443:675;-1:-1:-1;;12034:41:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;12034:41:16;;;;;;;;;;12024:52;;;;;;;-1:-1:-1;12024:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12068:5:16;12090:17;;550:3214:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;550:3214:30;;;-1:-1:-1;550:3214:30;;;;;;;;;;;;;;14:305:31;99:6;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;194:16;;-1:-1:-1;;;;;239:31:31;;229:42;;219:70;;285:1;282;275:12;1955:597;2067:4;2096:2;2125;2114:9;2107:21;2157:6;2151:13;2200:6;2195:2;2184:9;2180:18;2173:34;2225:1;2235:140;2249:6;2246:1;2243:13;2235:140;;;2344:14;;;2340:23;;2334:30;2310:17;;;2329:2;2306:26;2299:66;2264:10;;2235:140;;;2393:6;2390:1;2387:13;2384:91;;;2463:1;2458:2;2449:6;2438:9;2434:22;2430:31;2423:42;2384:91;-1:-1:-1;2536:2:31;2515:15;-1:-1:-1;;2511:29:31;2496:45;;;;2543:2;2492:54;;1955:597;-1:-1:-1;;;1955:597:31:o;2557:297::-;2675:12;;2722:4;2711:16;;;2705:23;;2675:12;2740:16;;2737:111;;;2834:1;2830:6;2820;2814:4;2810:17;2807:1;2803:25;2799:38;2792:5;2788:50;2779:59;;2737:111;;2557:297;;;:::o;3267:284::-;3336:6;3389:2;3377:9;3368:7;3364:23;3360:32;3357:52;;;3405:1;3402;3395:12;3357:52;3437:9;3431:16;3487:14;3480:5;3476:26;3469:5;3466:37;3456:65;;3517:1;3514;3507:12;3963:222;4003:4;4031:1;4028;4025:8;4022:131;;;4075:10;4070:3;4066:20;4063:1;4056:31;4110:4;4107:1;4100:15;4138:4;4135:1;4128:15;4022:131;-1:-1:-1;4170:9:31;;3963:222::o;4953:380::-;5032:1;5028:12;;;;5075;;;5096:61;;5150:4;5142:6;5138:17;5128:27;;5096:61;5203:2;5195:6;5192:14;5172:18;5169:38;5166:161;;;5249:10;5244:3;5240:20;5237:1;5230:31;5284:4;5281:1;5274:15;5312:4;5309:1;5302:15;4953:380;550:3214:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BALLOT_TYPEHASH_422":{"entryPoint":null,"id":422,"parameterSlots":0,"returnSlots":0},"@CARETAKER_ROLE_9070":{"entryPoint":null,"id":9070,"parameterSlots":0,"returnSlots":0},"@CLOCK_MODE_2619":{"entryPoint":5193,"id":2619,"parameterSlots":0,"returnSlots":1},"@COUNTING_MODE_2175":{"entryPoint":null,"id":2175,"parameterSlots":0,"returnSlots":1},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@EXTENDED_BALLOT_TYPEHASH_427":{"entryPoint":null,"id":427,"parameterSlots":0,"returnSlots":0},"@MODERATOR_ROLE_9075":{"entryPoint":null,"id":9075,"parameterSlots":0,"returnSlots":0},"@USER_ROLE_9065":{"entryPoint":null,"id":9065,"parameterSlots":0,"returnSlots":0},"@_522":{"entryPoint":null,"id":522,"parameterSlots":0,"returnSlots":0},"@_afterExecute_1303":{"entryPoint":null,"id":1303,"parameterSlots":5,"returnSlots":0},"@_beforeExecute_1265":{"entryPoint":9536,"id":1265,"parameterSlots":5,"returnSlots":0},"@_buildDomainSeparator_6072":{"entryPoint":null,"id":6072,"parameterSlots":0,"returnSlots":1},"@_cancel_1368":{"entryPoint":10291,"id":1368,"parameterSlots":4,"returnSlots":1},"@_castVote_1612":{"entryPoint":10171,"id":1612,"parameterSlots":4,"returnSlots":1},"@_castVote_1689":{"entryPoint":8705,"id":1689,"parameterSlots":5,"returnSlots":1},"@_checkRole_131":{"entryPoint":13588,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":9924,"id":92,"parameterSlots":1,"returnSlots":0},"@_countVote_2364":{"entryPoint":13145,"id":2364,"parameterSlots":5,"returnSlots":0},"@_defaultParams_859":{"entryPoint":null,"id":859,"parameterSlots":0,"returnSlots":1},"@_domainSeparatorV4_6051":{"entryPoint":12316,"id":6051,"parameterSlots":0,"returnSlots":1},"@_execute_1205":{"entryPoint":9678,"id":1205,"parameterSlots":5,"returnSlots":0},"@_executor_1733":{"entryPoint":null,"id":1733,"parameterSlots":0,"returnSlots":1},"@_getVotes_2639":{"entryPoint":11075,"id":2639,"parameterSlots":3,"returnSlots":1},"@_grantRole_283":{"entryPoint":9934,"id":283,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_6088":{"entryPoint":8630,"id":6088,"parameterSlots":1,"returnSlots":1},"@_insert_4293":{"entryPoint":11738,"id":4293,"parameterSlots":3,"returnSlots":2},"@_msgData_4936":{"entryPoint":null,"id":4936,"parameterSlots":0,"returnSlots":2},"@_msgSender_4927":{"entryPoint":null,"id":4927,"parameterSlots":0,"returnSlots":1},"@_quorumReached_2251":{"entryPoint":10215,"id":2251,"parameterSlots":1,"returnSlots":1},"@_revert_3373":{"entryPoint":14063,"id":3373,"parameterSlots":2,"returnSlots":0},"@_revokeRole_314":{"entryPoint":10068,"id":314,"parameterSlots":2,"returnSlots":0},"@_setProposalThreshold_2542":{"entryPoint":11426,"id":2542,"parameterSlots":1,"returnSlots":0},"@_setVotingDelay_2503":{"entryPoint":10742,"id":2503,"parameterSlots":1,"returnSlots":0},"@_setVotingPeriod_2526":{"entryPoint":11265,"id":2526,"parameterSlots":1,"returnSlots":0},"@_throwError_5620":{"entryPoint":12811,"id":5620,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_4412":{"entryPoint":null,"id":4412,"parameterSlots":2,"returnSlots":1},"@_updateQuorumNumerator_2854":{"entryPoint":9170,"id":2854,"parameterSlots":1,"returnSlots":0},"@_upperBinaryLookup_4345":{"entryPoint":13906,"id":4345,"parameterSlots":4,"returnSlots":1},"@_voteSucceeded_2274":{"entryPoint":null,"id":2274,"parameterSlots":1,"returnSlots":1},"@apartamentToDateToMonthlyPayments_9159":{"entryPoint":null,"id":9159,"parameterSlots":0,"returnSlots":0},"@archivedBills_9139":{"entryPoint":7400,"id":9139,"parameterSlots":0,"returnSlots":0},"@average_6238":{"entryPoint":14704,"id":6238,"parameterSlots":2,"returnSlots":1},"@bills_9135":{"entryPoint":4093,"id":9135,"parameterSlots":0,"returnSlots":0},"@byteLength_5128":{"entryPoint":14731,"id":5128,"parameterSlots":1,"returnSlots":1},"@cancel_1145":{"entryPoint":4920,"id":1145,"parameterSlots":4,"returnSlots":1},"@castVoteBySig_1530":{"entryPoint":4485,"id":1530,"parameterSlots":5,"returnSlots":1},"@castVoteWithReasonAndParamsBySig_1588":{"entryPoint":3328,"id":1588,"parameterSlots":8,"returnSlots":1},"@castVoteWithReasonAndParams_1486":{"entryPoint":5443,"id":1486,"parameterSlots":5,"returnSlots":1},"@castVoteWithReason_1457":{"entryPoint":6076,"id":1457,"parameterSlots":4,"returnSlots":1},"@castVote_1431":{"entryPoint":5402,"id":1431,"parameterSlots":2,"returnSlots":1},"@clear_8982":{"entryPoint":null,"id":8982,"parameterSlots":1,"returnSlots":0},"@clock_2596":{"entryPoint":7225,"id":2596,"parameterSlots":0,"returnSlots":1},"@dateToApartamentToMonthlyPayments_9166":{"entryPoint":null,"id":9166,"parameterSlots":0,"returnSlots":0},"@eip712Domain_6135":{"entryPoint":7046,"id":6135,"parameterSlots":0,"returnSlots":7},"@empty_9024":{"entryPoint":null,"id":9024,"parameterSlots":1,"returnSlots":1},"@execute_1089":{"entryPoint":3793,"id":1089,"parameterSlots":4,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@getStringSlot_5314":{"entryPoint":8179,"id":5314,"parameterSlots":1,"returnSlots":1},"@getVotesWithParams_1407":{"entryPoint":7377,"id":1407,"parameterSlots":3,"returnSlots":1},"@getVotes_1387":{"entryPoint":8012,"id":1387,"parameterSlots":2,"returnSlots":1},"@grantRole_166":{"entryPoint":4306,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":7182,"id":79,"parameterSlots":2,"returnSlots":1},"@hasVoted_2194":{"entryPoint":null,"id":2194,"parameterSlots":2,"returnSlots":1},"@hashProposal_664":{"entryPoint":7849,"id":664,"parameterSlots":4,"returnSlots":1},"@latest_4140":{"entryPoint":8419,"id":4140,"parameterSlots":1,"returnSlots":1},"@log2_6710":{"entryPoint":14534,"id":6710,"parameterSlots":1,"returnSlots":1},"@min_6215":{"entryPoint":14682,"id":6215,"parameterSlots":2,"returnSlots":1},"@name_622":{"entryPoint":3647,"id":622,"parameterSlots":0,"returnSlots":1},"@onERC1155BatchReceived_1799":{"entryPoint":null,"id":1799,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_1775":{"entryPoint":null,"id":1775,"parameterSlots":5,"returnSlots":1},"@onERC721Received_1753":{"entryPoint":null,"id":1753,"parameterSlots":4,"returnSlots":1},"@popFront_8861":{"entryPoint":9043,"id":8861,"parameterSlots":1,"returnSlots":1},"@proposalDeadline_793":{"entryPoint":null,"id":793,"parameterSlots":1,"returnSlots":1},"@proposalProposer_808":{"entryPoint":null,"id":808,"parameterSlots":1,"returnSlots":1},"@proposalSnapshot_778":{"entryPoint":null,"id":778,"parameterSlots":1,"returnSlots":1},"@proposalThreshold_2448":{"entryPoint":null,"id":2448,"parameterSlots":0,"returnSlots":1},"@proposalThreshold_9252":{"entryPoint":7634,"id":9252,"parameterSlots":0,"returnSlots":1},"@proposalVotes_2222":{"entryPoint":null,"id":2222,"parameterSlots":1,"returnSlots":3},"@propose_1004":{"entryPoint":6148,"id":1004,"parameterSlots":4,"returnSlots":1},"@pushBack_8735":{"entryPoint":13528,"id":8735,"parameterSlots":2,"returnSlots":0},"@push_3943":{"entryPoint":8392,"id":3943,"parameterSlots":3,"returnSlots":2},"@quorumDenominator_2753":{"entryPoint":null,"id":2753,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2693":{"entryPoint":7416,"id":2693,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2744":{"entryPoint":5517,"id":2744,"parameterSlots":1,"returnSlots":1},"@quorum_2776":{"entryPoint":11491,"id":2776,"parameterSlots":1,"returnSlots":1},"@quorum_9239":{"entryPoint":8113,"id":9239,"parameterSlots":1,"returnSlots":1},"@recover_5867":{"entryPoint":8675,"id":5867,"parameterSlots":4,"returnSlots":1},"@relay_1721":{"entryPoint":7645,"id":1721,"parameterSlots":4,"returnSlots":0},"@renounceRole_209":{"entryPoint":4348,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":7907,"id":186,"parameterSlots":2,"returnSlots":0},"@setProposalThreshold_2487":{"entryPoint":8045,"id":2487,"parameterSlots":1,"returnSlots":0},"@setVotingDelay_2461":{"entryPoint":5692,"id":2461,"parameterSlots":1,"returnSlots":0},"@setVotingPeriod_2474":{"entryPoint":7944,"id":2474,"parameterSlots":1,"returnSlots":0},"@spaces_9152":{"entryPoint":5760,"id":9152,"parameterSlots":0,"returnSlots":0},"@sqrt_6542":{"entryPoint":13677,"id":6542,"parameterSlots":1,"returnSlots":1},"@state_754":{"entryPoint":4603,"id":754,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":8593,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_612":{"entryPoint":12160,"id":612,"parameterSlots":1,"returnSlots":1},"@supportsInterface_6159":{"entryPoint":null,"id":6159,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9268":{"entryPoint":3295,"id":9268,"parameterSlots":1,"returnSlots":1},"@toHexString_5520":{"entryPoint":14123,"id":5520,"parameterSlots":2,"returnSlots":1},"@toHexString_5540":{"entryPoint":14105,"id":5540,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_5168":{"entryPoint":8124,"id":5168,"parameterSlots":2,"returnSlots":1},"@toShortString_5070":{"entryPoint":11676,"id":5070,"parameterSlots":1,"returnSlots":1},"@toStringWithFallback_5195":{"entryPoint":10911,"id":5195,"parameterSlots":2,"returnSlots":1},"@toString_5096":{"entryPoint":14000,"id":5096,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_5911":{"entryPoint":null,"id":5911,"parameterSlots":2,"returnSlots":1},"@toUint224_7141":{"entryPoint":8182,"id":7141,"parameterSlots":1,"returnSlots":1},"@toUint32_7741":{"entryPoint":8291,"id":7741,"parameterSlots":1,"returnSlots":1},"@toUint48_7691":{"entryPoint":8490,"id":7691,"parameterSlots":1,"returnSlots":1},"@toUint64_7641":{"entryPoint":10807,"id":7641,"parameterSlots":1,"returnSlots":1},"@token_2553":{"entryPoint":null,"id":2553,"parameterSlots":0,"returnSlots":0},"@tryRecover_5834":{"entryPoint":12615,"id":5834,"parameterSlots":4,"returnSlots":2},"@updateQuorumNumerator_2789":{"entryPoint":3576,"id":2789,"parameterSlots":1,"returnSlots":0},"@upperLookupRecent_4110":{"entryPoint":10577,"id":4110,"parameterSlots":2,"returnSlots":1},"@users_9144":{"entryPoint":7458,"id":9144,"parameterSlots":0,"returnSlots":0},"@verifyCallResult_3353":{"entryPoint":11240,"id":3353,"parameterSlots":3,"returnSlots":1},"@version_632":{"entryPoint":null,"id":632,"parameterSlots":0,"returnSlots":1},"@votingDelay_2428":{"entryPoint":null,"id":2428,"parameterSlots":0,"returnSlots":1},"@votingDelay_9210":{"entryPoint":4474,"id":9210,"parameterSlots":0,"returnSlots":1},"@votingPeriod_2438":{"entryPoint":null,"id":2438,"parameterSlots":0,"returnSlots":1},"@votingPeriod_9223":{"entryPoint":3312,"id":9223,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":15551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":15712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes_dyn":{"entryPoint":15912,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":15821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":15155,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":15217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":14974,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":17244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":17313,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":15574,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":17563,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17521,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":17456,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":17158,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32":{"entryPoint":16039,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr":{"entryPoint":16821,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":16239,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":14915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":17793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":18698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":16409,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint8":{"entryPoint":16496,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr":{"entryPoint":16732,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr":{"entryPoint":16531,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32":{"entryPoint":15249,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32":{"entryPoint":16283,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint48_fromMemory":{"entryPoint":18418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":14957,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":18058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":18115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":17001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":15488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17663,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18846,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":18458,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17060,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC5805_$2970__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_MonthlyPaymentStatusEnum_$9055_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":16459,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_ProposalState_$1818__to_t_uint8__fromStack_reversed":{"entryPoint":16383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool__fromStack_reversed":{"entryPoint":17271,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_enum$_SpaceStatusEnum_$9060__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":16662,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_address_t_address__to_t_string_memory_ptr_t_uint256_t_address_t_address__fromStack_reversed":{"entryPoint":16182,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d2e29ce59569b0aa60766c059f36bf339acf9681f1221eaac1078daa5d3d129__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_397853bd9e6f0888f5fdcc37d267617a8f74b5e4540887757482a2da22f4cdfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3fd25dc9791b847d14d0815e84967e87bbf815be3a68ecdd58e99f67196ddc7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18203,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18533,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18573,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":15068,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":15677,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":15116,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18034,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":18776,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":18723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":17924,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":18810,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":15440,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":18963,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":17734,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18643,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17902,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18754,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16361,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17947,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15046,"id":null,"parameterSlots":0,"returnSlots":0},"validator_assert_enum_MonthlyPaymentStatusEnum":{"entryPoint":16443,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:42246:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:181:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:31"},"nodeType":"YulFunctionCall","src":"198:21:31"},"nodeType":"YulExpressionStatement","src":"198:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:31"},"nodeType":"YulFunctionCall","src":"235:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:31","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:31"},"nodeType":"YulFunctionCall","src":"228:30:31"},"nodeType":"YulExpressionStatement","src":"228:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:31"},"nodeType":"YulFunctionCall","src":"274:18:31"},{"hexValue":"476f7665726e6f723a206d7573742073656e6420746f206578656375746f72","kind":"string","nodeType":"YulLiteral","src":"294:33:31","type":"","value":"Governor: must send to executor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:31"},"nodeType":"YulFunctionCall","src":"267:61:31"},"nodeType":"YulExpressionStatement","src":"267:61:31"},{"nodeType":"YulAssignment","src":"337:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:31"},"nodeType":"YulFunctionCall","src":"345:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"337:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d2e29ce59569b0aa60766c059f36bf339acf9681f1221eaac1078daa5d3d129__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:31","type":""}],"src":"14:355:31"},{"body":{"nodeType":"YulBlock","src":"443:217:31","statements":[{"body":{"nodeType":"YulBlock","src":"489:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"498:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"501:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"491:6:31"},"nodeType":"YulFunctionCall","src":"491:12:31"},"nodeType":"YulExpressionStatement","src":"491:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"464:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"473:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"460:3:31"},"nodeType":"YulFunctionCall","src":"460:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"485:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"456:3:31"},"nodeType":"YulFunctionCall","src":"456:32:31"},"nodeType":"YulIf","src":"453:52:31"},{"nodeType":"YulVariableDeclaration","src":"514:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"540:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"527:12:31"},"nodeType":"YulFunctionCall","src":"527:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"518:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"614:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"623:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"616:6:31"},"nodeType":"YulFunctionCall","src":"616:12:31"},"nodeType":"YulExpressionStatement","src":"616:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"572:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"583:5:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"594:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"599:10:31","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"590:3:31"},"nodeType":"YulFunctionCall","src":"590:20:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"579:3:31"},"nodeType":"YulFunctionCall","src":"579:32:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"569:2:31"},"nodeType":"YulFunctionCall","src":"569:43:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"562:6:31"},"nodeType":"YulFunctionCall","src":"562:51:31"},"nodeType":"YulIf","src":"559:71:31"},{"nodeType":"YulAssignment","src":"639:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"649:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"639:6:31"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"409:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"420:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"432:6:31","type":""}],"src":"374:286:31"},{"body":{"nodeType":"YulBlock","src":"760:92:31","statements":[{"nodeType":"YulAssignment","src":"770:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"793:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:31"},"nodeType":"YulFunctionCall","src":"778:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"770:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:31"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"837:6:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"830:6:31"},"nodeType":"YulFunctionCall","src":"830:14:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"823:6:31"},"nodeType":"YulFunctionCall","src":"823:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"805:6:31"},"nodeType":"YulFunctionCall","src":"805:41:31"},"nodeType":"YulExpressionStatement","src":"805:41:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"729:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"740:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"751:4:31","type":""}],"src":"665:187:31"},{"body":{"nodeType":"YulBlock","src":"958:76:31","statements":[{"nodeType":"YulAssignment","src":"968:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"980:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"991:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"976:3:31"},"nodeType":"YulFunctionCall","src":"976:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"968:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1010:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"1021:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:31"},"nodeType":"YulFunctionCall","src":"1003:25:31"},"nodeType":"YulExpressionStatement","src":"1003:25:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"927:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"938:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"949:4:31","type":""}],"src":"857:177:31"},{"body":{"nodeType":"YulBlock","src":"1140:76:31","statements":[{"nodeType":"YulAssignment","src":"1150:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1162:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1173:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1158:3:31"},"nodeType":"YulFunctionCall","src":"1158:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1150:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1192:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"1203:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1185:6:31"},"nodeType":"YulFunctionCall","src":"1185:25:31"},"nodeType":"YulExpressionStatement","src":"1185:25:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1109:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1120:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1131:4:31","type":""}],"src":"1039:177:31"},{"body":{"nodeType":"YulBlock","src":"1268:109:31","statements":[{"nodeType":"YulAssignment","src":"1278:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1300:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1287:12:31"},"nodeType":"YulFunctionCall","src":"1287:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1278:5:31"}]},{"body":{"nodeType":"YulBlock","src":"1355:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1364:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1367:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1357:6:31"},"nodeType":"YulFunctionCall","src":"1357:12:31"},"nodeType":"YulExpressionStatement","src":"1357:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1329:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1340:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"1347:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1336:3:31"},"nodeType":"YulFunctionCall","src":"1336:16:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1326:2:31"},"nodeType":"YulFunctionCall","src":"1326:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1319:6:31"},"nodeType":"YulFunctionCall","src":"1319:35:31"},"nodeType":"YulIf","src":"1316:55:31"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1247:6:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1258:5:31","type":""}],"src":"1221:156:31"},{"body":{"nodeType":"YulBlock","src":"1455:275:31","statements":[{"body":{"nodeType":"YulBlock","src":"1504:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1513:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1516:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1506:6:31"},"nodeType":"YulFunctionCall","src":"1506:12:31"},"nodeType":"YulExpressionStatement","src":"1506:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1483:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1491:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:31"},"nodeType":"YulFunctionCall","src":"1479:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"1498:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1475:3:31"},"nodeType":"YulFunctionCall","src":"1475:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1468:6:31"},"nodeType":"YulFunctionCall","src":"1468:35:31"},"nodeType":"YulIf","src":"1465:55:31"},{"nodeType":"YulAssignment","src":"1529:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1552:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1539:12:31"},"nodeType":"YulFunctionCall","src":"1539:20:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1529:6:31"}]},{"body":{"nodeType":"YulBlock","src":"1602:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1614:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1604:6:31"},"nodeType":"YulFunctionCall","src":"1604:12:31"},"nodeType":"YulExpressionStatement","src":"1604:12:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1574:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1582:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1571:2:31"},"nodeType":"YulFunctionCall","src":"1571:30:31"},"nodeType":"YulIf","src":"1568:50:31"},{"nodeType":"YulAssignment","src":"1627:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1643:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1651:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:31"},"nodeType":"YulFunctionCall","src":"1639:17:31"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1627:8:31"}]},{"body":{"nodeType":"YulBlock","src":"1708:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1720:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1710:6:31"},"nodeType":"YulFunctionCall","src":"1710:12:31"},"nodeType":"YulExpressionStatement","src":"1710:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1679:6:31"},{"name":"length","nodeType":"YulIdentifier","src":"1687:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1675:3:31"},"nodeType":"YulFunctionCall","src":"1675:19:31"},{"kind":"number","nodeType":"YulLiteral","src":"1696:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1671:3:31"},"nodeType":"YulFunctionCall","src":"1671:30:31"},{"name":"end","nodeType":"YulIdentifier","src":"1703:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1668:2:31"},"nodeType":"YulFunctionCall","src":"1668:39:31"},"nodeType":"YulIf","src":"1665:59:31"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1418:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"1426:3:31","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1434:8:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"1444:6:31","type":""}],"src":"1382:348:31"},{"body":{"nodeType":"YulBlock","src":"1767:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1784:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1796:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1787:3:31"},"nodeType":"YulFunctionCall","src":"1787:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1777:6:31"},"nodeType":"YulFunctionCall","src":"1777:31:31"},"nodeType":"YulExpressionStatement","src":"1777:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1824:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1827:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1817:6:31"},"nodeType":"YulFunctionCall","src":"1817:15:31"},"nodeType":"YulExpressionStatement","src":"1817:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1848:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1851:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1841:6:31"},"nodeType":"YulFunctionCall","src":"1841:15:31"},"nodeType":"YulExpressionStatement","src":"1841:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1735:127:31"},{"body":{"nodeType":"YulBlock","src":"1912:230:31","statements":[{"nodeType":"YulAssignment","src":"1922:19:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1938:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1932:5:31"},"nodeType":"YulFunctionCall","src":"1932:9:31"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1922:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"1950:58:31","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1972:6:31"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1988:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"1994:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1984:3:31"},"nodeType":"YulFunctionCall","src":"1984:13:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2003:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1999:3:31"},"nodeType":"YulFunctionCall","src":"1999:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1980:3:31"},"nodeType":"YulFunctionCall","src":"1980:27:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:31"},"nodeType":"YulFunctionCall","src":"1968:40:31"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1954:10:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"2083:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2085:16:31"},"nodeType":"YulFunctionCall","src":"2085:18:31"},"nodeType":"YulExpressionStatement","src":"2085:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2026:10:31"},{"kind":"number","nodeType":"YulLiteral","src":"2038:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2023:2:31"},"nodeType":"YulFunctionCall","src":"2023:34:31"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2062:10:31"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2074:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2059:2:31"},"nodeType":"YulFunctionCall","src":"2059:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2020:2:31"},"nodeType":"YulFunctionCall","src":"2020:62:31"},"nodeType":"YulIf","src":"2017:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2121:2:31","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2125:10:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2114:6:31"},"nodeType":"YulFunctionCall","src":"2114:22:31"},"nodeType":"YulExpressionStatement","src":"2114:22:31"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1892:4:31","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1901:6:31","type":""}],"src":"1867:275:31"},{"body":{"nodeType":"YulBlock","src":"2204:129:31","statements":[{"body":{"nodeType":"YulBlock","src":"2248:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2250:16:31"},"nodeType":"YulFunctionCall","src":"2250:18:31"},"nodeType":"YulExpressionStatement","src":"2250:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2220:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2228:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2217:2:31"},"nodeType":"YulFunctionCall","src":"2217:30:31"},"nodeType":"YulIf","src":"2214:56:31"},{"nodeType":"YulAssignment","src":"2279:48:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2299:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2307:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:31"},"nodeType":"YulFunctionCall","src":"2295:15:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2316:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2312:3:31"},"nodeType":"YulFunctionCall","src":"2312:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2291:3:31"},"nodeType":"YulFunctionCall","src":"2291:29:31"},{"kind":"number","nodeType":"YulLiteral","src":"2322:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2287:3:31"},"nodeType":"YulFunctionCall","src":"2287:40:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2279:4:31"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2184:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2195:4:31","type":""}],"src":"2147:186:31"},{"body":{"nodeType":"YulBlock","src":"2412:262:31","statements":[{"nodeType":"YulAssignment","src":"2422:61:31","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2475:6:31"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"2447:27:31"},"nodeType":"YulFunctionCall","src":"2447:35:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2431:15:31"},"nodeType":"YulFunctionCall","src":"2431:52:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2422:5:31"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2499:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"2506:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2492:6:31"},"nodeType":"YulFunctionCall","src":"2492:21:31"},"nodeType":"YulExpressionStatement","src":"2492:21:31"},{"body":{"nodeType":"YulBlock","src":"2551:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2560:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2563:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2553:6:31"},"nodeType":"YulFunctionCall","src":"2553:12:31"},"nodeType":"YulExpressionStatement","src":"2553:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2532:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2537:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2528:3:31"},"nodeType":"YulFunctionCall","src":"2528:16:31"},{"name":"end","nodeType":"YulIdentifier","src":"2546:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2525:2:31"},"nodeType":"YulFunctionCall","src":"2525:25:31"},"nodeType":"YulIf","src":"2522:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2593:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"2600:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:31"},"nodeType":"YulFunctionCall","src":"2589:16:31"},{"name":"src","nodeType":"YulIdentifier","src":"2607:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"2612:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2576:12:31"},"nodeType":"YulFunctionCall","src":"2576:43:31"},"nodeType":"YulExpressionStatement","src":"2576:43:31"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2643:5:31"},{"name":"length","nodeType":"YulIdentifier","src":"2650:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2639:3:31"},"nodeType":"YulFunctionCall","src":"2639:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"2659:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:31"},"nodeType":"YulFunctionCall","src":"2635:29:31"},{"kind":"number","nodeType":"YulLiteral","src":"2666:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2628:6:31"},"nodeType":"YulFunctionCall","src":"2628:40:31"},"nodeType":"YulExpressionStatement","src":"2628:40:31"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2381:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"2386:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2394:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2402:5:31","type":""}],"src":"2338:336:31"},{"body":{"nodeType":"YulBlock","src":"2731:168:31","statements":[{"body":{"nodeType":"YulBlock","src":"2780:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2789:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2792:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2782:6:31"},"nodeType":"YulFunctionCall","src":"2782:12:31"},"nodeType":"YulExpressionStatement","src":"2782:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2759:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2767:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2755:3:31"},"nodeType":"YulFunctionCall","src":"2755:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"2774:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2751:3:31"},"nodeType":"YulFunctionCall","src":"2751:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2744:6:31"},"nodeType":"YulFunctionCall","src":"2744:35:31"},"nodeType":"YulIf","src":"2741:55:31"},{"nodeType":"YulAssignment","src":"2805:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2852:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"2860:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2848:3:31"},"nodeType":"YulFunctionCall","src":"2848:17:31"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2880:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2867:12:31"},"nodeType":"YulFunctionCall","src":"2867:20:31"},{"name":"end","nodeType":"YulIdentifier","src":"2889:3:31"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"2814:33:31"},"nodeType":"YulFunctionCall","src":"2814:79:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2805:5:31"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2705:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"2713:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2721:5:31","type":""}],"src":"2679:220:31"},{"body":{"nodeType":"YulBlock","src":"3101:781:31","statements":[{"body":{"nodeType":"YulBlock","src":"3148:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3157:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3160:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3150:6:31"},"nodeType":"YulFunctionCall","src":"3150:12:31"},"nodeType":"YulExpressionStatement","src":"3150:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3122:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3131:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3118:3:31"},"nodeType":"YulFunctionCall","src":"3118:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3143:3:31","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3114:3:31"},"nodeType":"YulFunctionCall","src":"3114:33:31"},"nodeType":"YulIf","src":"3111:53:31"},{"nodeType":"YulAssignment","src":"3173:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3196:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3183:12:31"},"nodeType":"YulFunctionCall","src":"3183:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:31"}]},{"nodeType":"YulAssignment","src":"3215:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3246:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3257:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3242:3:31"},"nodeType":"YulFunctionCall","src":"3242:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"3225:16:31"},"nodeType":"YulFunctionCall","src":"3225:36:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3215:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"3270:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3301:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3312:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3297:3:31"},"nodeType":"YulFunctionCall","src":"3297:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3284:12:31"},"nodeType":"YulFunctionCall","src":"3284:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3274:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3325:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3335:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3329:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3389:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3392:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3382:6:31"},"nodeType":"YulFunctionCall","src":"3382:12:31"},"nodeType":"YulExpressionStatement","src":"3382:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3368:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"3376:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3365:2:31"},"nodeType":"YulFunctionCall","src":"3365:14:31"},"nodeType":"YulIf","src":"3362:34:31"},{"nodeType":"YulVariableDeclaration","src":"3405:85:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3462:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"3473:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3458:3:31"},"nodeType":"YulFunctionCall","src":"3458:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3482:7:31"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3431:26:31"},"nodeType":"YulFunctionCall","src":"3431:59:31"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"3409:8:31","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"3419:8:31","type":""}]},{"nodeType":"YulAssignment","src":"3499:18:31","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3509:8:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3499:6:31"}]},{"nodeType":"YulAssignment","src":"3526:18:31","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3536:8:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3526:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"3553:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3586:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3597:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3582:3:31"},"nodeType":"YulFunctionCall","src":"3582:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3569:12:31"},"nodeType":"YulFunctionCall","src":"3569:32:31"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3557:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3630:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3639:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3642:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3632:6:31"},"nodeType":"YulFunctionCall","src":"3632:12:31"},"nodeType":"YulExpressionStatement","src":"3632:12:31"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3616:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"3626:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3613:2:31"},"nodeType":"YulFunctionCall","src":"3613:16:31"},"nodeType":"YulIf","src":"3610:36:31"},{"nodeType":"YulAssignment","src":"3655:61:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3686:9:31"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3697:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3682:3:31"},"nodeType":"YulFunctionCall","src":"3682:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3708:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3665:16:31"},"nodeType":"YulFunctionCall","src":"3665:51:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3655:6:31"}]},{"nodeType":"YulAssignment","src":"3725:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3756:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3767:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3752:3:31"},"nodeType":"YulFunctionCall","src":"3752:19:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"3735:16:31"},"nodeType":"YulFunctionCall","src":"3735:37:31"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3725:6:31"}]},{"nodeType":"YulAssignment","src":"3781:43:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3808:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3819:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3804:3:31"},"nodeType":"YulFunctionCall","src":"3804:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3791:12:31"},"nodeType":"YulFunctionCall","src":"3791:33:31"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3781:6:31"}]},{"nodeType":"YulAssignment","src":"3833:43:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3860:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3871:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:31"},"nodeType":"YulFunctionCall","src":"3856:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3843:12:31"},"nodeType":"YulFunctionCall","src":"3843:33:31"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3833:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3066:6:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3074:6:31","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3082:6:31","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3090:6:31","type":""}],"src":"2904:978:31"},{"body":{"nodeType":"YulBlock","src":"3957:110:31","statements":[{"body":{"nodeType":"YulBlock","src":"4003:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4012:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4015:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4005:6:31"},"nodeType":"YulFunctionCall","src":"4005:12:31"},"nodeType":"YulExpressionStatement","src":"4005:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3978:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3987:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3974:3:31"},"nodeType":"YulFunctionCall","src":"3974:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3999:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3970:3:31"},"nodeType":"YulFunctionCall","src":"3970:32:31"},"nodeType":"YulIf","src":"3967:52:31"},{"nodeType":"YulAssignment","src":"4028:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4051:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4038:12:31"},"nodeType":"YulFunctionCall","src":"4038:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4028:6:31"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3923:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3934:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3946:6:31","type":""}],"src":"3887:180:31"},{"body":{"nodeType":"YulBlock","src":"4125:205:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4135:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"4144:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4139:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4204:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4229:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"4234:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4225:3:31"},"nodeType":"YulFunctionCall","src":"4225:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4248:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"4253:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:31"},"nodeType":"YulFunctionCall","src":"4244:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4238:5:31"},"nodeType":"YulFunctionCall","src":"4238:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4218:6:31"},"nodeType":"YulFunctionCall","src":"4218:39:31"},"nodeType":"YulExpressionStatement","src":"4218:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4165:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"4168:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4162:2:31"},"nodeType":"YulFunctionCall","src":"4162:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4176:19:31","statements":[{"nodeType":"YulAssignment","src":"4178:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4187:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4190:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4183:3:31"},"nodeType":"YulFunctionCall","src":"4183:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4178:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"4158:3:31","statements":[]},"src":"4154:113:31"},{"body":{"nodeType":"YulBlock","src":"4293:31:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4306:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4311:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4302:3:31"},"nodeType":"YulFunctionCall","src":"4302:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"4320:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4295:6:31"},"nodeType":"YulFunctionCall","src":"4295:27:31"},"nodeType":"YulExpressionStatement","src":"4295:27:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4282:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"4285:6:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4279:2:31"},"nodeType":"YulFunctionCall","src":"4279:13:31"},"nodeType":"YulIf","src":"4276:48:31"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4103:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4108:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"4113:6:31","type":""}],"src":"4072:258:31"},{"body":{"nodeType":"YulBlock","src":"4385:208:31","statements":[{"nodeType":"YulVariableDeclaration","src":"4395:26:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4415:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4409:5:31"},"nodeType":"YulFunctionCall","src":"4409:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4399:6:31","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4437:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"4442:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4430:6:31"},"nodeType":"YulFunctionCall","src":"4430:19:31"},"nodeType":"YulExpressionStatement","src":"4430:19:31"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4484:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4491:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4480:3:31"},"nodeType":"YulFunctionCall","src":"4480:16:31"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4502:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"4507:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4498:3:31"},"nodeType":"YulFunctionCall","src":"4498:14:31"},{"name":"length","nodeType":"YulIdentifier","src":"4514:6:31"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4458:21:31"},"nodeType":"YulFunctionCall","src":"4458:63:31"},"nodeType":"YulExpressionStatement","src":"4458:63:31"},{"nodeType":"YulAssignment","src":"4530:57:31","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4545:3:31"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4558:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:31"},"nodeType":"YulFunctionCall","src":"4554:15:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4575:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4571:3:31"},"nodeType":"YulFunctionCall","src":"4571:7:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:31"},"nodeType":"YulFunctionCall","src":"4550:29:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4541:3:31"},"nodeType":"YulFunctionCall","src":"4541:39:31"},{"kind":"number","nodeType":"YulLiteral","src":"4582:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:31"},"nodeType":"YulFunctionCall","src":"4537:50:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4530:3:31"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4362:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4369:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4377:3:31","type":""}],"src":"4335:258:31"},{"body":{"nodeType":"YulBlock","src":"4719:99:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4736:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4747:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4729:6:31"},"nodeType":"YulFunctionCall","src":"4729:21:31"},"nodeType":"YulExpressionStatement","src":"4729:21:31"},{"nodeType":"YulAssignment","src":"4759:53:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4785:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:31"},"nodeType":"YulFunctionCall","src":"4793:18:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4767:17:31"},"nodeType":"YulFunctionCall","src":"4767:45:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4759:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4688:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4699:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4710:4:31","type":""}],"src":"4598:220:31"},{"body":{"nodeType":"YulBlock","src":"4924:102:31","statements":[{"nodeType":"YulAssignment","src":"4934:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:31"},"nodeType":"YulFunctionCall","src":"4942:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4934:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4976:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4991:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5007:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5012:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5003:3:31"},"nodeType":"YulFunctionCall","src":"5003:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"5016:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4999:3:31"},"nodeType":"YulFunctionCall","src":"4999:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:31"},"nodeType":"YulFunctionCall","src":"4987:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4969:6:31"},"nodeType":"YulFunctionCall","src":"4969:51:31"},"nodeType":"YulExpressionStatement","src":"4969:51:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4893:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4904:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4915:4:31","type":""}],"src":"4823:203:31"},{"body":{"nodeType":"YulBlock","src":"5080:124:31","statements":[{"nodeType":"YulAssignment","src":"5090:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5112:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5099:12:31"},"nodeType":"YulFunctionCall","src":"5099:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5090:5:31"}]},{"body":{"nodeType":"YulBlock","src":"5182:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5184:6:31"},"nodeType":"YulFunctionCall","src":"5184:12:31"},"nodeType":"YulExpressionStatement","src":"5184:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5141:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5152:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5167:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5172:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5163:3:31"},"nodeType":"YulFunctionCall","src":"5163:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"5176:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5159:3:31"},"nodeType":"YulFunctionCall","src":"5159:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5148:3:31"},"nodeType":"YulFunctionCall","src":"5148:31:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5138:2:31"},"nodeType":"YulFunctionCall","src":"5138:42:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5131:6:31"},"nodeType":"YulFunctionCall","src":"5131:50:31"},"nodeType":"YulIf","src":"5128:70:31"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5059:6:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5070:5:31","type":""}],"src":"5031:173:31"},{"body":{"nodeType":"YulBlock","src":"5339:407:31","statements":[{"body":{"nodeType":"YulBlock","src":"5386:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5395:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5398:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5388:6:31"},"nodeType":"YulFunctionCall","src":"5388:12:31"},"nodeType":"YulExpressionStatement","src":"5388:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5360:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5356:3:31"},"nodeType":"YulFunctionCall","src":"5356:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5381:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5352:3:31"},"nodeType":"YulFunctionCall","src":"5352:33:31"},"nodeType":"YulIf","src":"5349:53:31"},{"nodeType":"YulAssignment","src":"5411:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5440:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5421:18:31"},"nodeType":"YulFunctionCall","src":"5421:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5411:6:31"}]},{"nodeType":"YulAssignment","src":"5459:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5503:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5488:3:31"},"nodeType":"YulFunctionCall","src":"5488:18:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5469:18:31"},"nodeType":"YulFunctionCall","src":"5469:38:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5459:6:31"}]},{"nodeType":"YulAssignment","src":"5516:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5554:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5539:3:31"},"nodeType":"YulFunctionCall","src":"5539:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5526:12:31"},"nodeType":"YulFunctionCall","src":"5526:32:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5516:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"5567:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5609:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:31"},"nodeType":"YulFunctionCall","src":"5594:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5581:12:31"},"nodeType":"YulFunctionCall","src":"5581:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5571:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"5656:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5665:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5668:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5658:6:31"},"nodeType":"YulFunctionCall","src":"5658:12:31"},"nodeType":"YulExpressionStatement","src":"5658:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5636:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5625:2:31"},"nodeType":"YulFunctionCall","src":"5625:30:31"},"nodeType":"YulIf","src":"5622:50:31"},{"nodeType":"YulAssignment","src":"5681:59:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"5723:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:31"},"nodeType":"YulFunctionCall","src":"5708:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5732:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5691:16:31"},"nodeType":"YulFunctionCall","src":"5691:49:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5681:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5320:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5328:6:31","type":""}],"src":"5209:537:31"},{"body":{"nodeType":"YulBlock","src":"5850:103:31","statements":[{"nodeType":"YulAssignment","src":"5860:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:31"},"nodeType":"YulFunctionCall","src":"5868:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5860:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5902:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5917:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5929:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5934:10:31","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5925:3:31"},"nodeType":"YulFunctionCall","src":"5925:20:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5913:3:31"},"nodeType":"YulFunctionCall","src":"5913:33:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5895:6:31"},"nodeType":"YulFunctionCall","src":"5895:52:31"},"nodeType":"YulExpressionStatement","src":"5895:52:31"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5819:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5830:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5841:4:31","type":""}],"src":"5751:202:31"},{"body":{"nodeType":"YulBlock","src":"6028:110:31","statements":[{"body":{"nodeType":"YulBlock","src":"6074:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6083:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6086:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6076:6:31"},"nodeType":"YulFunctionCall","src":"6076:12:31"},"nodeType":"YulExpressionStatement","src":"6076:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6049:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6045:3:31"},"nodeType":"YulFunctionCall","src":"6045:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"6070:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6041:3:31"},"nodeType":"YulFunctionCall","src":"6041:32:31"},"nodeType":"YulIf","src":"6038:52:31"},{"nodeType":"YulAssignment","src":"6099:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6122:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6109:12:31"},"nodeType":"YulFunctionCall","src":"6109:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6099:6:31"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5994:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6005:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6017:6:31","type":""}],"src":"5958:180:31"},{"body":{"nodeType":"YulBlock","src":"6212:114:31","statements":[{"body":{"nodeType":"YulBlock","src":"6256:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6258:16:31"},"nodeType":"YulFunctionCall","src":"6258:18:31"},"nodeType":"YulExpressionStatement","src":"6258:18:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6228:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6236:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6225:2:31"},"nodeType":"YulFunctionCall","src":"6225:30:31"},"nodeType":"YulIf","src":"6222:56:31"},{"nodeType":"YulAssignment","src":"6287:33:31","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6303:1:31","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6306:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6299:3:31"},"nodeType":"YulFunctionCall","src":"6299:14:31"},{"kind":"number","nodeType":"YulLiteral","src":"6315:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6295:3:31"},"nodeType":"YulFunctionCall","src":"6295:25:31"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6287:4:31"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6192:6:31","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6203:4:31","type":""}],"src":"6143:183:31"},{"body":{"nodeType":"YulBlock","src":"6395:604:31","statements":[{"body":{"nodeType":"YulBlock","src":"6444:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6453:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6456:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6446:6:31"},"nodeType":"YulFunctionCall","src":"6446:12:31"},"nodeType":"YulExpressionStatement","src":"6446:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6423:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6431:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:31"},"nodeType":"YulFunctionCall","src":"6419:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"6438:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6415:3:31"},"nodeType":"YulFunctionCall","src":"6415:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6408:6:31"},"nodeType":"YulFunctionCall","src":"6408:35:31"},"nodeType":"YulIf","src":"6405:55:31"},{"nodeType":"YulVariableDeclaration","src":"6469:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6492:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6479:12:31"},"nodeType":"YulFunctionCall","src":"6479:20:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6473:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6508:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"6518:4:31","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6512:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6531:71:31","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6598:2:31"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"6558:39:31"},"nodeType":"YulFunctionCall","src":"6558:43:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6542:15:31"},"nodeType":"YulFunctionCall","src":"6542:60:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6535:3:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6611:16:31","value":{"name":"dst","nodeType":"YulIdentifier","src":"6624:3:31"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6615:5:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6643:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"6648:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6636:6:31"},"nodeType":"YulFunctionCall","src":"6636:15:31"},"nodeType":"YulExpressionStatement","src":"6636:15:31"},{"nodeType":"YulAssignment","src":"6660:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6671:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"6676:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6667:3:31"},"nodeType":"YulFunctionCall","src":"6667:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6660:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"6688:46:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6710:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6722:1:31","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"6725:2:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6718:3:31"},"nodeType":"YulFunctionCall","src":"6718:10:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6706:3:31"},"nodeType":"YulFunctionCall","src":"6706:23:31"},{"name":"_2","nodeType":"YulIdentifier","src":"6731:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6702:3:31"},"nodeType":"YulFunctionCall","src":"6702:32:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6692:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6762:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6771:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6774:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6764:6:31"},"nodeType":"YulFunctionCall","src":"6764:12:31"},"nodeType":"YulExpressionStatement","src":"6764:12:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6749:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"6757:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6746:2:31"},"nodeType":"YulFunctionCall","src":"6746:15:31"},"nodeType":"YulIf","src":"6743:35:31"},{"nodeType":"YulVariableDeclaration","src":"6787:26:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6802:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"6810:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6798:3:31"},"nodeType":"YulFunctionCall","src":"6798:15:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6791:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6878:92:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6899:3:31"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6923:3:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6904:18:31"},"nodeType":"YulFunctionCall","src":"6904:23:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6892:6:31"},"nodeType":"YulFunctionCall","src":"6892:36:31"},"nodeType":"YulExpressionStatement","src":"6892:36:31"},{"nodeType":"YulAssignment","src":"6941:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6952:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"6957:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6948:3:31"},"nodeType":"YulFunctionCall","src":"6948:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6941:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6833:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6838:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6830:2:31"},"nodeType":"YulFunctionCall","src":"6830:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6846:23:31","statements":[{"nodeType":"YulAssignment","src":"6848:19:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6859:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"6864:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6855:3:31"},"nodeType":"YulFunctionCall","src":"6855:12:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6848:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"6826:3:31","statements":[]},"src":"6822:148:31"},{"nodeType":"YulAssignment","src":"6979:14:31","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6988:5:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6979:5:31"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6369:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"6377:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6385:5:31","type":""}],"src":"6331:668:31"},{"body":{"nodeType":"YulBlock","src":"7068:598:31","statements":[{"body":{"nodeType":"YulBlock","src":"7117:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7126:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7129:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7119:6:31"},"nodeType":"YulFunctionCall","src":"7119:12:31"},"nodeType":"YulExpressionStatement","src":"7119:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7096:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7104:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:31"},"nodeType":"YulFunctionCall","src":"7092:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"7111:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7088:3:31"},"nodeType":"YulFunctionCall","src":"7088:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7081:6:31"},"nodeType":"YulFunctionCall","src":"7081:35:31"},"nodeType":"YulIf","src":"7078:55:31"},{"nodeType":"YulVariableDeclaration","src":"7142:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7165:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7152:12:31"},"nodeType":"YulFunctionCall","src":"7152:20:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7146:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7181:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"7191:4:31","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7185:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7204:71:31","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7271:2:31"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7231:39:31"},"nodeType":"YulFunctionCall","src":"7231:43:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7215:15:31"},"nodeType":"YulFunctionCall","src":"7215:60:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7208:3:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7284:16:31","value":{"name":"dst","nodeType":"YulIdentifier","src":"7297:3:31"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7288:5:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7316:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"7321:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7309:6:31"},"nodeType":"YulFunctionCall","src":"7309:15:31"},"nodeType":"YulExpressionStatement","src":"7309:15:31"},{"nodeType":"YulAssignment","src":"7333:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7344:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"7349:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:31"},"nodeType":"YulFunctionCall","src":"7340:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7333:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"7361:46:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7383:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7395:1:31","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"7398:2:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7391:3:31"},"nodeType":"YulFunctionCall","src":"7391:10:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7379:3:31"},"nodeType":"YulFunctionCall","src":"7379:23:31"},{"name":"_2","nodeType":"YulIdentifier","src":"7404:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7375:3:31"},"nodeType":"YulFunctionCall","src":"7375:32:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7365:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7435:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7447:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7437:6:31"},"nodeType":"YulFunctionCall","src":"7437:12:31"},"nodeType":"YulExpressionStatement","src":"7437:12:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7422:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"7430:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7419:2:31"},"nodeType":"YulFunctionCall","src":"7419:15:31"},"nodeType":"YulIf","src":"7416:35:31"},{"nodeType":"YulVariableDeclaration","src":"7460:26:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7475:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"7483:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7471:3:31"},"nodeType":"YulFunctionCall","src":"7471:15:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7464:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7551:86:31","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7572:3:31"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7590:3:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7577:12:31"},"nodeType":"YulFunctionCall","src":"7577:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7565:6:31"},"nodeType":"YulFunctionCall","src":"7565:30:31"},"nodeType":"YulExpressionStatement","src":"7565:30:31"},{"nodeType":"YulAssignment","src":"7608:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7619:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"7624:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7615:3:31"},"nodeType":"YulFunctionCall","src":"7615:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7608:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7506:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7511:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7503:2:31"},"nodeType":"YulFunctionCall","src":"7503:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7519:23:31","statements":[{"nodeType":"YulAssignment","src":"7521:19:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7532:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"7537:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7528:3:31"},"nodeType":"YulFunctionCall","src":"7528:12:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7521:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"7499:3:31","statements":[]},"src":"7495:142:31"},{"nodeType":"YulAssignment","src":"7646:14:31","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7655:5:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7646:5:31"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7042:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"7050:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7058:5:31","type":""}],"src":"7004:662:31"},{"body":{"nodeType":"YulBlock","src":"7733:824:31","statements":[{"body":{"nodeType":"YulBlock","src":"7782:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7791:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7794:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7784:6:31"},"nodeType":"YulFunctionCall","src":"7784:12:31"},"nodeType":"YulExpressionStatement","src":"7784:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7761:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"7769:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7757:3:31"},"nodeType":"YulFunctionCall","src":"7757:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"7776:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7753:3:31"},"nodeType":"YulFunctionCall","src":"7753:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7746:6:31"},"nodeType":"YulFunctionCall","src":"7746:35:31"},"nodeType":"YulIf","src":"7743:55:31"},{"nodeType":"YulVariableDeclaration","src":"7807:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7830:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7817:12:31"},"nodeType":"YulFunctionCall","src":"7817:20:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7811:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7846:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"7856:4:31","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7850:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7869:71:31","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7936:2:31"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7896:39:31"},"nodeType":"YulFunctionCall","src":"7896:43:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7880:15:31"},"nodeType":"YulFunctionCall","src":"7880:60:31"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7873:3:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7949:16:31","value":{"name":"dst","nodeType":"YulIdentifier","src":"7962:3:31"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7953:5:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7981:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"7986:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:31"},"nodeType":"YulFunctionCall","src":"7974:15:31"},"nodeType":"YulExpressionStatement","src":"7974:15:31"},{"nodeType":"YulAssignment","src":"7998:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8009:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8014:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8005:3:31"},"nodeType":"YulFunctionCall","src":"8005:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7998:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"8026:46:31","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8048:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8060:1:31","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"8063:2:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8056:3:31"},"nodeType":"YulFunctionCall","src":"8056:10:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8044:3:31"},"nodeType":"YulFunctionCall","src":"8044:23:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8069:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8040:3:31"},"nodeType":"YulFunctionCall","src":"8040:32:31"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8030:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8100:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8109:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8112:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:31"},"nodeType":"YulFunctionCall","src":"8102:12:31"},"nodeType":"YulExpressionStatement","src":"8102:12:31"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8087:6:31"},{"name":"end","nodeType":"YulIdentifier","src":"8095:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8084:2:31"},"nodeType":"YulFunctionCall","src":"8084:15:31"},"nodeType":"YulIf","src":"8081:35:31"},{"nodeType":"YulVariableDeclaration","src":"8125:26:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8140:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8148:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8136:3:31"},"nodeType":"YulFunctionCall","src":"8136:15:31"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8129:3:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8216:312:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8230:36:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8262:3:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8249:12:31"},"nodeType":"YulFunctionCall","src":"8249:17:31"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"8234:11:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8330:74:31","statements":[{"nodeType":"YulVariableDeclaration","src":"8348:11:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8358:1:31","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8352:2:31","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8383:2:31"},{"name":"_3","nodeType":"YulIdentifier","src":"8387:2:31"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8376:6:31"},"nodeType":"YulFunctionCall","src":"8376:14:31"},"nodeType":"YulExpressionStatement","src":"8376:14:31"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"8285:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"8298:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8282:2:31"},"nodeType":"YulFunctionCall","src":"8282:35:31"},"nodeType":"YulIf","src":"8279:125:31"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8424:3:31"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8454:6:31"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"8462:11:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8450:3:31"},"nodeType":"YulFunctionCall","src":"8450:24:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8476:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8446:3:31"},"nodeType":"YulFunctionCall","src":"8446:33:31"},{"name":"end","nodeType":"YulIdentifier","src":"8481:3:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"8429:16:31"},"nodeType":"YulFunctionCall","src":"8429:56:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8417:6:31"},"nodeType":"YulFunctionCall","src":"8417:69:31"},"nodeType":"YulExpressionStatement","src":"8417:69:31"},{"nodeType":"YulAssignment","src":"8499:19:31","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8510:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8515:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8506:3:31"},"nodeType":"YulFunctionCall","src":"8506:12:31"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8499:3:31"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8171:3:31"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8176:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8168:2:31"},"nodeType":"YulFunctionCall","src":"8168:15:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8184:23:31","statements":[{"nodeType":"YulAssignment","src":"8186:19:31","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8197:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"8202:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8193:3:31"},"nodeType":"YulFunctionCall","src":"8193:12:31"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8186:3:31"}]}]},"pre":{"nodeType":"YulBlock","src":"8164:3:31","statements":[]},"src":"8160:368:31"},{"nodeType":"YulAssignment","src":"8537:14:31","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"8546:5:31"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8537:5:31"}]}]},"name":"abi_decode_array_bytes_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7707:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"7715:3:31","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7723:5:31","type":""}],"src":"7671:886:31"},{"body":{"nodeType":"YulBlock","src":"8767:692:31","statements":[{"body":{"nodeType":"YulBlock","src":"8814:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8823:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8826:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8816:6:31"},"nodeType":"YulFunctionCall","src":"8816:12:31"},"nodeType":"YulExpressionStatement","src":"8816:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8788:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"8797:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8784:3:31"},"nodeType":"YulFunctionCall","src":"8784:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"8809:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8780:3:31"},"nodeType":"YulFunctionCall","src":"8780:33:31"},"nodeType":"YulIf","src":"8777:53:31"},{"nodeType":"YulVariableDeclaration","src":"8839:37:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8866:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8853:12:31"},"nodeType":"YulFunctionCall","src":"8853:23:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8843:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8885:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"8895:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8889:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"8940:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8949:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8952:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8942:6:31"},"nodeType":"YulFunctionCall","src":"8942:12:31"},"nodeType":"YulExpressionStatement","src":"8942:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8928:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"8936:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8925:2:31"},"nodeType":"YulFunctionCall","src":"8925:14:31"},"nodeType":"YulIf","src":"8922:34:31"},{"nodeType":"YulAssignment","src":"8965:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9008:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"9019:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9004:3:31"},"nodeType":"YulFunctionCall","src":"9004:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9028:7:31"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"8975:28:31"},"nodeType":"YulFunctionCall","src":"8975:61:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8965:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"9045:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9078:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9089:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9074:3:31"},"nodeType":"YulFunctionCall","src":"9074:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9061:12:31"},"nodeType":"YulFunctionCall","src":"9061:32:31"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9049:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9122:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9131:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9134:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9124:6:31"},"nodeType":"YulFunctionCall","src":"9124:12:31"},"nodeType":"YulExpressionStatement","src":"9124:12:31"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9108:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9118:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9105:2:31"},"nodeType":"YulFunctionCall","src":"9105:16:31"},"nodeType":"YulIf","src":"9102:36:31"},{"nodeType":"YulAssignment","src":"9147:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9190:9:31"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9201:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:31"},"nodeType":"YulFunctionCall","src":"9186:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9212:7:31"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"9157:28:31"},"nodeType":"YulFunctionCall","src":"9157:63:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9147:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"9229:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9262:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9273:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9258:3:31"},"nodeType":"YulFunctionCall","src":"9258:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9245:12:31"},"nodeType":"YulFunctionCall","src":"9245:32:31"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"9233:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"9306:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9315:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9318:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9308:6:31"},"nodeType":"YulFunctionCall","src":"9308:12:31"},"nodeType":"YulExpressionStatement","src":"9308:12:31"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"9292:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9302:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9289:2:31"},"nodeType":"YulFunctionCall","src":"9289:16:31"},"nodeType":"YulIf","src":"9286:36:31"},{"nodeType":"YulAssignment","src":"9331:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9372:9:31"},{"name":"offset_2","nodeType":"YulIdentifier","src":"9383:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9368:3:31"},"nodeType":"YulFunctionCall","src":"9368:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9394:7:31"}],"functionName":{"name":"abi_decode_array_bytes_dyn","nodeType":"YulIdentifier","src":"9341:26:31"},"nodeType":"YulFunctionCall","src":"9341:61:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9331:6:31"}]},{"nodeType":"YulAssignment","src":"9411:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9438:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9449:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9434:3:31"},"nodeType":"YulFunctionCall","src":"9434:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9421:12:31"},"nodeType":"YulFunctionCall","src":"9421:32:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9411:6:31"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8709:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8720:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8732:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8740:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8748:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8756:6:31","type":""}],"src":"8562:897:31"},{"body":{"nodeType":"YulBlock","src":"9669:286:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9697:3:31","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9679:6:31"},"nodeType":"YulFunctionCall","src":"9679:22:31"},"nodeType":"YulExpressionStatement","src":"9679:22:31"},{"nodeType":"YulAssignment","src":"9710:54:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9736:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9748:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9759:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9744:3:31"},"nodeType":"YulFunctionCall","src":"9744:19:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9718:17:31"},"nodeType":"YulFunctionCall","src":"9718:46:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9710:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9784:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9795:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9780:3:31"},"nodeType":"YulFunctionCall","src":"9780:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"9800:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9773:6:31"},"nodeType":"YulFunctionCall","src":"9773:34:31"},"nodeType":"YulExpressionStatement","src":"9773:34:31"},{"nodeType":"YulVariableDeclaration","src":"9816:29:31","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9834:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9830:3:31"},"nodeType":"YulFunctionCall","src":"9830:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"9843:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9826:3:31"},"nodeType":"YulFunctionCall","src":"9826:19:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9820:2:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9865:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9876:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9861:3:31"},"nodeType":"YulFunctionCall","src":"9861:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9885:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9893:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9881:3:31"},"nodeType":"YulFunctionCall","src":"9881:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9854:6:31"},"nodeType":"YulFunctionCall","src":"9854:43:31"},"nodeType":"YulExpressionStatement","src":"9854:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9917:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9928:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9913:3:31"},"nodeType":"YulFunctionCall","src":"9913:18:31"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9937:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9945:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9933:3:31"},"nodeType":"YulFunctionCall","src":"9933:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9906:6:31"},"nodeType":"YulFunctionCall","src":"9906:43:31"},"nodeType":"YulExpressionStatement","src":"9906:43:31"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_address_t_address__to_t_string_memory_ptr_t_uint256_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9614:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9625:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9633:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9641:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9649:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9660:4:31","type":""}],"src":"9464:491:31"},{"body":{"nodeType":"YulBlock","src":"10047:167:31","statements":[{"body":{"nodeType":"YulBlock","src":"10093:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10102:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10105:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10095:6:31"},"nodeType":"YulFunctionCall","src":"10095:12:31"},"nodeType":"YulExpressionStatement","src":"10095:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10068:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"10077:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10064:3:31"},"nodeType":"YulFunctionCall","src":"10064:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"10089:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10060:3:31"},"nodeType":"YulFunctionCall","src":"10060:32:31"},"nodeType":"YulIf","src":"10057:52:31"},{"nodeType":"YulAssignment","src":"10118:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10141:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10128:12:31"},"nodeType":"YulFunctionCall","src":"10128:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10118:6:31"}]},{"nodeType":"YulAssignment","src":"10160:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10193:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10204:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10189:3:31"},"nodeType":"YulFunctionCall","src":"10189:18:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10170:18:31"},"nodeType":"YulFunctionCall","src":"10170:38:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10160:6:31"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10005:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10016:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10028:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10036:6:31","type":""}],"src":"9960:254:31"},{"body":{"nodeType":"YulBlock","src":"10353:324:31","statements":[{"body":{"nodeType":"YulBlock","src":"10400:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10409:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10412:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10402:6:31"},"nodeType":"YulFunctionCall","src":"10402:12:31"},"nodeType":"YulExpressionStatement","src":"10402:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10374:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"10383:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10370:3:31"},"nodeType":"YulFunctionCall","src":"10370:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"10395:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10366:3:31"},"nodeType":"YulFunctionCall","src":"10366:33:31"},"nodeType":"YulIf","src":"10363:53:31"},{"nodeType":"YulAssignment","src":"10425:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10448:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10435:12:31"},"nodeType":"YulFunctionCall","src":"10435:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10425:6:31"}]},{"nodeType":"YulAssignment","src":"10467:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10498:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10509:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10494:3:31"},"nodeType":"YulFunctionCall","src":"10494:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"10477:16:31"},"nodeType":"YulFunctionCall","src":"10477:36:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10467:6:31"}]},{"nodeType":"YulAssignment","src":"10522:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10553:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10564:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10549:3:31"},"nodeType":"YulFunctionCall","src":"10549:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"10532:16:31"},"nodeType":"YulFunctionCall","src":"10532:36:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10522:6:31"}]},{"nodeType":"YulAssignment","src":"10577:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10604:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10615:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10600:3:31"},"nodeType":"YulFunctionCall","src":"10600:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10587:12:31"},"nodeType":"YulFunctionCall","src":"10587:32:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10577:6:31"}]},{"nodeType":"YulAssignment","src":"10628:43:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10655:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10666:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10651:3:31"},"nodeType":"YulFunctionCall","src":"10651:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10638:12:31"},"nodeType":"YulFunctionCall","src":"10638:33:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10628:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10287:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10298:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10310:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10318:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10326:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10334:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10342:6:31","type":""}],"src":"10219:458:31"},{"body":{"nodeType":"YulBlock","src":"10714:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10731:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10738:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10743:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10734:3:31"},"nodeType":"YulFunctionCall","src":"10734:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10724:6:31"},"nodeType":"YulFunctionCall","src":"10724:31:31"},"nodeType":"YulExpressionStatement","src":"10724:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10771:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10774:4:31","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10764:6:31"},"nodeType":"YulFunctionCall","src":"10764:15:31"},"nodeType":"YulExpressionStatement","src":"10764:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10795:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10798:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10788:6:31"},"nodeType":"YulFunctionCall","src":"10788:15:31"},"nodeType":"YulExpressionStatement","src":"10788:15:31"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"10682:127:31"},{"body":{"nodeType":"YulBlock","src":"10931:132:31","statements":[{"nodeType":"YulAssignment","src":"10941:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10953:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10964:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10949:3:31"},"nodeType":"YulFunctionCall","src":"10949:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10941:4:31"}]},{"body":{"nodeType":"YulBlock","src":"11001:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"11003:16:31"},"nodeType":"YulFunctionCall","src":"11003:18:31"},"nodeType":"YulExpressionStatement","src":"11003:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10989:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"10997:1:31","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10986:2:31"},"nodeType":"YulFunctionCall","src":"10986:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10979:6:31"},"nodeType":"YulFunctionCall","src":"10979:21:31"},"nodeType":"YulIf","src":"10976:47:31"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11039:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"11050:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11032:6:31"},"nodeType":"YulFunctionCall","src":"11032:25:31"},"nodeType":"YulExpressionStatement","src":"11032:25:31"}]},"name":"abi_encode_tuple_t_enum$_ProposalState_$1818__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10900:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10911:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10922:4:31","type":""}],"src":"10814:249:31"},{"body":{"nodeType":"YulBlock","src":"11155:161:31","statements":[{"body":{"nodeType":"YulBlock","src":"11201:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11210:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11213:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11203:6:31"},"nodeType":"YulFunctionCall","src":"11203:12:31"},"nodeType":"YulExpressionStatement","src":"11203:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11176:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"11185:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11172:3:31"},"nodeType":"YulFunctionCall","src":"11172:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"11197:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11168:3:31"},"nodeType":"YulFunctionCall","src":"11168:32:31"},"nodeType":"YulIf","src":"11165:52:31"},{"nodeType":"YulAssignment","src":"11226:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11249:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11236:12:31"},"nodeType":"YulFunctionCall","src":"11236:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11226:6:31"}]},{"nodeType":"YulAssignment","src":"11268:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11295:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11306:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11291:3:31"},"nodeType":"YulFunctionCall","src":"11291:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11278:12:31"},"nodeType":"YulFunctionCall","src":"11278:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11268:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11113:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11124:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11136:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11144:6:31","type":""}],"src":"11068:248:31"},{"body":{"nodeType":"YulBlock","src":"11388:62:31","statements":[{"body":{"nodeType":"YulBlock","src":"11422:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"11424:16:31"},"nodeType":"YulFunctionCall","src":"11424:18:31"},"nodeType":"YulExpressionStatement","src":"11424:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11411:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11418:1:31","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11408:2:31"},"nodeType":"YulFunctionCall","src":"11408:12:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11401:6:31"},"nodeType":"YulFunctionCall","src":"11401:20:31"},"nodeType":"YulIf","src":"11398:46:31"}]},"name":"validator_assert_enum_MonthlyPaymentStatusEnum","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11377:5:31","type":""}],"src":"11321:129:31"},{"body":{"nodeType":"YulBlock","src":"11611:208:31","statements":[{"nodeType":"YulAssignment","src":"11621:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11633:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11644:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11629:3:31"},"nodeType":"YulFunctionCall","src":"11629:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11621:4:31"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11703:6:31"}],"functionName":{"name":"validator_assert_enum_MonthlyPaymentStatusEnum","nodeType":"YulIdentifier","src":"11656:46:31"},"nodeType":"YulFunctionCall","src":"11656:54:31"},"nodeType":"YulExpressionStatement","src":"11656:54:31"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11726:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"11737:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11719:6:31"},"nodeType":"YulFunctionCall","src":"11719:25:31"},"nodeType":"YulExpressionStatement","src":"11719:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11764:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11775:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11760:3:31"},"nodeType":"YulFunctionCall","src":"11760:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11784:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11805:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11796:3:31"},"nodeType":"YulFunctionCall","src":"11796:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"11809:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11792:3:31"},"nodeType":"YulFunctionCall","src":"11792:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11780:3:31"},"nodeType":"YulFunctionCall","src":"11780:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11753:6:31"},"nodeType":"YulFunctionCall","src":"11753:60:31"},"nodeType":"YulExpressionStatement","src":"11753:60:31"}]},"name":"abi_encode_tuple_t_enum$_MonthlyPaymentStatusEnum_$9055_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11572:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11583:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11591:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11602:4:31","type":""}],"src":"11455:364:31"},{"body":{"nodeType":"YulBlock","src":"11911:167:31","statements":[{"body":{"nodeType":"YulBlock","src":"11957:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11966:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11969:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11959:6:31"},"nodeType":"YulFunctionCall","src":"11959:12:31"},"nodeType":"YulExpressionStatement","src":"11959:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11932:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"11941:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11928:3:31"},"nodeType":"YulFunctionCall","src":"11928:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"11953:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11924:3:31"},"nodeType":"YulFunctionCall","src":"11924:32:31"},"nodeType":"YulIf","src":"11921:52:31"},{"nodeType":"YulAssignment","src":"11982:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12005:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11992:12:31"},"nodeType":"YulFunctionCall","src":"11992:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11982:6:31"}]},{"nodeType":"YulAssignment","src":"12024:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12068:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:31"},"nodeType":"YulFunctionCall","src":"12053:18:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"12034:18:31"},"nodeType":"YulFunctionCall","src":"12034:38:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12024:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11869:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11880:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11892:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11900:6:31","type":""}],"src":"11824:254:31"},{"body":{"nodeType":"YulBlock","src":"12240:162:31","statements":[{"nodeType":"YulAssignment","src":"12250:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12262:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12273:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12258:3:31"},"nodeType":"YulFunctionCall","src":"12258:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12250:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12292:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"12303:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12285:6:31"},"nodeType":"YulFunctionCall","src":"12285:25:31"},"nodeType":"YulExpressionStatement","src":"12285:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12330:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12341:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12326:3:31"},"nodeType":"YulFunctionCall","src":"12326:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"12346:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12319:6:31"},"nodeType":"YulFunctionCall","src":"12319:34:31"},"nodeType":"YulExpressionStatement","src":"12319:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12373:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12384:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12369:3:31"},"nodeType":"YulFunctionCall","src":"12369:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"12389:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12362:6:31"},"nodeType":"YulFunctionCall","src":"12362:34:31"},"nodeType":"YulExpressionStatement","src":"12362:34:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12193:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12204:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12212:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12220:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12231:4:31","type":""}],"src":"12083:319:31"},{"body":{"nodeType":"YulBlock","src":"12492:165:31","statements":[{"body":{"nodeType":"YulBlock","src":"12538:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12547:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12550:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12540:6:31"},"nodeType":"YulFunctionCall","src":"12540:12:31"},"nodeType":"YulExpressionStatement","src":"12540:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12513:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12509:3:31"},"nodeType":"YulFunctionCall","src":"12509:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12534:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12505:3:31"},"nodeType":"YulFunctionCall","src":"12505:32:31"},"nodeType":"YulIf","src":"12502:52:31"},{"nodeType":"YulAssignment","src":"12563:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12586:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12573:12:31"},"nodeType":"YulFunctionCall","src":"12573:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12563:6:31"}]},{"nodeType":"YulAssignment","src":"12605:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12636:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12647:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12632:3:31"},"nodeType":"YulFunctionCall","src":"12632:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"12615:16:31"},"nodeType":"YulFunctionCall","src":"12615:36:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12605:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12450:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12461:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12473:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12481:6:31","type":""}],"src":"12407:250:31"},{"body":{"nodeType":"YulBlock","src":"12810:621:31","statements":[{"body":{"nodeType":"YulBlock","src":"12857:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12866:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12869:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12859:6:31"},"nodeType":"YulFunctionCall","src":"12859:12:31"},"nodeType":"YulExpressionStatement","src":"12859:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12831:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12840:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12827:3:31"},"nodeType":"YulFunctionCall","src":"12827:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12852:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12823:3:31"},"nodeType":"YulFunctionCall","src":"12823:33:31"},"nodeType":"YulIf","src":"12820:53:31"},{"nodeType":"YulAssignment","src":"12882:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12905:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12892:12:31"},"nodeType":"YulFunctionCall","src":"12892:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12882:6:31"}]},{"nodeType":"YulAssignment","src":"12924:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12955:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12966:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12951:3:31"},"nodeType":"YulFunctionCall","src":"12951:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"12934:16:31"},"nodeType":"YulFunctionCall","src":"12934:36:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12924:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"12979:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13010:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13021:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13006:3:31"},"nodeType":"YulFunctionCall","src":"13006:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12993:12:31"},"nodeType":"YulFunctionCall","src":"12993:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12983:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13034:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"13044:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13038:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"13089:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13098:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13101:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13091:6:31"},"nodeType":"YulFunctionCall","src":"13091:12:31"},"nodeType":"YulExpressionStatement","src":"13091:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13077:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13085:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13074:2:31"},"nodeType":"YulFunctionCall","src":"13074:14:31"},"nodeType":"YulIf","src":"13071:34:31"},{"nodeType":"YulVariableDeclaration","src":"13114:85:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13171:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"13182:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13167:3:31"},"nodeType":"YulFunctionCall","src":"13167:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13191:7:31"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"13140:26:31"},"nodeType":"YulFunctionCall","src":"13140:59:31"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"13118:8:31","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"13128:8:31","type":""}]},{"nodeType":"YulAssignment","src":"13208:18:31","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"13218:8:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13208:6:31"}]},{"nodeType":"YulAssignment","src":"13235:18:31","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"13245:8:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13235:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"13262:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13295:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13306:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13291:3:31"},"nodeType":"YulFunctionCall","src":"13291:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13278:12:31"},"nodeType":"YulFunctionCall","src":"13278:32:31"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"13266:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"13339:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13348:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13351:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13341:6:31"},"nodeType":"YulFunctionCall","src":"13341:12:31"},"nodeType":"YulExpressionStatement","src":"13341:12:31"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"13325:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13335:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13322:2:31"},"nodeType":"YulFunctionCall","src":"13322:16:31"},"nodeType":"YulIf","src":"13319:36:31"},{"nodeType":"YulAssignment","src":"13364:61:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13395:9:31"},{"name":"offset_1","nodeType":"YulIdentifier","src":"13406:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:31"},"nodeType":"YulFunctionCall","src":"13391:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13417:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"13374:16:31"},"nodeType":"YulFunctionCall","src":"13374:51:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13364:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12744:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12755:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12767:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12775:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12783:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12791:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12799:6:31","type":""}],"src":"12662:769:31"},{"body":{"nodeType":"YulBlock","src":"13679:365:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13696:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13707:3:31","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13689:6:31"},"nodeType":"YulFunctionCall","src":"13689:22:31"},"nodeType":"YulExpressionStatement","src":"13689:22:31"},{"nodeType":"YulVariableDeclaration","src":"13720:60:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13752:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13764:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13775:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13760:3:31"},"nodeType":"YulFunctionCall","src":"13760:19:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13734:17:31"},"nodeType":"YulFunctionCall","src":"13734:46:31"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13724:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13800:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13811:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:31"},"nodeType":"YulFunctionCall","src":"13796:18:31"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13820:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"13828:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13816:3:31"},"nodeType":"YulFunctionCall","src":"13816:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:31"},"nodeType":"YulFunctionCall","src":"13789:50:31"},"nodeType":"YulExpressionStatement","src":"13789:50:31"},{"nodeType":"YulAssignment","src":"13848:41:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13874:6:31"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13882:6:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13856:17:31"},"nodeType":"YulFunctionCall","src":"13856:33:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13909:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13920:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13905:3:31"},"nodeType":"YulFunctionCall","src":"13905:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"13925:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13898:6:31"},"nodeType":"YulFunctionCall","src":"13898:34:31"},"nodeType":"YulExpressionStatement","src":"13898:34:31"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13988:6:31"}],"functionName":{"name":"validator_assert_enum_MonthlyPaymentStatusEnum","nodeType":"YulIdentifier","src":"13941:46:31"},"nodeType":"YulFunctionCall","src":"13941:54:31"},"nodeType":"YulExpressionStatement","src":"13941:54:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14015:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14026:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:31"},"nodeType":"YulFunctionCall","src":"14011:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"14031:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14004:6:31"},"nodeType":"YulFunctionCall","src":"14004:34:31"},"nodeType":"YulExpressionStatement","src":"14004:34:31"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_enum$_SpaceStatusEnum_$9060__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13624:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13635:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13643:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13651:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13659:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13670:4:31","type":""}],"src":"13436:608:31"},{"body":{"nodeType":"YulBlock","src":"14171:427:31","statements":[{"body":{"nodeType":"YulBlock","src":"14217:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14226:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14229:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14219:6:31"},"nodeType":"YulFunctionCall","src":"14219:12:31"},"nodeType":"YulExpressionStatement","src":"14219:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14192:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14201:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14188:3:31"},"nodeType":"YulFunctionCall","src":"14188:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"14213:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14184:3:31"},"nodeType":"YulFunctionCall","src":"14184:32:31"},"nodeType":"YulIf","src":"14181:52:31"},{"nodeType":"YulAssignment","src":"14242:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14265:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14252:12:31"},"nodeType":"YulFunctionCall","src":"14252:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14242:6:31"}]},{"nodeType":"YulAssignment","src":"14284:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14315:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14311:3:31"},"nodeType":"YulFunctionCall","src":"14311:18:31"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"14294:16:31"},"nodeType":"YulFunctionCall","src":"14294:36:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14284:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"14339:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14370:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14381:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14366:3:31"},"nodeType":"YulFunctionCall","src":"14366:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14353:12:31"},"nodeType":"YulFunctionCall","src":"14353:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14343:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"14428:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14437:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14440:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14430:6:31"},"nodeType":"YulFunctionCall","src":"14430:12:31"},"nodeType":"YulExpressionStatement","src":"14430:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14400:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"14408:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14397:2:31"},"nodeType":"YulFunctionCall","src":"14397:30:31"},"nodeType":"YulIf","src":"14394:50:31"},{"nodeType":"YulVariableDeclaration","src":"14453:85:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14510:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"14521:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14506:3:31"},"nodeType":"YulFunctionCall","src":"14506:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14530:7:31"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"14479:26:31"},"nodeType":"YulFunctionCall","src":"14479:59:31"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"14457:8:31","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"14467:8:31","type":""}]},{"nodeType":"YulAssignment","src":"14547:18:31","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"14557:8:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14547:6:31"}]},{"nodeType":"YulAssignment","src":"14574:18:31","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"14584:8:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14574:6:31"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14113:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14124:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14136:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14144:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14152:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14160:6:31","type":""}],"src":"14049:549:31"},{"body":{"nodeType":"YulBlock","src":"14818:942:31","statements":[{"body":{"nodeType":"YulBlock","src":"14865:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14874:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14877:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14867:6:31"},"nodeType":"YulFunctionCall","src":"14867:12:31"},"nodeType":"YulExpressionStatement","src":"14867:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14839:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"14848:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14835:3:31"},"nodeType":"YulFunctionCall","src":"14835:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"14860:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14831:3:31"},"nodeType":"YulFunctionCall","src":"14831:33:31"},"nodeType":"YulIf","src":"14828:53:31"},{"nodeType":"YulVariableDeclaration","src":"14890:37:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14904:12:31"},"nodeType":"YulFunctionCall","src":"14904:23:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14894:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14936:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"14946:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14940:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"14991:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15000:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15003:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14993:6:31"},"nodeType":"YulFunctionCall","src":"14993:12:31"},"nodeType":"YulExpressionStatement","src":"14993:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14979:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"14987:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14976:2:31"},"nodeType":"YulFunctionCall","src":"14976:14:31"},"nodeType":"YulIf","src":"14973:34:31"},{"nodeType":"YulAssignment","src":"15016:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15059:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"15070:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15055:3:31"},"nodeType":"YulFunctionCall","src":"15055:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15079:7:31"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"15026:28:31"},"nodeType":"YulFunctionCall","src":"15026:61:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15016:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"15096:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15129:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15140:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15125:3:31"},"nodeType":"YulFunctionCall","src":"15125:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15112:12:31"},"nodeType":"YulFunctionCall","src":"15112:32:31"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"15100:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"15173:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15182:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15185:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15175:6:31"},"nodeType":"YulFunctionCall","src":"15175:12:31"},"nodeType":"YulExpressionStatement","src":"15175:12:31"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"15159:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"15169:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15156:2:31"},"nodeType":"YulFunctionCall","src":"15156:16:31"},"nodeType":"YulIf","src":"15153:36:31"},{"nodeType":"YulAssignment","src":"15198:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15241:9:31"},{"name":"offset_1","nodeType":"YulIdentifier","src":"15252:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15237:3:31"},"nodeType":"YulFunctionCall","src":"15237:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15263:7:31"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"15208:28:31"},"nodeType":"YulFunctionCall","src":"15208:63:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15198:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"15280:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15313:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15324:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15309:3:31"},"nodeType":"YulFunctionCall","src":"15309:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15296:12:31"},"nodeType":"YulFunctionCall","src":"15296:32:31"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"15284:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"15357:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15366:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15369:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15359:6:31"},"nodeType":"YulFunctionCall","src":"15359:12:31"},"nodeType":"YulExpressionStatement","src":"15359:12:31"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"15343:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"15353:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15340:2:31"},"nodeType":"YulFunctionCall","src":"15340:16:31"},"nodeType":"YulIf","src":"15337:36:31"},{"nodeType":"YulAssignment","src":"15382:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15423:9:31"},{"name":"offset_2","nodeType":"YulIdentifier","src":"15434:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15419:3:31"},"nodeType":"YulFunctionCall","src":"15419:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15445:7:31"}],"functionName":{"name":"abi_decode_array_bytes_dyn","nodeType":"YulIdentifier","src":"15392:26:31"},"nodeType":"YulFunctionCall","src":"15392:61:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15382:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"15462:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15495:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15506:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15491:3:31"},"nodeType":"YulFunctionCall","src":"15491:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15478:12:31"},"nodeType":"YulFunctionCall","src":"15478:32:31"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"15466:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"15539:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15548:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15551:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15541:6:31"},"nodeType":"YulFunctionCall","src":"15541:12:31"},"nodeType":"YulExpressionStatement","src":"15541:12:31"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"15525:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"15535:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15522:2:31"},"nodeType":"YulFunctionCall","src":"15522:16:31"},"nodeType":"YulIf","src":"15519:36:31"},{"nodeType":"YulVariableDeclaration","src":"15564:34:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15578:9:31"},{"name":"offset_3","nodeType":"YulIdentifier","src":"15589:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15574:3:31"},"nodeType":"YulFunctionCall","src":"15574:24:31"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15568:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"15646:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15655:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15658:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15648:6:31"},"nodeType":"YulFunctionCall","src":"15648:12:31"},"nodeType":"YulExpressionStatement","src":"15648:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15625:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"15629:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15621:3:31"},"nodeType":"YulFunctionCall","src":"15621:13:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15636:7:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15617:3:31"},"nodeType":"YulFunctionCall","src":"15617:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15610:6:31"},"nodeType":"YulFunctionCall","src":"15610:35:31"},"nodeType":"YulIf","src":"15607:55:31"},{"nodeType":"YulAssignment","src":"15671:83:31","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15719:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"15723:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15715:3:31"},"nodeType":"YulFunctionCall","src":"15715:11:31"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15741:2:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15728:12:31"},"nodeType":"YulFunctionCall","src":"15728:16:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15746:7:31"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"15681:33:31"},"nodeType":"YulFunctionCall","src":"15681:73:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15671:6:31"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14760:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14771:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14783:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14791:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14799:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14807:6:31","type":""}],"src":"14603:1157:31"},{"body":{"nodeType":"YulBlock","src":"15826:374:31","statements":[{"nodeType":"YulVariableDeclaration","src":"15836:26:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15856:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15850:5:31"},"nodeType":"YulFunctionCall","src":"15850:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15840:6:31","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15878:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"15883:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15871:6:31"},"nodeType":"YulFunctionCall","src":"15871:19:31"},"nodeType":"YulExpressionStatement","src":"15871:19:31"},{"nodeType":"YulVariableDeclaration","src":"15899:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15909:4:31","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15903:2:31","type":""}]},{"nodeType":"YulAssignment","src":"15922:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15933:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"15938:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15929:3:31"},"nodeType":"YulFunctionCall","src":"15929:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15922:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"15950:28:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15968:5:31"},{"name":"_1","nodeType":"YulIdentifier","src":"15975:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15964:3:31"},"nodeType":"YulFunctionCall","src":"15964:14:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15954:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15987:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"15996:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15991:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"16055:120:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16076:3:31"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16087:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16081:5:31"},"nodeType":"YulFunctionCall","src":"16081:13:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16069:6:31"},"nodeType":"YulFunctionCall","src":"16069:26:31"},"nodeType":"YulExpressionStatement","src":"16069:26:31"},{"nodeType":"YulAssignment","src":"16108:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16119:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"16124:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16115:3:31"},"nodeType":"YulFunctionCall","src":"16115:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16108:3:31"}]},{"nodeType":"YulAssignment","src":"16140:25:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16154:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"16162:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16150:3:31"},"nodeType":"YulFunctionCall","src":"16150:15:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16140:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16017:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"16020:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16014:2:31"},"nodeType":"YulFunctionCall","src":"16014:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16028:18:31","statements":[{"nodeType":"YulAssignment","src":"16030:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16039:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"16042:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16035:3:31"},"nodeType":"YulFunctionCall","src":"16035:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16030:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"16010:3:31","statements":[]},"src":"16006:169:31"},{"nodeType":"YulAssignment","src":"16184:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"16191:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16184:3:31"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15803:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15810:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15818:3:31","type":""}],"src":"15765:435:31"},{"body":{"nodeType":"YulBlock","src":"16562:563:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16579:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16594:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16606:3:31","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"16611:3:31","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16602:3:31"},"nodeType":"YulFunctionCall","src":"16602:13:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16590:3:31"},"nodeType":"YulFunctionCall","src":"16590:26:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16572:6:31"},"nodeType":"YulFunctionCall","src":"16572:45:31"},"nodeType":"YulExpressionStatement","src":"16572:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16637:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16648:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16633:3:31"},"nodeType":"YulFunctionCall","src":"16633:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"16653:3:31","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16626:6:31"},"nodeType":"YulFunctionCall","src":"16626:31:31"},"nodeType":"YulExpressionStatement","src":"16626:31:31"},{"nodeType":"YulVariableDeclaration","src":"16666:60:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16698:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16710:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16721:3:31","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16706:3:31"},"nodeType":"YulFunctionCall","src":"16706:19:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16680:17:31"},"nodeType":"YulFunctionCall","src":"16680:46:31"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16670:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16746:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16757:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16742:3:31"},"nodeType":"YulFunctionCall","src":"16742:18:31"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16766:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"16774:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16762:3:31"},"nodeType":"YulFunctionCall","src":"16762:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16735:6:31"},"nodeType":"YulFunctionCall","src":"16735:50:31"},"nodeType":"YulExpressionStatement","src":"16735:50:31"},{"nodeType":"YulVariableDeclaration","src":"16794:47:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16826:6:31"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16834:6:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16808:17:31"},"nodeType":"YulFunctionCall","src":"16808:33:31"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"16798:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16861:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16872:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16857:3:31"},"nodeType":"YulFunctionCall","src":"16857:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"16877:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16850:6:31"},"nodeType":"YulFunctionCall","src":"16850:34:31"},"nodeType":"YulExpressionStatement","src":"16850:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16904:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16915:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16900:3:31"},"nodeType":"YulFunctionCall","src":"16900:19:31"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16925:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16941:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16946:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16937:3:31"},"nodeType":"YulFunctionCall","src":"16937:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"16950:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16933:3:31"},"nodeType":"YulFunctionCall","src":"16933:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16921:3:31"},"nodeType":"YulFunctionCall","src":"16921:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16893:6:31"},"nodeType":"YulFunctionCall","src":"16893:61:31"},"nodeType":"YulExpressionStatement","src":"16893:61:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16974:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"16985:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16970:3:31"},"nodeType":"YulFunctionCall","src":"16970:19:31"},{"name":"value5","nodeType":"YulIdentifier","src":"16991:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16963:6:31"},"nodeType":"YulFunctionCall","src":"16963:35:31"},"nodeType":"YulExpressionStatement","src":"16963:35:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17018:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17029:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17014:3:31"},"nodeType":"YulFunctionCall","src":"17014:19:31"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17039:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17047:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17035:3:31"},"nodeType":"YulFunctionCall","src":"17035:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17007:6:31"},"nodeType":"YulFunctionCall","src":"17007:51:31"},"nodeType":"YulExpressionStatement","src":"17007:51:31"},{"nodeType":"YulAssignment","src":"17067:52:31","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"17104:6:31"},{"name":"tail_2","nodeType":"YulIdentifier","src":"17112:6:31"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17075:28:31"},"nodeType":"YulFunctionCall","src":"17075:44:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17067:4:31"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16483:9:31","type":""},{"name":"value6","nodeType":"YulTypedName","src":"16494:6:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16502:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16510:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16518:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16526:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16534:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16542:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16553:4:31","type":""}],"src":"16205:920:31"},{"body":{"nodeType":"YulBlock","src":"17229:97:31","statements":[{"nodeType":"YulAssignment","src":"17239:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17251:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17262:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:31"},"nodeType":"YulFunctionCall","src":"17247:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17239:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17281:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17296:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"17304:14:31","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17292:3:31"},"nodeType":"YulFunctionCall","src":"17292:27:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17274:6:31"},"nodeType":"YulFunctionCall","src":"17274:46:31"},"nodeType":"YulExpressionStatement","src":"17274:46:31"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17198:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17209:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17220:4:31","type":""}],"src":"17130:196:31"},{"body":{"nodeType":"YulBlock","src":"17444:349:31","statements":[{"body":{"nodeType":"YulBlock","src":"17490:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17499:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17502:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17492:6:31"},"nodeType":"YulFunctionCall","src":"17492:12:31"},"nodeType":"YulExpressionStatement","src":"17492:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17465:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17474:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17461:3:31"},"nodeType":"YulFunctionCall","src":"17461:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"17486:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17457:3:31"},"nodeType":"YulFunctionCall","src":"17457:32:31"},"nodeType":"YulIf","src":"17454:52:31"},{"nodeType":"YulAssignment","src":"17515:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17544:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"17525:18:31"},"nodeType":"YulFunctionCall","src":"17525:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17515:6:31"}]},{"nodeType":"YulAssignment","src":"17563:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17590:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17601:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17586:3:31"},"nodeType":"YulFunctionCall","src":"17586:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17573:12:31"},"nodeType":"YulFunctionCall","src":"17573:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17563:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"17614:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17645:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"17656:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17641:3:31"},"nodeType":"YulFunctionCall","src":"17641:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17628:12:31"},"nodeType":"YulFunctionCall","src":"17628:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17618:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"17703:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17712:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17715:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17705:6:31"},"nodeType":"YulFunctionCall","src":"17705:12:31"},"nodeType":"YulExpressionStatement","src":"17705:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17675:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"17683:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17672:2:31"},"nodeType":"YulFunctionCall","src":"17672:30:31"},"nodeType":"YulIf","src":"17669:50:31"},{"nodeType":"YulAssignment","src":"17728:59:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17759:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"17770:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17755:3:31"},"nodeType":"YulFunctionCall","src":"17755:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17779:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"17738:16:31"},"nodeType":"YulFunctionCall","src":"17738:49:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17728:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17394:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17405:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17417:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17425:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17433:6:31","type":""}],"src":"17331:462:31"},{"body":{"nodeType":"YulBlock","src":"17868:116:31","statements":[{"body":{"nodeType":"YulBlock","src":"17914:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17923:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17926:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17916:6:31"},"nodeType":"YulFunctionCall","src":"17916:12:31"},"nodeType":"YulExpressionStatement","src":"17916:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17889:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"17898:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17885:3:31"},"nodeType":"YulFunctionCall","src":"17885:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"17910:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17881:3:31"},"nodeType":"YulFunctionCall","src":"17881:32:31"},"nodeType":"YulIf","src":"17878:52:31"},{"nodeType":"YulAssignment","src":"17939:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"17949:18:31"},"nodeType":"YulFunctionCall","src":"17949:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17939:6:31"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17834:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17845:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17857:6:31","type":""}],"src":"17798:186:31"},{"body":{"nodeType":"YulBlock","src":"18154:217:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18171:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18182:2:31","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18164:6:31"},"nodeType":"YulFunctionCall","src":"18164:21:31"},"nodeType":"YulExpressionStatement","src":"18164:21:31"},{"nodeType":"YulAssignment","src":"18194:53:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18220:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18232:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18243:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18228:3:31"},"nodeType":"YulFunctionCall","src":"18228:18:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"18202:17:31"},"nodeType":"YulFunctionCall","src":"18202:45:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18194:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18267:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18278:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18263:3:31"},"nodeType":"YulFunctionCall","src":"18263:18:31"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18297:6:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18290:6:31"},"nodeType":"YulFunctionCall","src":"18290:14:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18283:6:31"},"nodeType":"YulFunctionCall","src":"18283:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18256:6:31"},"nodeType":"YulFunctionCall","src":"18256:50:31"},"nodeType":"YulExpressionStatement","src":"18256:50:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18326:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18337:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18322:3:31"},"nodeType":"YulFunctionCall","src":"18322:18:31"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18356:6:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18349:6:31"},"nodeType":"YulFunctionCall","src":"18349:14:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18342:6:31"},"nodeType":"YulFunctionCall","src":"18342:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18315:6:31"},"nodeType":"YulFunctionCall","src":"18315:50:31"},"nodeType":"YulExpressionStatement","src":"18315:50:31"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18107:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18118:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18126:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18134:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18145:4:31","type":""}],"src":"17989:382:31"},{"body":{"nodeType":"YulBlock","src":"18573:746:31","statements":[{"body":{"nodeType":"YulBlock","src":"18620:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18629:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18632:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18622:6:31"},"nodeType":"YulFunctionCall","src":"18622:12:31"},"nodeType":"YulExpressionStatement","src":"18622:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18594:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"18603:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18590:3:31"},"nodeType":"YulFunctionCall","src":"18590:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"18615:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18586:3:31"},"nodeType":"YulFunctionCall","src":"18586:33:31"},"nodeType":"YulIf","src":"18583:53:31"},{"nodeType":"YulAssignment","src":"18645:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18674:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"18655:18:31"},"nodeType":"YulFunctionCall","src":"18655:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18645:6:31"}]},{"nodeType":"YulAssignment","src":"18693:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18726:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18737:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18722:3:31"},"nodeType":"YulFunctionCall","src":"18722:18:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"18703:18:31"},"nodeType":"YulFunctionCall","src":"18703:38:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18693:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"18750:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18781:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"18792:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18777:3:31"},"nodeType":"YulFunctionCall","src":"18777:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18764:12:31"},"nodeType":"YulFunctionCall","src":"18764:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18754:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18805:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"18815:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18809:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"18860:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18869:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18872:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18862:6:31"},"nodeType":"YulFunctionCall","src":"18862:12:31"},"nodeType":"YulExpressionStatement","src":"18862:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18848:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"18856:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18845:2:31"},"nodeType":"YulFunctionCall","src":"18845:14:31"},"nodeType":"YulIf","src":"18842:34:31"},{"nodeType":"YulAssignment","src":"18885:71:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18928:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"18939:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18924:3:31"},"nodeType":"YulFunctionCall","src":"18924:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18948:7:31"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"18895:28:31"},"nodeType":"YulFunctionCall","src":"18895:61:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18885:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"18965:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18998:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19009:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18994:3:31"},"nodeType":"YulFunctionCall","src":"18994:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18981:12:31"},"nodeType":"YulFunctionCall","src":"18981:32:31"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"18969:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"19042:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19051:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19054:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19044:6:31"},"nodeType":"YulFunctionCall","src":"19044:12:31"},"nodeType":"YulExpressionStatement","src":"19044:12:31"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"19028:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"19038:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19025:2:31"},"nodeType":"YulFunctionCall","src":"19025:16:31"},"nodeType":"YulIf","src":"19022:36:31"},{"nodeType":"YulAssignment","src":"19067:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19110:9:31"},{"name":"offset_1","nodeType":"YulIdentifier","src":"19121:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19106:3:31"},"nodeType":"YulFunctionCall","src":"19106:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19132:7:31"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"19077:28:31"},"nodeType":"YulFunctionCall","src":"19077:63:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19067:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"19149:49:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19182:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19193:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19178:3:31"},"nodeType":"YulFunctionCall","src":"19178:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19165:12:31"},"nodeType":"YulFunctionCall","src":"19165:33:31"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"19153:8:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"19227:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19236:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19239:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19229:6:31"},"nodeType":"YulFunctionCall","src":"19229:12:31"},"nodeType":"YulExpressionStatement","src":"19229:12:31"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"19213:8:31"},{"name":"_1","nodeType":"YulIdentifier","src":"19223:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19210:2:31"},"nodeType":"YulFunctionCall","src":"19210:16:31"},"nodeType":"YulIf","src":"19207:36:31"},{"nodeType":"YulAssignment","src":"19252:61:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19283:9:31"},{"name":"offset_2","nodeType":"YulIdentifier","src":"19294:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19279:3:31"},"nodeType":"YulFunctionCall","src":"19279:24:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19305:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"19262:16:31"},"nodeType":"YulFunctionCall","src":"19262:51:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19252:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18507:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18518:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18530:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18538:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18546:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18554:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18562:6:31","type":""}],"src":"18376:943:31"},{"body":{"nodeType":"YulBlock","src":"19447:429:31","statements":[{"body":{"nodeType":"YulBlock","src":"19493:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19502:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19505:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19495:6:31"},"nodeType":"YulFunctionCall","src":"19495:12:31"},"nodeType":"YulExpressionStatement","src":"19495:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19468:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"19477:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19464:3:31"},"nodeType":"YulFunctionCall","src":"19464:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"19489:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19460:3:31"},"nodeType":"YulFunctionCall","src":"19460:32:31"},"nodeType":"YulIf","src":"19457:52:31"},{"nodeType":"YulAssignment","src":"19518:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19547:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"19528:18:31"},"nodeType":"YulFunctionCall","src":"19528:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19518:6:31"}]},{"nodeType":"YulAssignment","src":"19566:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19593:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19604:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19589:3:31"},"nodeType":"YulFunctionCall","src":"19589:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19576:12:31"},"nodeType":"YulFunctionCall","src":"19576:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19566:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"19617:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19648:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"19659:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19644:3:31"},"nodeType":"YulFunctionCall","src":"19644:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19631:12:31"},"nodeType":"YulFunctionCall","src":"19631:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19621:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"19706:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19715:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19718:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19708:6:31"},"nodeType":"YulFunctionCall","src":"19708:12:31"},"nodeType":"YulExpressionStatement","src":"19708:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19678:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"19686:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19675:2:31"},"nodeType":"YulFunctionCall","src":"19675:30:31"},"nodeType":"YulIf","src":"19672:50:31"},{"nodeType":"YulVariableDeclaration","src":"19731:85:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19788:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"19799:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19784:3:31"},"nodeType":"YulFunctionCall","src":"19784:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19808:7:31"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"19757:26:31"},"nodeType":"YulFunctionCall","src":"19757:59:31"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"19735:8:31","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"19745:8:31","type":""}]},{"nodeType":"YulAssignment","src":"19825:18:31","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"19835:8:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19825:6:31"}]},{"nodeType":"YulAssignment","src":"19852:18:31","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"19862:8:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19852:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19389:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19400:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19412:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19420:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19428:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19436:6:31","type":""}],"src":"19324:552:31"},{"body":{"nodeType":"YulBlock","src":"19968:167:31","statements":[{"body":{"nodeType":"YulBlock","src":"20014:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20023:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20026:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20016:6:31"},"nodeType":"YulFunctionCall","src":"20016:12:31"},"nodeType":"YulExpressionStatement","src":"20016:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19989:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"19998:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19985:3:31"},"nodeType":"YulFunctionCall","src":"19985:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"20010:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19981:3:31"},"nodeType":"YulFunctionCall","src":"19981:32:31"},"nodeType":"YulIf","src":"19978:52:31"},{"nodeType":"YulAssignment","src":"20039:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20068:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20049:18:31"},"nodeType":"YulFunctionCall","src":"20049:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20039:6:31"}]},{"nodeType":"YulAssignment","src":"20087:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20114:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20125:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:31"},"nodeType":"YulFunctionCall","src":"20110:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20097:12:31"},"nodeType":"YulFunctionCall","src":"20097:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20087:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19926:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19937:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19949:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19957:6:31","type":""}],"src":"19881:254:31"},{"body":{"nodeType":"YulBlock","src":"20287:459:31","statements":[{"body":{"nodeType":"YulBlock","src":"20334:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20343:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20346:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20336:6:31"},"nodeType":"YulFunctionCall","src":"20336:12:31"},"nodeType":"YulExpressionStatement","src":"20336:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20308:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"20317:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20304:3:31"},"nodeType":"YulFunctionCall","src":"20304:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"20329:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20300:3:31"},"nodeType":"YulFunctionCall","src":"20300:33:31"},"nodeType":"YulIf","src":"20297:53:31"},{"nodeType":"YulAssignment","src":"20359:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20388:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20369:18:31"},"nodeType":"YulFunctionCall","src":"20369:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20359:6:31"}]},{"nodeType":"YulAssignment","src":"20407:48:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20440:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20451:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20436:3:31"},"nodeType":"YulFunctionCall","src":"20436:18:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20417:18:31"},"nodeType":"YulFunctionCall","src":"20417:38:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20407:6:31"}]},{"nodeType":"YulAssignment","src":"20464:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20491:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20502:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20487:3:31"},"nodeType":"YulFunctionCall","src":"20487:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20474:12:31"},"nodeType":"YulFunctionCall","src":"20474:32:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20464:6:31"}]},{"nodeType":"YulAssignment","src":"20515:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20542:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20553:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20538:3:31"},"nodeType":"YulFunctionCall","src":"20538:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20525:12:31"},"nodeType":"YulFunctionCall","src":"20525:32:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20515:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"20566:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20597:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20608:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:31"},"nodeType":"YulFunctionCall","src":"20593:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20580:12:31"},"nodeType":"YulFunctionCall","src":"20580:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20570:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"20656:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20665:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20668:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20658:6:31"},"nodeType":"YulFunctionCall","src":"20658:12:31"},"nodeType":"YulExpressionStatement","src":"20658:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20628:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"20636:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20625:2:31"},"nodeType":"YulFunctionCall","src":"20625:30:31"},"nodeType":"YulIf","src":"20622:50:31"},{"nodeType":"YulAssignment","src":"20681:59:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20712:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"20723:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20708:3:31"},"nodeType":"YulFunctionCall","src":"20708:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20732:7:31"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"20691:16:31"},"nodeType":"YulFunctionCall","src":"20691:49:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20681:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20221:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20232:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20244:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20252:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20260:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20268:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20276:6:31","type":""}],"src":"20140:606:31"},{"body":{"nodeType":"YulBlock","src":"20869:102:31","statements":[{"nodeType":"YulAssignment","src":"20879:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20891:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"20902:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20887:3:31"},"nodeType":"YulFunctionCall","src":"20887:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20879:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20921:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20936:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20952:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20957:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20948:3:31"},"nodeType":"YulFunctionCall","src":"20948:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"20961:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20944:3:31"},"nodeType":"YulFunctionCall","src":"20944:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20932:3:31"},"nodeType":"YulFunctionCall","src":"20932:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20914:6:31"},"nodeType":"YulFunctionCall","src":"20914:51:31"},"nodeType":"YulExpressionStatement","src":"20914:51:31"}]},"name":"abi_encode_tuple_t_contract$_IERC5805_$2970__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20838:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20849:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20860:4:31","type":""}],"src":"20751:220:31"},{"body":{"nodeType":"YulBlock","src":"21123:124:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21146:3:31"},{"name":"value0","nodeType":"YulIdentifier","src":"21151:6:31"},{"name":"value1","nodeType":"YulIdentifier","src":"21159:6:31"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"21133:12:31"},"nodeType":"YulFunctionCall","src":"21133:33:31"},"nodeType":"YulExpressionStatement","src":"21133:33:31"},{"nodeType":"YulVariableDeclaration","src":"21175:26:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21189:3:31"},{"name":"value1","nodeType":"YulIdentifier","src":"21194:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21185:3:31"},"nodeType":"YulFunctionCall","src":"21185:16:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21179:2:31","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21217:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"21221:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21210:6:31"},"nodeType":"YulFunctionCall","src":"21210:13:31"},"nodeType":"YulExpressionStatement","src":"21210:13:31"},{"nodeType":"YulAssignment","src":"21232:9:31","value":{"name":"_1","nodeType":"YulIdentifier","src":"21239:2:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21232:3:31"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21091:3:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21096:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21104:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21115:3:31","type":""}],"src":"20976:271:31"},{"body":{"nodeType":"YulBlock","src":"21461:261:31","statements":[{"nodeType":"YulAssignment","src":"21471:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21483:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21494:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21479:3:31"},"nodeType":"YulFunctionCall","src":"21479:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21471:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21514:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"21525:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21507:6:31"},"nodeType":"YulFunctionCall","src":"21507:25:31"},"nodeType":"YulExpressionStatement","src":"21507:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21552:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21563:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21548:3:31"},"nodeType":"YulFunctionCall","src":"21548:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"21568:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21541:6:31"},"nodeType":"YulFunctionCall","src":"21541:34:31"},"nodeType":"YulExpressionStatement","src":"21541:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21595:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21606:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21591:3:31"},"nodeType":"YulFunctionCall","src":"21591:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21615:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"21623:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21611:3:31"},"nodeType":"YulFunctionCall","src":"21611:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21584:6:31"},"nodeType":"YulFunctionCall","src":"21584:45:31"},"nodeType":"YulExpressionStatement","src":"21584:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21649:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21660:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21645:3:31"},"nodeType":"YulFunctionCall","src":"21645:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"21665:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21638:6:31"},"nodeType":"YulFunctionCall","src":"21638:34:31"},"nodeType":"YulExpressionStatement","src":"21638:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21692:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21703:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21688:3:31"},"nodeType":"YulFunctionCall","src":"21688:19:31"},{"name":"value4","nodeType":"YulIdentifier","src":"21709:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21681:6:31"},"nodeType":"YulFunctionCall","src":"21681:35:31"},"nodeType":"YulExpressionStatement","src":"21681:35:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21398:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21409:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21417:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21425:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21433:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21441:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21452:4:31","type":""}],"src":"21252:470:31"},{"body":{"nodeType":"YulBlock","src":"21901:174:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21918:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21929:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21911:6:31"},"nodeType":"YulFunctionCall","src":"21911:21:31"},"nodeType":"YulExpressionStatement","src":"21911:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21952:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"21963:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21948:3:31"},"nodeType":"YulFunctionCall","src":"21948:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"21968:2:31","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21941:6:31"},"nodeType":"YulFunctionCall","src":"21941:30:31"},"nodeType":"YulExpressionStatement","src":"21941:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21991:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22002:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21987:3:31"},"nodeType":"YulFunctionCall","src":"21987:18:31"},{"hexValue":"476f7665726e6f723a206f6e6c79476f7665726e616e6365","kind":"string","nodeType":"YulLiteral","src":"22007:26:31","type":"","value":"Governor: onlyGovernance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21980:6:31"},"nodeType":"YulFunctionCall","src":"21980:54:31"},"nodeType":"YulExpressionStatement","src":"21980:54:31"},{"nodeType":"YulAssignment","src":"22043:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22055:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22066:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22051:3:31"},"nodeType":"YulFunctionCall","src":"22051:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22043:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21878:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21892:4:31","type":""}],"src":"21727:348:31"},{"body":{"nodeType":"YulBlock","src":"22135:325:31","statements":[{"nodeType":"YulAssignment","src":"22145:22:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22159:1:31","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"22162:4:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22155:3:31"},"nodeType":"YulFunctionCall","src":"22155:12:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22145:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"22176:38:31","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22206:4:31"},{"kind":"number","nodeType":"YulLiteral","src":"22212:1:31","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22202:3:31"},"nodeType":"YulFunctionCall","src":"22202:12:31"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"22180:18:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"22253:31:31","statements":[{"nodeType":"YulAssignment","src":"22255:27:31","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22269:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"22277:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22265:3:31"},"nodeType":"YulFunctionCall","src":"22265:17:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22255:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22233:18:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22226:6:31"},"nodeType":"YulFunctionCall","src":"22226:26:31"},"nodeType":"YulIf","src":"22223:61:31"},{"body":{"nodeType":"YulBlock","src":"22343:111:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22364:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22371:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22376:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22367:3:31"},"nodeType":"YulFunctionCall","src":"22367:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22357:6:31"},"nodeType":"YulFunctionCall","src":"22357:31:31"},"nodeType":"YulExpressionStatement","src":"22357:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22408:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22411:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22401:6:31"},"nodeType":"YulFunctionCall","src":"22401:15:31"},"nodeType":"YulExpressionStatement","src":"22401:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22436:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22439:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22429:6:31"},"nodeType":"YulFunctionCall","src":"22429:15:31"},"nodeType":"YulExpressionStatement","src":"22429:15:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22299:18:31"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22322:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"22330:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22319:2:31"},"nodeType":"YulFunctionCall","src":"22319:14:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22296:2:31"},"nodeType":"YulFunctionCall","src":"22296:38:31"},"nodeType":"YulIf","src":"22293:161:31"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22115:4:31","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22124:6:31","type":""}],"src":"22080:380:31"},{"body":{"nodeType":"YulBlock","src":"22639:223:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22656:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22667:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22649:6:31"},"nodeType":"YulFunctionCall","src":"22649:21:31"},"nodeType":"YulExpressionStatement","src":"22649:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22690:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22701:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22686:3:31"},"nodeType":"YulFunctionCall","src":"22686:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"22706:2:31","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22679:6:31"},"nodeType":"YulFunctionCall","src":"22679:30:31"},"nodeType":"YulExpressionStatement","src":"22679:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22729:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22740:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22725:3:31"},"nodeType":"YulFunctionCall","src":"22725:18:31"},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f7420737563636573736675","kind":"string","nodeType":"YulLiteral","src":"22745:34:31","type":"","value":"Governor: proposal not successfu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22718:6:31"},"nodeType":"YulFunctionCall","src":"22718:62:31"},"nodeType":"YulExpressionStatement","src":"22718:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22800:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22811:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22796:3:31"},"nodeType":"YulFunctionCall","src":"22796:18:31"},{"hexValue":"6c","kind":"string","nodeType":"YulLiteral","src":"22816:3:31","type":"","value":"l"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22789:6:31"},"nodeType":"YulFunctionCall","src":"22789:31:31"},"nodeType":"YulExpressionStatement","src":"22789:31:31"},{"nodeType":"YulAssignment","src":"22829:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22841:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"22852:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22837:3:31"},"nodeType":"YulFunctionCall","src":"22837:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22829:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22616:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22630:4:31","type":""}],"src":"22465:397:31"},{"body":{"nodeType":"YulBlock","src":"23041:237:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23058:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23069:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23051:6:31"},"nodeType":"YulFunctionCall","src":"23051:21:31"},"nodeType":"YulExpressionStatement","src":"23051:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23092:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23103:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23088:3:31"},"nodeType":"YulFunctionCall","src":"23088:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"23108:2:31","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23081:6:31"},"nodeType":"YulFunctionCall","src":"23081:30:31"},"nodeType":"YulExpressionStatement","src":"23081:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23131:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23142:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23127:3:31"},"nodeType":"YulFunctionCall","src":"23127:18:31"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"23147:34:31","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23120:6:31"},"nodeType":"YulFunctionCall","src":"23120:62:31"},"nodeType":"YulExpressionStatement","src":"23120:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23202:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23213:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23198:3:31"},"nodeType":"YulFunctionCall","src":"23198:18:31"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"23218:17:31","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23191:6:31"},"nodeType":"YulFunctionCall","src":"23191:45:31"},"nodeType":"YulExpressionStatement","src":"23191:45:31"},{"nodeType":"YulAssignment","src":"23245:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23257:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23268:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23253:3:31"},"nodeType":"YulFunctionCall","src":"23253:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23245:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23018:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23032:4:31","type":""}],"src":"22867:411:31"},{"body":{"nodeType":"YulBlock","src":"23436:173:31","statements":[{"nodeType":"YulAssignment","src":"23446:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23458:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23469:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23454:3:31"},"nodeType":"YulFunctionCall","src":"23454:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23446:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23488:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"23499:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23481:6:31"},"nodeType":"YulFunctionCall","src":"23481:25:31"},"nodeType":"YulExpressionStatement","src":"23481:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23526:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23537:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23522:3:31"},"nodeType":"YulFunctionCall","src":"23522:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"23542:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23515:6:31"},"nodeType":"YulFunctionCall","src":"23515:34:31"},"nodeType":"YulExpressionStatement","src":"23515:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23569:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23580:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23565:3:31"},"nodeType":"YulFunctionCall","src":"23565:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23589:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"23597:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23585:3:31"},"nodeType":"YulFunctionCall","src":"23585:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23558:6:31"},"nodeType":"YulFunctionCall","src":"23558:45:31"},"nodeType":"YulExpressionStatement","src":"23558:45:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23389:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23400:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23408:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23416:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23427:4:31","type":""}],"src":"23283:326:31"},{"body":{"nodeType":"YulBlock","src":"23788:179:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23805:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23816:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23798:6:31"},"nodeType":"YulFunctionCall","src":"23798:21:31"},"nodeType":"YulExpressionStatement","src":"23798:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23839:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23850:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23835:3:31"},"nodeType":"YulFunctionCall","src":"23835:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"23855:2:31","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23828:6:31"},"nodeType":"YulFunctionCall","src":"23828:30:31"},"nodeType":"YulExpressionStatement","src":"23828:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23878:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23889:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23874:3:31"},"nodeType":"YulFunctionCall","src":"23874:18:31"},{"hexValue":"476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964","kind":"string","nodeType":"YulLiteral","src":"23894:31:31","type":"","value":"Governor: unknown proposal id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23867:6:31"},"nodeType":"YulFunctionCall","src":"23867:59:31"},"nodeType":"YulExpressionStatement","src":"23867:59:31"},{"nodeType":"YulAssignment","src":"23935:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23947:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"23958:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23943:3:31"},"nodeType":"YulFunctionCall","src":"23943:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23935:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23765:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23779:4:31","type":""}],"src":"23614:353:31"},{"body":{"nodeType":"YulBlock","src":"24146:178:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24163:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24174:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24156:6:31"},"nodeType":"YulFunctionCall","src":"24156:21:31"},"nodeType":"YulExpressionStatement","src":"24156:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24197:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24208:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24193:3:31"},"nodeType":"YulFunctionCall","src":"24193:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"24213:2:31","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24186:6:31"},"nodeType":"YulFunctionCall","src":"24186:30:31"},"nodeType":"YulExpressionStatement","src":"24186:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24236:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24247:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24232:3:31"},"nodeType":"YulFunctionCall","src":"24232:18:31"},{"hexValue":"476f7665726e6f723a20746f6f206c61746520746f2063616e63656c","kind":"string","nodeType":"YulLiteral","src":"24252:30:31","type":"","value":"Governor: too late to cancel"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24225:6:31"},"nodeType":"YulFunctionCall","src":"24225:58:31"},"nodeType":"YulExpressionStatement","src":"24225:58:31"},{"nodeType":"YulAssignment","src":"24292:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24304:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24315:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24300:3:31"},"nodeType":"YulFunctionCall","src":"24300:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24292:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_397853bd9e6f0888f5fdcc37d267617a8f74b5e4540887757482a2da22f4cdfc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24123:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24137:4:31","type":""}],"src":"23972:352:31"},{"body":{"nodeType":"YulBlock","src":"24503:224:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24520:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24531:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24513:6:31"},"nodeType":"YulFunctionCall","src":"24513:21:31"},"nodeType":"YulExpressionStatement","src":"24513:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24554:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24565:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24550:3:31"},"nodeType":"YulFunctionCall","src":"24550:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"24570:2:31","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24543:6:31"},"nodeType":"YulFunctionCall","src":"24543:30:31"},"nodeType":"YulExpressionStatement","src":"24543:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24593:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24604:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24589:3:31"},"nodeType":"YulFunctionCall","src":"24589:18:31"},{"hexValue":"476f7665726e6f723a206f6e6c792070726f706f7365722063616e2063616e63","kind":"string","nodeType":"YulLiteral","src":"24609:34:31","type":"","value":"Governor: only proposer can canc"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24582:6:31"},"nodeType":"YulFunctionCall","src":"24582:62:31"},"nodeType":"YulExpressionStatement","src":"24582:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24664:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24675:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24660:3:31"},"nodeType":"YulFunctionCall","src":"24660:18:31"},{"hexValue":"656c","kind":"string","nodeType":"YulLiteral","src":"24680:4:31","type":"","value":"el"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24653:6:31"},"nodeType":"YulFunctionCall","src":"24653:32:31"},"nodeType":"YulExpressionStatement","src":"24653:32:31"},{"nodeType":"YulAssignment","src":"24694:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24706:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"24717:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24702:3:31"},"nodeType":"YulFunctionCall","src":"24702:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24694:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3fd25dc9791b847d14d0815e84967e87bbf815be3a68ecdd58e99f67196ddc7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24480:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24494:4:31","type":""}],"src":"24329:398:31"},{"body":{"nodeType":"YulBlock","src":"24823:544:31","statements":[{"body":{"nodeType":"YulBlock","src":"24869:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24878:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24881:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24871:6:31"},"nodeType":"YulFunctionCall","src":"24871:12:31"},"nodeType":"YulExpressionStatement","src":"24871:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24844:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"24853:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24840:3:31"},"nodeType":"YulFunctionCall","src":"24840:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"24865:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24836:3:31"},"nodeType":"YulFunctionCall","src":"24836:32:31"},"nodeType":"YulIf","src":"24833:52:31"},{"nodeType":"YulVariableDeclaration","src":"24894:30:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24914:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24908:5:31"},"nodeType":"YulFunctionCall","src":"24908:16:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24898:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"24967:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24976:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24979:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24969:6:31"},"nodeType":"YulFunctionCall","src":"24969:12:31"},"nodeType":"YulExpressionStatement","src":"24969:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24939:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"24947:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24936:2:31"},"nodeType":"YulFunctionCall","src":"24936:30:31"},"nodeType":"YulIf","src":"24933:50:31"},{"nodeType":"YulVariableDeclaration","src":"24992:32:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25006:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"25017:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25002:3:31"},"nodeType":"YulFunctionCall","src":"25002:22:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24996:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"25072:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25081:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25084:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25074:6:31"},"nodeType":"YulFunctionCall","src":"25074:12:31"},"nodeType":"YulExpressionStatement","src":"25074:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25051:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"25055:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25047:3:31"},"nodeType":"YulFunctionCall","src":"25047:13:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25062:7:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25043:3:31"},"nodeType":"YulFunctionCall","src":"25043:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25036:6:31"},"nodeType":"YulFunctionCall","src":"25036:35:31"},"nodeType":"YulIf","src":"25033:55:31"},{"nodeType":"YulVariableDeclaration","src":"25097:19:31","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25113:2:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25107:5:31"},"nodeType":"YulFunctionCall","src":"25107:9:31"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"25101:2:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25125:61:31","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"25182:2:31"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"25154:27:31"},"nodeType":"YulFunctionCall","src":"25154:31:31"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"25138:15:31"},"nodeType":"YulFunctionCall","src":"25138:48:31"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"25129:5:31","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25202:5:31"},{"name":"_2","nodeType":"YulIdentifier","src":"25209:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25195:6:31"},"nodeType":"YulFunctionCall","src":"25195:17:31"},"nodeType":"YulExpressionStatement","src":"25195:17:31"},{"body":{"nodeType":"YulBlock","src":"25258:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25267:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25270:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25260:6:31"},"nodeType":"YulFunctionCall","src":"25260:12:31"},"nodeType":"YulExpressionStatement","src":"25260:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25235:2:31"},{"name":"_2","nodeType":"YulIdentifier","src":"25239:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25231:3:31"},"nodeType":"YulFunctionCall","src":"25231:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"25244:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25227:3:31"},"nodeType":"YulFunctionCall","src":"25227:20:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25249:7:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25224:2:31"},"nodeType":"YulFunctionCall","src":"25224:33:31"},"nodeType":"YulIf","src":"25221:53:31"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25309:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"25313:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25305:3:31"},"nodeType":"YulFunctionCall","src":"25305:11:31"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25322:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"25329:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25318:3:31"},"nodeType":"YulFunctionCall","src":"25318:14:31"},{"name":"_2","nodeType":"YulIdentifier","src":"25334:2:31"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"25283:21:31"},"nodeType":"YulFunctionCall","src":"25283:54:31"},"nodeType":"YulExpressionStatement","src":"25283:54:31"},{"nodeType":"YulAssignment","src":"25346:15:31","value":{"name":"array","nodeType":"YulIdentifier","src":"25356:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25346:6:31"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24789:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24800:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24812:6:31","type":""}],"src":"24732:635:31"},{"body":{"nodeType":"YulBlock","src":"25404:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25421:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25428:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"25433:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25424:3:31"},"nodeType":"YulFunctionCall","src":"25424:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25414:6:31"},"nodeType":"YulFunctionCall","src":"25414:31:31"},"nodeType":"YulExpressionStatement","src":"25414:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25461:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25464:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25454:6:31"},"nodeType":"YulFunctionCall","src":"25454:15:31"},"nodeType":"YulExpressionStatement","src":"25454:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25485:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25488:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25478:6:31"},"nodeType":"YulFunctionCall","src":"25478:15:31"},"nodeType":"YulExpressionStatement","src":"25478:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25372:127:31"},{"body":{"nodeType":"YulBlock","src":"25553:76:31","statements":[{"body":{"nodeType":"YulBlock","src":"25575:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25577:16:31"},"nodeType":"YulFunctionCall","src":"25577:18:31"},"nodeType":"YulExpressionStatement","src":"25577:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25569:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"25572:1:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25566:2:31"},"nodeType":"YulFunctionCall","src":"25566:8:31"},"nodeType":"YulIf","src":"25563:34:31"},{"nodeType":"YulAssignment","src":"25606:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25618:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"25621:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25614:3:31"},"nodeType":"YulFunctionCall","src":"25614:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25606:4:31"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25535:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"25538:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25544:4:31","type":""}],"src":"25504:125:31"},{"body":{"nodeType":"YulBlock","src":"25666:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25683:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25690:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"25695:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25686:3:31"},"nodeType":"YulFunctionCall","src":"25686:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25676:6:31"},"nodeType":"YulFunctionCall","src":"25676:31:31"},"nodeType":"YulExpressionStatement","src":"25676:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25723:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25726:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25716:6:31"},"nodeType":"YulFunctionCall","src":"25716:15:31"},"nodeType":"YulExpressionStatement","src":"25716:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25747:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25750:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25740:6:31"},"nodeType":"YulFunctionCall","src":"25740:15:31"},"nodeType":"YulExpressionStatement","src":"25740:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"25634:127:31"},{"body":{"nodeType":"YulBlock","src":"25940:239:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25957:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"25968:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25950:6:31"},"nodeType":"YulFunctionCall","src":"25950:21:31"},"nodeType":"YulExpressionStatement","src":"25950:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25991:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26002:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25987:3:31"},"nodeType":"YulFunctionCall","src":"25987:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"26007:2:31","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25980:6:31"},"nodeType":"YulFunctionCall","src":"25980:30:31"},"nodeType":"YulExpressionStatement","src":"25980:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26030:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26041:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26026:3:31"},"nodeType":"YulFunctionCall","src":"26026:18:31"},{"hexValue":"476f7665726e6f723a2070726f706f73657220766f7465732062656c6f772070","kind":"string","nodeType":"YulLiteral","src":"26046:34:31","type":"","value":"Governor: proposer votes below p"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26019:6:31"},"nodeType":"YulFunctionCall","src":"26019:62:31"},"nodeType":"YulExpressionStatement","src":"26019:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26101:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26112:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26097:3:31"},"nodeType":"YulFunctionCall","src":"26097:18:31"},{"hexValue":"726f706f73616c207468726573686f6c64","kind":"string","nodeType":"YulLiteral","src":"26117:19:31","type":"","value":"roposal threshold"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26090:6:31"},"nodeType":"YulFunctionCall","src":"26090:47:31"},"nodeType":"YulExpressionStatement","src":"26090:47:31"},{"nodeType":"YulAssignment","src":"26146:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26158:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26169:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26154:3:31"},"nodeType":"YulFunctionCall","src":"26154:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26146:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25917:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25931:4:31","type":""}],"src":"25766:413:31"},{"body":{"nodeType":"YulBlock","src":"26358:223:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26375:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26386:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26368:6:31"},"nodeType":"YulFunctionCall","src":"26368:21:31"},"nodeType":"YulExpressionStatement","src":"26368:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26409:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26420:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26405:3:31"},"nodeType":"YulFunctionCall","src":"26405:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"26425:2:31","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26398:6:31"},"nodeType":"YulFunctionCall","src":"26398:30:31"},"nodeType":"YulExpressionStatement","src":"26398:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26448:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26459:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26444:3:31"},"nodeType":"YulFunctionCall","src":"26444:18:31"},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e6774","kind":"string","nodeType":"YulLiteral","src":"26464:34:31","type":"","value":"Governor: invalid proposal lengt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26437:6:31"},"nodeType":"YulFunctionCall","src":"26437:62:31"},"nodeType":"YulExpressionStatement","src":"26437:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26519:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26530:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26515:3:31"},"nodeType":"YulFunctionCall","src":"26515:18:31"},{"hexValue":"68","kind":"string","nodeType":"YulLiteral","src":"26535:3:31","type":"","value":"h"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26508:6:31"},"nodeType":"YulFunctionCall","src":"26508:31:31"},"nodeType":"YulExpressionStatement","src":"26508:31:31"},{"nodeType":"YulAssignment","src":"26548:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26560:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26571:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26556:3:31"},"nodeType":"YulFunctionCall","src":"26556:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26548:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26335:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26349:4:31","type":""}],"src":"26184:397:31"},{"body":{"nodeType":"YulBlock","src":"26760:174:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26777:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26788:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26770:6:31"},"nodeType":"YulFunctionCall","src":"26770:21:31"},"nodeType":"YulExpressionStatement","src":"26770:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26811:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26822:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26807:3:31"},"nodeType":"YulFunctionCall","src":"26807:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"26827:2:31","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26800:6:31"},"nodeType":"YulFunctionCall","src":"26800:30:31"},"nodeType":"YulExpressionStatement","src":"26800:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26850:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26861:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26846:3:31"},"nodeType":"YulFunctionCall","src":"26846:18:31"},{"hexValue":"476f7665726e6f723a20656d7074792070726f706f73616c","kind":"string","nodeType":"YulLiteral","src":"26866:26:31","type":"","value":"Governor: empty proposal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26839:6:31"},"nodeType":"YulFunctionCall","src":"26839:54:31"},"nodeType":"YulExpressionStatement","src":"26839:54:31"},{"nodeType":"YulAssignment","src":"26902:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26914:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"26925:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26910:3:31"},"nodeType":"YulFunctionCall","src":"26910:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26902:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26737:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26751:4:31","type":""}],"src":"26586:348:31"},{"body":{"nodeType":"YulBlock","src":"27113:223:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27130:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27141:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27123:6:31"},"nodeType":"YulFunctionCall","src":"27123:21:31"},"nodeType":"YulExpressionStatement","src":"27123:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27164:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27175:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27160:3:31"},"nodeType":"YulFunctionCall","src":"27160:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"27180:2:31","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27153:6:31"},"nodeType":"YulFunctionCall","src":"27153:30:31"},"nodeType":"YulExpressionStatement","src":"27153:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27203:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27214:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27199:3:31"},"nodeType":"YulFunctionCall","src":"27199:18:31"},{"hexValue":"476f7665726e6f723a2070726f706f73616c20616c7265616479206578697374","kind":"string","nodeType":"YulLiteral","src":"27219:34:31","type":"","value":"Governor: proposal already exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27192:6:31"},"nodeType":"YulFunctionCall","src":"27192:62:31"},"nodeType":"YulExpressionStatement","src":"27192:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27274:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27285:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27270:3:31"},"nodeType":"YulFunctionCall","src":"27270:18:31"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"27290:3:31","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27263:6:31"},"nodeType":"YulFunctionCall","src":"27263:31:31"},"nodeType":"YulExpressionStatement","src":"27263:31:31"},{"nodeType":"YulAssignment","src":"27303:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27315:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"27326:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27311:3:31"},"nodeType":"YulFunctionCall","src":"27311:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27303:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27090:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27104:4:31","type":""}],"src":"26939:397:31"},{"body":{"nodeType":"YulBlock","src":"27389:80:31","statements":[{"body":{"nodeType":"YulBlock","src":"27416:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27418:16:31"},"nodeType":"YulFunctionCall","src":"27418:18:31"},"nodeType":"YulExpressionStatement","src":"27418:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27405:1:31"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27412:1:31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27408:3:31"},"nodeType":"YulFunctionCall","src":"27408:6:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27402:2:31"},"nodeType":"YulFunctionCall","src":"27402:13:31"},"nodeType":"YulIf","src":"27399:39:31"},{"nodeType":"YulAssignment","src":"27447:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27458:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"27461:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27454:3:31"},"nodeType":"YulFunctionCall","src":"27454:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27447:3:31"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27372:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"27375:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27381:3:31","type":""}],"src":"27341:128:31"},{"body":{"nodeType":"YulBlock","src":"27535:400:31","statements":[{"nodeType":"YulVariableDeclaration","src":"27545:26:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27565:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27559:5:31"},"nodeType":"YulFunctionCall","src":"27559:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27549:6:31","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27587:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"27592:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27580:6:31"},"nodeType":"YulFunctionCall","src":"27580:19:31"},"nodeType":"YulExpressionStatement","src":"27580:19:31"},{"nodeType":"YulVariableDeclaration","src":"27608:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"27618:4:31","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27612:2:31","type":""}]},{"nodeType":"YulAssignment","src":"27631:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27642:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"27647:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27638:3:31"},"nodeType":"YulFunctionCall","src":"27638:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27631:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"27659:28:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27677:5:31"},{"name":"_1","nodeType":"YulIdentifier","src":"27684:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27673:3:31"},"nodeType":"YulFunctionCall","src":"27673:14:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"27663:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27696:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"27705:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"27700:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"27764:146:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27785:3:31"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"27800:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27794:5:31"},"nodeType":"YulFunctionCall","src":"27794:13:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27817:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"27822:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27813:3:31"},"nodeType":"YulFunctionCall","src":"27813:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"27826:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27809:3:31"},"nodeType":"YulFunctionCall","src":"27809:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27790:3:31"},"nodeType":"YulFunctionCall","src":"27790:39:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27778:6:31"},"nodeType":"YulFunctionCall","src":"27778:52:31"},"nodeType":"YulExpressionStatement","src":"27778:52:31"},{"nodeType":"YulAssignment","src":"27843:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27854:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"27859:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27850:3:31"},"nodeType":"YulFunctionCall","src":"27850:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27843:3:31"}]},{"nodeType":"YulAssignment","src":"27875:25:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"27889:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"27897:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27885:3:31"},"nodeType":"YulFunctionCall","src":"27885:15:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"27875:6:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27726:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"27729:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27723:2:31"},"nodeType":"YulFunctionCall","src":"27723:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27737:18:31","statements":[{"nodeType":"YulAssignment","src":"27739:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27748:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"27751:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27744:3:31"},"nodeType":"YulFunctionCall","src":"27744:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"27739:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"27719:3:31","statements":[]},"src":"27715:195:31"},{"nodeType":"YulAssignment","src":"27919:10:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"27926:3:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27919:3:31"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27512:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27519:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27527:3:31","type":""}],"src":"27474:461:31"},{"body":{"nodeType":"YulBlock","src":"27999:532:31","statements":[{"nodeType":"YulVariableDeclaration","src":"28009:16:31","value":{"name":"pos","nodeType":"YulIdentifier","src":"28022:3:31"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"28013:5:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28034:26:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28054:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28048:5:31"},"nodeType":"YulFunctionCall","src":"28048:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28038:6:31","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28076:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"28081:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28069:6:31"},"nodeType":"YulFunctionCall","src":"28069:19:31"},"nodeType":"YulExpressionStatement","src":"28069:19:31"},{"nodeType":"YulVariableDeclaration","src":"28097:14:31","value":{"kind":"number","nodeType":"YulLiteral","src":"28107:4:31","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28101:2:31","type":""}]},{"nodeType":"YulAssignment","src":"28120:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28131:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"28136:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28127:3:31"},"nodeType":"YulFunctionCall","src":"28127:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28120:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"28148:47:31","value":{"arguments":[{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"28168:5:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28179:1:31","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"28182:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28175:3:31"},"nodeType":"YulFunctionCall","src":"28175:14:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28164:3:31"},"nodeType":"YulFunctionCall","src":"28164:26:31"},{"name":"_1","nodeType":"YulIdentifier","src":"28192:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28160:3:31"},"nodeType":"YulFunctionCall","src":"28160:35:31"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"28152:4:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28204:28:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28222:5:31"},{"name":"_1","nodeType":"YulIdentifier","src":"28229:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28218:3:31"},"nodeType":"YulFunctionCall","src":"28218:14:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"28208:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28241:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"28250:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28245:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"28309:196:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28330:3:31"},{"arguments":[{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28343:4:31"},{"name":"pos_1","nodeType":"YulIdentifier","src":"28349:5:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28339:3:31"},"nodeType":"YulFunctionCall","src":"28339:16:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28361:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28357:3:31"},"nodeType":"YulFunctionCall","src":"28357:7:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28335:3:31"},"nodeType":"YulFunctionCall","src":"28335:30:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28323:6:31"},"nodeType":"YulFunctionCall","src":"28323:43:31"},"nodeType":"YulExpressionStatement","src":"28323:43:31"},{"nodeType":"YulAssignment","src":"28379:46:31","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28411:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28405:5:31"},"nodeType":"YulFunctionCall","src":"28405:13:31"},{"name":"tail","nodeType":"YulIdentifier","src":"28420:4:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"28387:17:31"},"nodeType":"YulFunctionCall","src":"28387:38:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28379:4:31"}]},{"nodeType":"YulAssignment","src":"28438:25:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28452:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"28460:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28448:3:31"},"nodeType":"YulFunctionCall","src":"28448:15:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"28438:6:31"}]},{"nodeType":"YulAssignment","src":"28476:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28487:3:31"},{"name":"_1","nodeType":"YulIdentifier","src":"28492:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28483:3:31"},"nodeType":"YulFunctionCall","src":"28483:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28476:3:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28271:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"28274:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28268:2:31"},"nodeType":"YulFunctionCall","src":"28268:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28282:18:31","statements":[{"nodeType":"YulAssignment","src":"28284:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28293:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"28296:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28289:3:31"},"nodeType":"YulFunctionCall","src":"28289:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28284:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"28264:3:31","statements":[]},"src":"28260:245:31"},{"nodeType":"YulAssignment","src":"28514:11:31","value":{"name":"tail","nodeType":"YulIdentifier","src":"28521:4:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28514:3:31"}]}]},"name":"abi_encode_array_bytes_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27976:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27983:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27991:3:31","type":""}],"src":"27940:591:31"},{"body":{"nodeType":"YulBlock","src":"29119:1281:31","statements":[{"nodeType":"YulVariableDeclaration","src":"29129:13:31","value":{"kind":"number","nodeType":"YulLiteral","src":"29139:3:31","type":"","value":"288"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29133:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29158:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"29169:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29151:6:31"},"nodeType":"YulFunctionCall","src":"29151:25:31"},"nodeType":"YulExpressionStatement","src":"29151:25:31"},{"nodeType":"YulVariableDeclaration","src":"29185:12:31","value":{"kind":"number","nodeType":"YulLiteral","src":"29195:2:31","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"29189:2:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29217:9:31"},{"name":"_2","nodeType":"YulIdentifier","src":"29228:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29213:3:31"},"nodeType":"YulFunctionCall","src":"29213:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29237:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29253:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"29258:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29249:3:31"},"nodeType":"YulFunctionCall","src":"29249:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"29262:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29245:3:31"},"nodeType":"YulFunctionCall","src":"29245:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29233:3:31"},"nodeType":"YulFunctionCall","src":"29233:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29206:6:31"},"nodeType":"YulFunctionCall","src":"29206:60:31"},"nodeType":"YulExpressionStatement","src":"29206:60:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29286:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"29297:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29282:3:31"},"nodeType":"YulFunctionCall","src":"29282:18:31"},{"name":"_1","nodeType":"YulIdentifier","src":"29302:2:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29275:6:31"},"nodeType":"YulFunctionCall","src":"29275:30:31"},"nodeType":"YulExpressionStatement","src":"29275:30:31"},{"nodeType":"YulVariableDeclaration","src":"29314:70:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29357:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29369:9:31"},{"name":"_1","nodeType":"YulIdentifier","src":"29380:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29365:3:31"},"nodeType":"YulFunctionCall","src":"29365:18:31"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"29328:28:31"},"nodeType":"YulFunctionCall","src":"29328:56:31"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"29318:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29404:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"29415:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29400:3:31"},"nodeType":"YulFunctionCall","src":"29400:18:31"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"29424:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"29432:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29420:3:31"},"nodeType":"YulFunctionCall","src":"29420:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29393:6:31"},"nodeType":"YulFunctionCall","src":"29393:50:31"},"nodeType":"YulExpressionStatement","src":"29393:50:31"},{"nodeType":"YulVariableDeclaration","src":"29452:58:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29495:6:31"},{"name":"tail_1","nodeType":"YulIdentifier","src":"29503:6:31"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"29466:28:31"},"nodeType":"YulFunctionCall","src":"29466:44:31"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"29456:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29530:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"29541:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29526:3:31"},"nodeType":"YulFunctionCall","src":"29526:19:31"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"29551:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"29559:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29547:3:31"},"nodeType":"YulFunctionCall","src":"29547:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29519:6:31"},"nodeType":"YulFunctionCall","src":"29519:51:31"},"nodeType":"YulExpressionStatement","src":"29519:51:31"},{"nodeType":"YulVariableDeclaration","src":"29579:17:31","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"29590:6:31"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"29583:3:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29605:27:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29625:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29619:5:31"},"nodeType":"YulFunctionCall","src":"29619:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29609:6:31","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"29648:6:31"},{"name":"length","nodeType":"YulIdentifier","src":"29656:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29641:6:31"},"nodeType":"YulFunctionCall","src":"29641:22:31"},"nodeType":"YulExpressionStatement","src":"29641:22:31"},{"nodeType":"YulAssignment","src":"29672:22:31","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"29683:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"29691:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29679:3:31"},"nodeType":"YulFunctionCall","src":"29679:15:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29672:3:31"}]},{"nodeType":"YulVariableDeclaration","src":"29703:50:31","value":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"29725:6:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29737:1:31","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"29740:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29733:3:31"},"nodeType":"YulFunctionCall","src":"29733:14:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29721:3:31"},"nodeType":"YulFunctionCall","src":"29721:27:31"},{"name":"_2","nodeType":"YulIdentifier","src":"29750:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29717:3:31"},"nodeType":"YulFunctionCall","src":"29717:36:31"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"29707:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29762:29:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29780:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"29788:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29776:3:31"},"nodeType":"YulFunctionCall","src":"29776:15:31"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"29766:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29800:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"29809:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"29804:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"29868:203:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29889:3:31"},{"arguments":[{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"29902:6:31"},{"name":"tail_2","nodeType":"YulIdentifier","src":"29910:6:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29898:3:31"},"nodeType":"YulFunctionCall","src":"29898:19:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29923:2:31","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29919:3:31"},"nodeType":"YulFunctionCall","src":"29919:7:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29894:3:31"},"nodeType":"YulFunctionCall","src":"29894:33:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29882:6:31"},"nodeType":"YulFunctionCall","src":"29882:46:31"},"nodeType":"YulExpressionStatement","src":"29882:46:31"},{"nodeType":"YulAssignment","src":"29941:50:31","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"29975:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29969:5:31"},"nodeType":"YulFunctionCall","src":"29969:13:31"},{"name":"tail_3","nodeType":"YulIdentifier","src":"29984:6:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"29951:17:31"},"nodeType":"YulFunctionCall","src":"29951:40:31"},"variableNames":[{"name":"tail_3","nodeType":"YulIdentifier","src":"29941:6:31"}]},{"nodeType":"YulAssignment","src":"30004:25:31","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30018:6:31"},{"name":"_2","nodeType":"YulIdentifier","src":"30026:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30014:3:31"},"nodeType":"YulFunctionCall","src":"30014:15:31"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30004:6:31"}]},{"nodeType":"YulAssignment","src":"30042:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30053:3:31"},{"name":"_2","nodeType":"YulIdentifier","src":"30058:2:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30049:3:31"},"nodeType":"YulFunctionCall","src":"30049:12:31"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30042:3:31"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29830:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"29833:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29827:2:31"},"nodeType":"YulFunctionCall","src":"29827:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29841:18:31","statements":[{"nodeType":"YulAssignment","src":"29843:14:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29852:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"29855:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29848:3:31"},"nodeType":"YulFunctionCall","src":"29848:9:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"29843:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"29823:3:31","statements":[]},"src":"29819:252:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30091:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"30102:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30087:3:31"},"nodeType":"YulFunctionCall","src":"30087:19:31"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"30112:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"30120:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30108:3:31"},"nodeType":"YulFunctionCall","src":"30108:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30080:6:31"},"nodeType":"YulFunctionCall","src":"30080:51:31"},"nodeType":"YulExpressionStatement","src":"30080:51:31"},{"nodeType":"YulVariableDeclaration","src":"30140:56:31","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"30181:6:31"},{"name":"tail_3","nodeType":"YulIdentifier","src":"30189:6:31"}],"functionName":{"name":"abi_encode_array_bytes_dyn","nodeType":"YulIdentifier","src":"30154:26:31"},"nodeType":"YulFunctionCall","src":"30154:42:31"},"variables":[{"name":"tail_4","nodeType":"YulTypedName","src":"30144:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30216:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"30227:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30212:3:31"},"nodeType":"YulFunctionCall","src":"30212:19:31"},{"name":"value6","nodeType":"YulIdentifier","src":"30233:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30205:6:31"},"nodeType":"YulFunctionCall","src":"30205:35:31"},"nodeType":"YulExpressionStatement","src":"30205:35:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30260:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"30271:3:31","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30256:3:31"},"nodeType":"YulFunctionCall","src":"30256:19:31"},{"name":"value7","nodeType":"YulIdentifier","src":"30277:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30249:6:31"},"nodeType":"YulFunctionCall","src":"30249:35:31"},"nodeType":"YulExpressionStatement","src":"30249:35:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30304:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"30315:3:31","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30300:3:31"},"nodeType":"YulFunctionCall","src":"30300:19:31"},{"arguments":[{"name":"tail_4","nodeType":"YulIdentifier","src":"30325:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"30333:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30321:3:31"},"nodeType":"YulFunctionCall","src":"30321:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30293:6:31"},"nodeType":"YulFunctionCall","src":"30293:51:31"},"nodeType":"YulExpressionStatement","src":"30293:51:31"},{"nodeType":"YulAssignment","src":"30353:41:31","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"30379:6:31"},{"name":"tail_4","nodeType":"YulIdentifier","src":"30387:6:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"30361:17:31"},"nodeType":"YulFunctionCall","src":"30361:33:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30353:4:31"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29024:9:31","type":""},{"name":"value8","nodeType":"YulTypedName","src":"29035:6:31","type":""},{"name":"value7","nodeType":"YulTypedName","src":"29043:6:31","type":""},{"name":"value6","nodeType":"YulTypedName","src":"29051:6:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"29059:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29067:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29075:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29083:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29091:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29099:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29110:4:31","type":""}],"src":"28536:1864:31"},{"body":{"nodeType":"YulBlock","src":"30485:204:31","statements":[{"body":{"nodeType":"YulBlock","src":"30531:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30540:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30543:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30533:6:31"},"nodeType":"YulFunctionCall","src":"30533:12:31"},"nodeType":"YulExpressionStatement","src":"30533:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30506:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"30515:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30502:3:31"},"nodeType":"YulFunctionCall","src":"30502:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"30527:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30498:3:31"},"nodeType":"YulFunctionCall","src":"30498:32:31"},"nodeType":"YulIf","src":"30495:52:31"},{"nodeType":"YulVariableDeclaration","src":"30556:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30575:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30569:5:31"},"nodeType":"YulFunctionCall","src":"30569:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30560:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"30643:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30652:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30655:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30645:6:31"},"nodeType":"YulFunctionCall","src":"30645:12:31"},"nodeType":"YulExpressionStatement","src":"30645:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30607:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30618:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"30625:14:31","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30614:3:31"},"nodeType":"YulFunctionCall","src":"30614:26:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30604:2:31"},"nodeType":"YulFunctionCall","src":"30604:37:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30597:6:31"},"nodeType":"YulFunctionCall","src":"30597:45:31"},"nodeType":"YulIf","src":"30594:65:31"},{"nodeType":"YulAssignment","src":"30668:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"30678:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30668:6:31"}]}]},"name":"abi_decode_tuple_t_uint48_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30451:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30462:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30474:6:31","type":""}],"src":"30405:284:31"},{"body":{"nodeType":"YulBlock","src":"31047:405:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31064:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31075:3:31","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31057:6:31"},"nodeType":"YulFunctionCall","src":"31057:22:31"},"nodeType":"YulExpressionStatement","src":"31057:22:31"},{"nodeType":"YulVariableDeclaration","src":"31088:71:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31131:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31143:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31154:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31139:3:31"},"nodeType":"YulFunctionCall","src":"31139:19:31"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"31102:28:31"},"nodeType":"YulFunctionCall","src":"31102:57:31"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"31092:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31179:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31190:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31175:3:31"},"nodeType":"YulFunctionCall","src":"31175:18:31"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"31199:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"31207:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31195:3:31"},"nodeType":"YulFunctionCall","src":"31195:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31168:6:31"},"nodeType":"YulFunctionCall","src":"31168:50:31"},"nodeType":"YulExpressionStatement","src":"31168:50:31"},{"nodeType":"YulVariableDeclaration","src":"31227:58:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31270:6:31"},{"name":"tail_1","nodeType":"YulIdentifier","src":"31278:6:31"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"31241:28:31"},"nodeType":"YulFunctionCall","src":"31241:44:31"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"31231:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31305:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31316:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31301:3:31"},"nodeType":"YulFunctionCall","src":"31301:18:31"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"31325:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"31333:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31321:3:31"},"nodeType":"YulFunctionCall","src":"31321:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31294:6:31"},"nodeType":"YulFunctionCall","src":"31294:50:31"},"nodeType":"YulExpressionStatement","src":"31294:50:31"},{"nodeType":"YulAssignment","src":"31353:50:31","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31388:6:31"},{"name":"tail_2","nodeType":"YulIdentifier","src":"31396:6:31"}],"functionName":{"name":"abi_encode_array_bytes_dyn","nodeType":"YulIdentifier","src":"31361:26:31"},"nodeType":"YulFunctionCall","src":"31361:42:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31353:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31423:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31434:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31419:3:31"},"nodeType":"YulFunctionCall","src":"31419:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"31439:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31412:6:31"},"nodeType":"YulFunctionCall","src":"31412:34:31"},"nodeType":"YulExpressionStatement","src":"31412:34:31"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30992:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31003:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31011:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31019:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31027:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31038:4:31","type":""}],"src":"30694:758:31"},{"body":{"nodeType":"YulBlock","src":"31631:229:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31648:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31659:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31641:6:31"},"nodeType":"YulFunctionCall","src":"31641:21:31"},"nodeType":"YulExpressionStatement","src":"31641:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31682:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31693:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31678:3:31"},"nodeType":"YulFunctionCall","src":"31678:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"31698:2:31","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31671:6:31"},"nodeType":"YulFunctionCall","src":"31671:30:31"},"nodeType":"YulExpressionStatement","src":"31671:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31721:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31732:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31717:3:31"},"nodeType":"YulFunctionCall","src":"31717:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"31737:34:31","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31710:6:31"},"nodeType":"YulFunctionCall","src":"31710:62:31"},"nodeType":"YulExpressionStatement","src":"31710:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31792:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31803:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31788:3:31"},"nodeType":"YulFunctionCall","src":"31788:18:31"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"31808:9:31","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31781:6:31"},"nodeType":"YulFunctionCall","src":"31781:37:31"},"nodeType":"YulExpressionStatement","src":"31781:37:31"},{"nodeType":"YulAssignment","src":"31827:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31839:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"31850:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31835:3:31"},"nodeType":"YulFunctionCall","src":"31835:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31827:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31608:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31622:4:31","type":""}],"src":"31457:403:31"},{"body":{"nodeType":"YulBlock","src":"32039:228:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32056:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32067:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32049:6:31"},"nodeType":"YulFunctionCall","src":"32049:21:31"},"nodeType":"YulExpressionStatement","src":"32049:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32090:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32101:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32086:3:31"},"nodeType":"YulFunctionCall","src":"32086:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"32106:2:31","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32079:6:31"},"nodeType":"YulFunctionCall","src":"32079:30:31"},"nodeType":"YulExpressionStatement","src":"32079:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32129:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32140:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32125:3:31"},"nodeType":"YulFunctionCall","src":"32125:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"32145:34:31","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32118:6:31"},"nodeType":"YulFunctionCall","src":"32118:62:31"},"nodeType":"YulExpressionStatement","src":"32118:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32200:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32211:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32196:3:31"},"nodeType":"YulFunctionCall","src":"32196:18:31"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"32216:8:31","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32189:6:31"},"nodeType":"YulFunctionCall","src":"32189:36:31"},"nodeType":"YulExpressionStatement","src":"32189:36:31"},{"nodeType":"YulAssignment","src":"32234:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32246:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32257:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32242:3:31"},"nodeType":"YulFunctionCall","src":"32242:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32234:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32016:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32030:4:31","type":""}],"src":"31865:402:31"},{"body":{"nodeType":"YulBlock","src":"32446:228:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32463:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32474:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32456:6:31"},"nodeType":"YulFunctionCall","src":"32456:21:31"},"nodeType":"YulExpressionStatement","src":"32456:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32497:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32508:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32493:3:31"},"nodeType":"YulFunctionCall","src":"32493:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"32513:2:31","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32486:6:31"},"nodeType":"YulFunctionCall","src":"32486:30:31"},"nodeType":"YulExpressionStatement","src":"32486:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32536:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32547:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32532:3:31"},"nodeType":"YulFunctionCall","src":"32532:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"32552:34:31","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32525:6:31"},"nodeType":"YulFunctionCall","src":"32525:62:31"},"nodeType":"YulExpressionStatement","src":"32525:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32607:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32618:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32603:3:31"},"nodeType":"YulFunctionCall","src":"32603:18:31"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"32623:8:31","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32596:6:31"},"nodeType":"YulFunctionCall","src":"32596:36:31"},"nodeType":"YulExpressionStatement","src":"32596:36:31"},{"nodeType":"YulAssignment","src":"32641:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32653:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32664:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32649:3:31"},"nodeType":"YulFunctionCall","src":"32649:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32641:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32423:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32437:4:31","type":""}],"src":"32272:402:31"},{"body":{"nodeType":"YulBlock","src":"32853:225:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32870:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32881:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32863:6:31"},"nodeType":"YulFunctionCall","src":"32863:21:31"},"nodeType":"YulExpressionStatement","src":"32863:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32904:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32915:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32900:3:31"},"nodeType":"YulFunctionCall","src":"32900:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"32920:2:31","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32893:6:31"},"nodeType":"YulFunctionCall","src":"32893:30:31"},"nodeType":"YulExpressionStatement","src":"32893:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32943:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"32954:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32939:3:31"},"nodeType":"YulFunctionCall","src":"32939:18:31"},{"hexValue":"476f7665726e6f723a20766f7465206e6f742063757272656e746c7920616374","kind":"string","nodeType":"YulLiteral","src":"32959:34:31","type":"","value":"Governor: vote not currently act"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32932:6:31"},"nodeType":"YulFunctionCall","src":"32932:62:31"},"nodeType":"YulExpressionStatement","src":"32932:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33014:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33025:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33010:3:31"},"nodeType":"YulFunctionCall","src":"33010:18:31"},{"hexValue":"697665","kind":"string","nodeType":"YulLiteral","src":"33030:5:31","type":"","value":"ive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33003:6:31"},"nodeType":"YulFunctionCall","src":"33003:33:31"},"nodeType":"YulExpressionStatement","src":"33003:33:31"},{"nodeType":"YulAssignment","src":"33045:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33057:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33068:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33053:3:31"},"nodeType":"YulFunctionCall","src":"33053:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33045:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32830:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32844:4:31","type":""}],"src":"32679:399:31"},{"body":{"nodeType":"YulBlock","src":"33284:241:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33301:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"33312:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33294:6:31"},"nodeType":"YulFunctionCall","src":"33294:25:31"},"nodeType":"YulExpressionStatement","src":"33294:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33339:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33350:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33335:3:31"},"nodeType":"YulFunctionCall","src":"33335:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33359:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"33367:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33355:3:31"},"nodeType":"YulFunctionCall","src":"33355:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33328:6:31"},"nodeType":"YulFunctionCall","src":"33328:45:31"},"nodeType":"YulExpressionStatement","src":"33328:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33393:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33404:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33389:3:31"},"nodeType":"YulFunctionCall","src":"33389:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"33409:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33382:6:31"},"nodeType":"YulFunctionCall","src":"33382:34:31"},"nodeType":"YulExpressionStatement","src":"33382:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33436:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33447:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33432:3:31"},"nodeType":"YulFunctionCall","src":"33432:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"33452:3:31","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33425:6:31"},"nodeType":"YulFunctionCall","src":"33425:31:31"},"nodeType":"YulExpressionStatement","src":"33425:31:31"},{"nodeType":"YulAssignment","src":"33465:54:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33491:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33503:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33514:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33499:3:31"},"nodeType":"YulFunctionCall","src":"33499:19:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"33473:17:31"},"nodeType":"YulFunctionCall","src":"33473:46:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33465:4:31"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33229:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33240:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33248:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33256:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33264:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33275:4:31","type":""}],"src":"33083:442:31"},{"body":{"nodeType":"YulBlock","src":"33777:357:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33794:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"33805:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33787:6:31"},"nodeType":"YulFunctionCall","src":"33787:25:31"},"nodeType":"YulExpressionStatement","src":"33787:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33832:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33843:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33828:3:31"},"nodeType":"YulFunctionCall","src":"33828:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33852:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"33860:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33848:3:31"},"nodeType":"YulFunctionCall","src":"33848:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33821:6:31"},"nodeType":"YulFunctionCall","src":"33821:45:31"},"nodeType":"YulExpressionStatement","src":"33821:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33886:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33897:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33882:3:31"},"nodeType":"YulFunctionCall","src":"33882:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"33902:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33875:6:31"},"nodeType":"YulFunctionCall","src":"33875:34:31"},"nodeType":"YulExpressionStatement","src":"33875:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33929:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"33940:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33925:3:31"},"nodeType":"YulFunctionCall","src":"33925:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"33945:3:31","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33918:6:31"},"nodeType":"YulFunctionCall","src":"33918:31:31"},"nodeType":"YulExpressionStatement","src":"33918:31:31"},{"nodeType":"YulVariableDeclaration","src":"33958:60:31","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33990:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34002:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34013:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33998:3:31"},"nodeType":"YulFunctionCall","src":"33998:19:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"33972:17:31"},"nodeType":"YulFunctionCall","src":"33972:46:31"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"33962:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34038:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34049:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34034:3:31"},"nodeType":"YulFunctionCall","src":"34034:19:31"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34059:6:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"34067:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34055:3:31"},"nodeType":"YulFunctionCall","src":"34055:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34027:6:31"},"nodeType":"YulFunctionCall","src":"34027:51:31"},"nodeType":"YulExpressionStatement","src":"34027:51:31"},{"nodeType":"YulAssignment","src":"34087:41:31","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34113:6:31"},{"name":"tail_1","nodeType":"YulIdentifier","src":"34121:6:31"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"34095:17:31"},"nodeType":"YulFunctionCall","src":"34095:33:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34087:4:31"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33714:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33725:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33733:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33741:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33749:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33757:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33768:4:31","type":""}],"src":"33530:604:31"},{"body":{"nodeType":"YulBlock","src":"34313:297:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34330:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34341:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34323:6:31"},"nodeType":"YulFunctionCall","src":"34323:21:31"},"nodeType":"YulExpressionStatement","src":"34323:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34364:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34375:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34360:3:31"},"nodeType":"YulFunctionCall","src":"34360:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"34380:2:31","type":"","value":"67"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34353:6:31"},"nodeType":"YulFunctionCall","src":"34353:30:31"},"nodeType":"YulExpressionStatement","src":"34353:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34403:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34414:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34399:3:31"},"nodeType":"YulFunctionCall","src":"34399:18:31"},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f","kind":"string","nodeType":"YulLiteral","src":"34419:34:31","type":"","value":"GovernorVotesQuorumFraction: quo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34392:6:31"},"nodeType":"YulFunctionCall","src":"34392:62:31"},"nodeType":"YulExpressionStatement","src":"34392:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34474:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34485:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34470:3:31"},"nodeType":"YulFunctionCall","src":"34470:18:31"},{"hexValue":"72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61","kind":"string","nodeType":"YulLiteral","src":"34490:34:31","type":"","value":"rumNumerator over quorumDenomina"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34463:6:31"},"nodeType":"YulFunctionCall","src":"34463:62:31"},"nodeType":"YulExpressionStatement","src":"34463:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34545:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34556:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34541:3:31"},"nodeType":"YulFunctionCall","src":"34541:19:31"},{"hexValue":"746f72","kind":"string","nodeType":"YulLiteral","src":"34562:5:31","type":"","value":"tor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34534:6:31"},"nodeType":"YulFunctionCall","src":"34534:34:31"},"nodeType":"YulExpressionStatement","src":"34534:34:31"},{"nodeType":"YulAssignment","src":"34577:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34589:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34600:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34585:3:31"},"nodeType":"YulFunctionCall","src":"34585:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34577:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34290:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34304:4:31","type":""}],"src":"34139:471:31"},{"body":{"nodeType":"YulBlock","src":"34744:119:31","statements":[{"nodeType":"YulAssignment","src":"34754:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34766:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34777:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34762:3:31"},"nodeType":"YulFunctionCall","src":"34762:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34754:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34796:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"34807:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34789:6:31"},"nodeType":"YulFunctionCall","src":"34789:25:31"},"nodeType":"YulExpressionStatement","src":"34789:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34834:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"34845:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34830:3:31"},"nodeType":"YulFunctionCall","src":"34830:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"34850:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34823:6:31"},"nodeType":"YulFunctionCall","src":"34823:34:31"},"nodeType":"YulExpressionStatement","src":"34823:34:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34705:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34716:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34724:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34735:4:31","type":""}],"src":"34615:248:31"},{"body":{"nodeType":"YulBlock","src":"34915:88:31","statements":[{"body":{"nodeType":"YulBlock","src":"34946:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34948:16:31"},"nodeType":"YulFunctionCall","src":"34948:18:31"},"nodeType":"YulExpressionStatement","src":"34948:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34931:5:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34942:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34938:3:31"},"nodeType":"YulFunctionCall","src":"34938:6:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34928:2:31"},"nodeType":"YulFunctionCall","src":"34928:17:31"},"nodeType":"YulIf","src":"34925:43:31"},{"nodeType":"YulAssignment","src":"34977:20:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34988:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"34995:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34984:3:31"},"nodeType":"YulFunctionCall","src":"34984:13:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34977:3:31"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34897:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34907:3:31","type":""}],"src":"34868:135:31"},{"body":{"nodeType":"YulBlock","src":"35145:137:31","statements":[{"nodeType":"YulVariableDeclaration","src":"35155:27:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35175:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35169:5:31"},"nodeType":"YulFunctionCall","src":"35169:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35159:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35217:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"35225:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35213:3:31"},"nodeType":"YulFunctionCall","src":"35213:17:31"},{"name":"pos","nodeType":"YulIdentifier","src":"35232:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"35237:6:31"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"35191:21:31"},"nodeType":"YulFunctionCall","src":"35191:53:31"},"nodeType":"YulExpressionStatement","src":"35191:53:31"},{"nodeType":"YulAssignment","src":"35253:23:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35264:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"35269:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35260:3:31"},"nodeType":"YulFunctionCall","src":"35260:16:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35253:3:31"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35121:3:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35126:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35137:3:31","type":""}],"src":"35008:274:31"},{"body":{"nodeType":"YulBlock","src":"35461:179:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35478:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35489:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35471:6:31"},"nodeType":"YulFunctionCall","src":"35471:21:31"},"nodeType":"YulExpressionStatement","src":"35471:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35512:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35523:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35508:3:31"},"nodeType":"YulFunctionCall","src":"35508:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"35528:2:31","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35501:6:31"},"nodeType":"YulFunctionCall","src":"35501:30:31"},"nodeType":"YulExpressionStatement","src":"35501:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35551:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35562:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35547:3:31"},"nodeType":"YulFunctionCall","src":"35547:18:31"},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"35567:31:31","type":"","value":"Governor: proposal not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35540:6:31"},"nodeType":"YulFunctionCall","src":"35540:59:31"},"nodeType":"YulExpressionStatement","src":"35540:59:31"},{"nodeType":"YulAssignment","src":"35608:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35620:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35631:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35616:3:31"},"nodeType":"YulFunctionCall","src":"35616:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35608:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35438:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35452:4:31","type":""}],"src":"35287:353:31"},{"body":{"nodeType":"YulBlock","src":"35819:228:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35836:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35847:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35829:6:31"},"nodeType":"YulFunctionCall","src":"35829:21:31"},"nodeType":"YulExpressionStatement","src":"35829:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35870:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35881:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35866:3:31"},"nodeType":"YulFunctionCall","src":"35866:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"35886:2:31","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35859:6:31"},"nodeType":"YulFunctionCall","src":"35859:30:31"},"nodeType":"YulExpressionStatement","src":"35859:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35909:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35920:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35905:3:31"},"nodeType":"YulFunctionCall","src":"35905:18:31"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036","kind":"string","nodeType":"YulLiteral","src":"35925:34:31","type":"","value":"SafeCast: value doesn't fit in 6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35898:6:31"},"nodeType":"YulFunctionCall","src":"35898:62:31"},"nodeType":"YulExpressionStatement","src":"35898:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35980:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"35991:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35976:3:31"},"nodeType":"YulFunctionCall","src":"35976:18:31"},{"hexValue":"342062697473","kind":"string","nodeType":"YulLiteral","src":"35996:8:31","type":"","value":"4 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35969:6:31"},"nodeType":"YulFunctionCall","src":"35969:36:31"},"nodeType":"YulExpressionStatement","src":"35969:36:31"},{"nodeType":"YulAssignment","src":"36014:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36026:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36037:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36022:3:31"},"nodeType":"YulFunctionCall","src":"36022:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36014:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35796:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35810:4:31","type":""}],"src":"35645:402:31"},{"body":{"nodeType":"YulBlock","src":"36181:145:31","statements":[{"nodeType":"YulAssignment","src":"36191:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36203:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36214:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36199:3:31"},"nodeType":"YulFunctionCall","src":"36199:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36191:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36233:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36248:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36264:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"36269:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36260:3:31"},"nodeType":"YulFunctionCall","src":"36260:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"36273:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36256:3:31"},"nodeType":"YulFunctionCall","src":"36256:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36244:3:31"},"nodeType":"YulFunctionCall","src":"36244:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36226:6:31"},"nodeType":"YulFunctionCall","src":"36226:51:31"},"nodeType":"YulExpressionStatement","src":"36226:51:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36297:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36308:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36293:3:31"},"nodeType":"YulFunctionCall","src":"36293:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"36313:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36286:6:31"},"nodeType":"YulFunctionCall","src":"36286:34:31"},"nodeType":"YulExpressionStatement","src":"36286:34:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36142:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36153:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36161:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36172:4:31","type":""}],"src":"36052:274:31"},{"body":{"nodeType":"YulBlock","src":"36412:103:31","statements":[{"body":{"nodeType":"YulBlock","src":"36458:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36467:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36470:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36460:6:31"},"nodeType":"YulFunctionCall","src":"36460:12:31"},"nodeType":"YulExpressionStatement","src":"36460:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36433:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"36442:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36429:3:31"},"nodeType":"YulFunctionCall","src":"36429:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"36454:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36425:3:31"},"nodeType":"YulFunctionCall","src":"36425:32:31"},"nodeType":"YulIf","src":"36422:52:31"},{"nodeType":"YulAssignment","src":"36483:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36499:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36493:5:31"},"nodeType":"YulFunctionCall","src":"36493:16:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36483:6:31"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36378:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36389:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36401:6:31","type":""}],"src":"36331:184:31"},{"body":{"nodeType":"YulBlock","src":"36694:229:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36711:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36722:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36704:6:31"},"nodeType":"YulFunctionCall","src":"36704:21:31"},"nodeType":"YulExpressionStatement","src":"36704:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36745:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36756:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36741:3:31"},"nodeType":"YulFunctionCall","src":"36741:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"36761:2:31","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36734:6:31"},"nodeType":"YulFunctionCall","src":"36734:30:31"},"nodeType":"YulExpressionStatement","src":"36734:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36784:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36795:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36780:3:31"},"nodeType":"YulFunctionCall","src":"36780:18:31"},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420","kind":"string","nodeType":"YulLiteral","src":"36800:34:31","type":"","value":"GovernorSettings: voting period "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36773:6:31"},"nodeType":"YulFunctionCall","src":"36773:62:31"},"nodeType":"YulExpressionStatement","src":"36773:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36855:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36866:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36851:3:31"},"nodeType":"YulFunctionCall","src":"36851:18:31"},{"hexValue":"746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"36871:9:31","type":"","value":"too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36844:6:31"},"nodeType":"YulFunctionCall","src":"36844:37:31"},"nodeType":"YulExpressionStatement","src":"36844:37:31"},{"nodeType":"YulAssignment","src":"36890:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36902:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"36913:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36898:3:31"},"nodeType":"YulFunctionCall","src":"36898:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36890:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36671:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36685:4:31","type":""}],"src":"36520:403:31"},{"body":{"nodeType":"YulBlock","src":"36980:116:31","statements":[{"body":{"nodeType":"YulBlock","src":"37039:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37041:16:31"},"nodeType":"YulFunctionCall","src":"37041:18:31"},"nodeType":"YulExpressionStatement","src":"37041:18:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37011:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37004:6:31"},"nodeType":"YulFunctionCall","src":"37004:9:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36997:6:31"},"nodeType":"YulFunctionCall","src":"36997:17:31"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37019:1:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37030:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37026:3:31"},"nodeType":"YulFunctionCall","src":"37026:6:31"},{"name":"x","nodeType":"YulIdentifier","src":"37034:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37022:3:31"},"nodeType":"YulFunctionCall","src":"37022:14:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37016:2:31"},"nodeType":"YulFunctionCall","src":"37016:21:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36993:3:31"},"nodeType":"YulFunctionCall","src":"36993:45:31"},"nodeType":"YulIf","src":"36990:71:31"},{"nodeType":"YulAssignment","src":"37070:20:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37085:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"37088:1:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37081:3:31"},"nodeType":"YulFunctionCall","src":"37081:9:31"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"37070:7:31"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36959:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"36962:1:31","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"36968:7:31","type":""}],"src":"36928:168:31"},{"body":{"nodeType":"YulBlock","src":"37133:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37150:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37157:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"37162:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37153:3:31"},"nodeType":"YulFunctionCall","src":"37153:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37143:6:31"},"nodeType":"YulFunctionCall","src":"37143:31:31"},"nodeType":"YulExpressionStatement","src":"37143:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37190:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37193:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37183:6:31"},"nodeType":"YulFunctionCall","src":"37183:15:31"},"nodeType":"YulExpressionStatement","src":"37183:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37214:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37217:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37207:6:31"},"nodeType":"YulFunctionCall","src":"37207:15:31"},"nodeType":"YulExpressionStatement","src":"37207:15:31"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"37101:127:31"},{"body":{"nodeType":"YulBlock","src":"37279:171:31","statements":[{"body":{"nodeType":"YulBlock","src":"37310:111:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37331:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37338:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"37343:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37334:3:31"},"nodeType":"YulFunctionCall","src":"37334:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37324:6:31"},"nodeType":"YulFunctionCall","src":"37324:31:31"},"nodeType":"YulExpressionStatement","src":"37324:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37375:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37378:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37368:6:31"},"nodeType":"YulFunctionCall","src":"37368:15:31"},"nodeType":"YulExpressionStatement","src":"37368:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37403:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37406:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37396:6:31"},"nodeType":"YulFunctionCall","src":"37396:15:31"},"nodeType":"YulExpressionStatement","src":"37396:15:31"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37299:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37292:6:31"},"nodeType":"YulFunctionCall","src":"37292:9:31"},"nodeType":"YulIf","src":"37289:132:31"},{"nodeType":"YulAssignment","src":"37430:14:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37439:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"37442:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37435:3:31"},"nodeType":"YulFunctionCall","src":"37435:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"37430:1:31"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37264:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"37267:1:31","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"37273:1:31","type":""}],"src":"37233:217:31"},{"body":{"nodeType":"YulBlock","src":"37549:203:31","statements":[{"nodeType":"YulVariableDeclaration","src":"37559:26:31","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"37579:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37573:5:31"},"nodeType":"YulFunctionCall","src":"37573:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37563:6:31","type":""}]},{"nodeType":"YulAssignment","src":"37594:32:31","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"37613:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"37620:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37609:3:31"},"nodeType":"YulFunctionCall","src":"37609:16:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37603:5:31"},"nodeType":"YulFunctionCall","src":"37603:23:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37594:5:31"}]},{"body":{"nodeType":"YulBlock","src":"37663:83:31","statements":[{"nodeType":"YulAssignment","src":"37677:59:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37690:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37705:1:31","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37712:4:31","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"37718:6:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37708:3:31"},"nodeType":"YulFunctionCall","src":"37708:17:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37701:3:31"},"nodeType":"YulFunctionCall","src":"37701:25:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37732:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37728:3:31"},"nodeType":"YulFunctionCall","src":"37728:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37697:3:31"},"nodeType":"YulFunctionCall","src":"37697:38:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37686:3:31"},"nodeType":"YulFunctionCall","src":"37686:50:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37677:5:31"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37641:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"37649:4:31","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37638:2:31"},"nodeType":"YulFunctionCall","src":"37638:16:31"},"nodeType":"YulIf","src":"37635:111:31"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"37529:5:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37539:5:31","type":""}],"src":"37455:297:31"},{"body":{"nodeType":"YulBlock","src":"37931:177:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37948:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37959:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37941:6:31"},"nodeType":"YulFunctionCall","src":"37941:21:31"},"nodeType":"YulExpressionStatement","src":"37941:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37982:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"37993:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37978:3:31"},"nodeType":"YulFunctionCall","src":"37978:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"37998:2:31","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37971:6:31"},"nodeType":"YulFunctionCall","src":"37971:30:31"},"nodeType":"YulExpressionStatement","src":"37971:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38021:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38032:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38017:3:31"},"nodeType":"YulFunctionCall","src":"38017:18:31"},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","kind":"string","nodeType":"YulLiteral","src":"38037:29:31","type":"","value":"Checkpoint: decreasing keys"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38010:6:31"},"nodeType":"YulFunctionCall","src":"38010:57:31"},"nodeType":"YulExpressionStatement","src":"38010:57:31"},{"nodeType":"YulAssignment","src":"38076:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38088:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38099:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38084:3:31"},"nodeType":"YulFunctionCall","src":"38084:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38076:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37908:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37922:4:31","type":""}],"src":"37757:351:31"},{"body":{"nodeType":"YulBlock","src":"38294:217:31","statements":[{"nodeType":"YulAssignment","src":"38304:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38316:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38327:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38312:3:31"},"nodeType":"YulFunctionCall","src":"38312:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38304:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38347:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"38358:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38340:6:31"},"nodeType":"YulFunctionCall","src":"38340:25:31"},"nodeType":"YulExpressionStatement","src":"38340:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38385:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38396:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38381:3:31"},"nodeType":"YulFunctionCall","src":"38381:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38405:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"38413:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38401:3:31"},"nodeType":"YulFunctionCall","src":"38401:17:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38374:6:31"},"nodeType":"YulFunctionCall","src":"38374:45:31"},"nodeType":"YulExpressionStatement","src":"38374:45:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38439:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38450:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38435:3:31"},"nodeType":"YulFunctionCall","src":"38435:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"38455:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38428:6:31"},"nodeType":"YulFunctionCall","src":"38428:34:31"},"nodeType":"YulExpressionStatement","src":"38428:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38482:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38493:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38478:3:31"},"nodeType":"YulFunctionCall","src":"38478:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"38498:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38471:6:31"},"nodeType":"YulFunctionCall","src":"38471:34:31"},"nodeType":"YulExpressionStatement","src":"38471:34:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38239:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38250:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38258:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38266:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38274:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38285:4:31","type":""}],"src":"38113:398:31"},{"body":{"nodeType":"YulBlock","src":"38690:174:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38707:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38718:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38700:6:31"},"nodeType":"YulFunctionCall","src":"38700:21:31"},"nodeType":"YulExpressionStatement","src":"38700:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38741:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38752:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38737:3:31"},"nodeType":"YulFunctionCall","src":"38737:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"38757:2:31","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38730:6:31"},"nodeType":"YulFunctionCall","src":"38730:30:31"},"nodeType":"YulExpressionStatement","src":"38730:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38780:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38791:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38776:3:31"},"nodeType":"YulFunctionCall","src":"38776:18:31"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"38796:26:31","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38769:6:31"},"nodeType":"YulFunctionCall","src":"38769:54:31"},"nodeType":"YulExpressionStatement","src":"38769:54:31"},{"nodeType":"YulAssignment","src":"38832:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38844:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"38855:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38840:3:31"},"nodeType":"YulFunctionCall","src":"38840:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38832:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38667:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38681:4:31","type":""}],"src":"38516:348:31"},{"body":{"nodeType":"YulBlock","src":"39043:181:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39060:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39071:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39053:6:31"},"nodeType":"YulFunctionCall","src":"39053:21:31"},"nodeType":"YulExpressionStatement","src":"39053:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39094:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39105:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39090:3:31"},"nodeType":"YulFunctionCall","src":"39090:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"39110:2:31","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39083:6:31"},"nodeType":"YulFunctionCall","src":"39083:30:31"},"nodeType":"YulExpressionStatement","src":"39083:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39133:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39144:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39129:3:31"},"nodeType":"YulFunctionCall","src":"39129:18:31"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"39149:33:31","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39122:6:31"},"nodeType":"YulFunctionCall","src":"39122:61:31"},"nodeType":"YulExpressionStatement","src":"39122:61:31"},{"nodeType":"YulAssignment","src":"39192:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39204:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39215:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39200:3:31"},"nodeType":"YulFunctionCall","src":"39200:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39192:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39020:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39034:4:31","type":""}],"src":"38869:355:31"},{"body":{"nodeType":"YulBlock","src":"39403:224:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39420:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39431:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39413:6:31"},"nodeType":"YulFunctionCall","src":"39413:21:31"},"nodeType":"YulExpressionStatement","src":"39413:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39454:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39465:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39450:3:31"},"nodeType":"YulFunctionCall","src":"39450:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"39470:2:31","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39443:6:31"},"nodeType":"YulFunctionCall","src":"39443:30:31"},"nodeType":"YulExpressionStatement","src":"39443:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39493:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39504:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39489:3:31"},"nodeType":"YulFunctionCall","src":"39489:18:31"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"39509:34:31","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39482:6:31"},"nodeType":"YulFunctionCall","src":"39482:62:31"},"nodeType":"YulExpressionStatement","src":"39482:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39564:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39575:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39560:3:31"},"nodeType":"YulFunctionCall","src":"39560:18:31"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"39580:4:31","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39553:6:31"},"nodeType":"YulFunctionCall","src":"39553:32:31"},"nodeType":"YulExpressionStatement","src":"39553:32:31"},{"nodeType":"YulAssignment","src":"39594:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39606:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39617:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39602:3:31"},"nodeType":"YulFunctionCall","src":"39602:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39594:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39380:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39394:4:31","type":""}],"src":"39229:398:31"},{"body":{"nodeType":"YulBlock","src":"39806:229:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39823:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39834:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39816:6:31"},"nodeType":"YulFunctionCall","src":"39816:21:31"},"nodeType":"YulExpressionStatement","src":"39816:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39857:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39868:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39853:3:31"},"nodeType":"YulFunctionCall","src":"39853:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"39873:2:31","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39846:6:31"},"nodeType":"YulFunctionCall","src":"39846:30:31"},"nodeType":"YulExpressionStatement","src":"39846:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39896:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39907:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39892:3:31"},"nodeType":"YulFunctionCall","src":"39892:18:31"},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561","kind":"string","nodeType":"YulLiteral","src":"39912:34:31","type":"","value":"GovernorVotingSimple: vote alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39885:6:31"},"nodeType":"YulFunctionCall","src":"39885:62:31"},"nodeType":"YulExpressionStatement","src":"39885:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39967:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"39978:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39963:3:31"},"nodeType":"YulFunctionCall","src":"39963:18:31"},{"hexValue":"64792063617374","kind":"string","nodeType":"YulLiteral","src":"39983:9:31","type":"","value":"dy cast"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39956:6:31"},"nodeType":"YulFunctionCall","src":"39956:37:31"},"nodeType":"YulExpressionStatement","src":"39956:37:31"},{"nodeType":"YulAssignment","src":"40002:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40014:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40025:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40010:3:31"},"nodeType":"YulFunctionCall","src":"40010:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40002:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39783:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39797:4:31","type":""}],"src":"39632:403:31"},{"body":{"nodeType":"YulBlock","src":"40214:243:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40231:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40242:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40224:6:31"},"nodeType":"YulFunctionCall","src":"40224:21:31"},"nodeType":"YulExpressionStatement","src":"40224:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40265:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40276:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40261:3:31"},"nodeType":"YulFunctionCall","src":"40261:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"40281:2:31","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40254:6:31"},"nodeType":"YulFunctionCall","src":"40254:30:31"},"nodeType":"YulExpressionStatement","src":"40254:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40304:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40315:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40300:3:31"},"nodeType":"YulFunctionCall","src":"40300:18:31"},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20696e76616c6964207661","kind":"string","nodeType":"YulLiteral","src":"40320:34:31","type":"","value":"GovernorVotingSimple: invalid va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40293:6:31"},"nodeType":"YulFunctionCall","src":"40293:62:31"},"nodeType":"YulExpressionStatement","src":"40293:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40375:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40386:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40371:3:31"},"nodeType":"YulFunctionCall","src":"40371:18:31"},{"hexValue":"6c756520666f7220656e756d20566f746554797065","kind":"string","nodeType":"YulLiteral","src":"40391:23:31","type":"","value":"lue for enum VoteType"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40364:6:31"},"nodeType":"YulFunctionCall","src":"40364:51:31"},"nodeType":"YulExpressionStatement","src":"40364:51:31"},{"nodeType":"YulAssignment","src":"40424:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40436:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"40447:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40432:3:31"},"nodeType":"YulFunctionCall","src":"40432:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40424:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40191:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40205:4:31","type":""}],"src":"40040:417:31"},{"body":{"nodeType":"YulBlock","src":"40851:397:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40868:3:31"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"40873:25:31","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40861:6:31"},"nodeType":"YulFunctionCall","src":"40861:38:31"},"nodeType":"YulExpressionStatement","src":"40861:38:31"},{"nodeType":"YulVariableDeclaration","src":"40908:27:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40928:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40922:5:31"},"nodeType":"YulFunctionCall","src":"40922:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"40912:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40970:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"40978:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40966:3:31"},"nodeType":"YulFunctionCall","src":"40966:17:31"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40989:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"40994:2:31","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40985:3:31"},"nodeType":"YulFunctionCall","src":"40985:12:31"},{"name":"length","nodeType":"YulIdentifier","src":"40999:6:31"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"40944:21:31"},"nodeType":"YulFunctionCall","src":"40944:62:31"},"nodeType":"YulExpressionStatement","src":"40944:62:31"},{"nodeType":"YulVariableDeclaration","src":"41015:26:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41029:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"41034:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41025:3:31"},"nodeType":"YulFunctionCall","src":"41025:16:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"41019:2:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"41061:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"41065:2:31","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41057:3:31"},"nodeType":"YulFunctionCall","src":"41057:11:31"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"41070:19:31","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41050:6:31"},"nodeType":"YulFunctionCall","src":"41050:40:31"},"nodeType":"YulExpressionStatement","src":"41050:40:31"},{"nodeType":"YulVariableDeclaration","src":"41099:29:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41121:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41115:5:31"},"nodeType":"YulFunctionCall","src":"41115:13:31"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"41103:8:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41163:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"41171:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41159:3:31"},"nodeType":"YulFunctionCall","src":"41159:17:31"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"41182:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"41186:2:31","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41178:3:31"},"nodeType":"YulFunctionCall","src":"41178:11:31"},{"name":"length_1","nodeType":"YulIdentifier","src":"41191:8:31"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"41137:21:31"},"nodeType":"YulFunctionCall","src":"41137:63:31"},"nodeType":"YulExpressionStatement","src":"41137:63:31"},{"nodeType":"YulAssignment","src":"41209:33:31","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"41224:2:31"},{"name":"length_1","nodeType":"YulIdentifier","src":"41228:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41220:3:31"},"nodeType":"YulFunctionCall","src":"41220:17:31"},{"kind":"number","nodeType":"YulLiteral","src":"41239:2:31","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41216:3:31"},"nodeType":"YulFunctionCall","src":"41216:26:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41209:3:31"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40819:3:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40824:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40832:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40843:3:31","type":""}],"src":"40462:786:31"},{"body":{"nodeType":"YulBlock","src":"41466:276:31","statements":[{"nodeType":"YulAssignment","src":"41476:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41488:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"41499:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41484:3:31"},"nodeType":"YulFunctionCall","src":"41484:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41476:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41519:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"41530:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41512:6:31"},"nodeType":"YulFunctionCall","src":"41512:25:31"},"nodeType":"YulExpressionStatement","src":"41512:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41557:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"41568:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41553:3:31"},"nodeType":"YulFunctionCall","src":"41553:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"41573:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41546:6:31"},"nodeType":"YulFunctionCall","src":"41546:34:31"},"nodeType":"YulExpressionStatement","src":"41546:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41600:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"41611:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41596:3:31"},"nodeType":"YulFunctionCall","src":"41596:18:31"},{"name":"value2","nodeType":"YulIdentifier","src":"41616:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41589:6:31"},"nodeType":"YulFunctionCall","src":"41589:34:31"},"nodeType":"YulExpressionStatement","src":"41589:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41643:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"41654:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41639:3:31"},"nodeType":"YulFunctionCall","src":"41639:18:31"},{"name":"value3","nodeType":"YulIdentifier","src":"41659:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41632:6:31"},"nodeType":"YulFunctionCall","src":"41632:34:31"},"nodeType":"YulExpressionStatement","src":"41632:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41686:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"41697:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41682:3:31"},"nodeType":"YulFunctionCall","src":"41682:19:31"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"41707:6:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41723:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"41728:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41719:3:31"},"nodeType":"YulFunctionCall","src":"41719:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"41732:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41715:3:31"},"nodeType":"YulFunctionCall","src":"41715:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41703:3:31"},"nodeType":"YulFunctionCall","src":"41703:32:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41675:6:31"},"nodeType":"YulFunctionCall","src":"41675:61:31"},"nodeType":"YulExpressionStatement","src":"41675:61:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41403:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"41414:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41422:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41430:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41438:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41446:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41457:4:31","type":""}],"src":"41253:489:31"},{"body":{"nodeType":"YulBlock","src":"41794:89:31","statements":[{"body":{"nodeType":"YulBlock","src":"41821:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41823:16:31"},"nodeType":"YulFunctionCall","src":"41823:18:31"},"nodeType":"YulExpressionStatement","src":"41823:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41814:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41807:6:31"},"nodeType":"YulFunctionCall","src":"41807:13:31"},"nodeType":"YulIf","src":"41804:39:31"},{"nodeType":"YulAssignment","src":"41852:25:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41863:5:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41874:1:31","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41870:3:31"},"nodeType":"YulFunctionCall","src":"41870:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41859:3:31"},"nodeType":"YulFunctionCall","src":"41859:18:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"41852:3:31"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41776:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"41786:3:31","type":""}],"src":"41747:136:31"},{"body":{"nodeType":"YulBlock","src":"42062:182:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42079:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"42090:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42072:6:31"},"nodeType":"YulFunctionCall","src":"42072:21:31"},"nodeType":"YulExpressionStatement","src":"42072:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42113:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"42124:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42109:3:31"},"nodeType":"YulFunctionCall","src":"42109:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"42129:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42102:6:31"},"nodeType":"YulFunctionCall","src":"42102:30:31"},"nodeType":"YulExpressionStatement","src":"42102:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42152:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"42163:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42148:3:31"},"nodeType":"YulFunctionCall","src":"42148:18:31"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"42168:34:31","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42141:6:31"},"nodeType":"YulFunctionCall","src":"42141:62:31"},"nodeType":"YulExpressionStatement","src":"42141:62:31"},{"nodeType":"YulAssignment","src":"42212:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42224:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"42235:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42220:3:31"},"nodeType":"YulFunctionCall","src":"42220:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42212:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42039:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42053:4:31","type":""}],"src":"41888:356:31"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_0d2e29ce59569b0aa60766c059f36bf339acf9681f1221eaac1078daa5d3d129__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Governor: must send to executor\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value5 := abi_decode_uint8(add(headStart, 128))\n        value6 := calldataload(add(headStart, 160))\n        value7 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_bytes_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_bytes(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_bytes_dyn(add(headStart, offset_2), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_address_t_address__to_t_string_memory_ptr_t_uint256_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ProposalState_$1818__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 8)) { panic_error_0x21() }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_assert_enum_MonthlyPaymentStatusEnum(value)\n    {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n    function abi_encode_tuple_t_enum$_MonthlyPaymentStatusEnum_$9055_t_address__to_t_uint8_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        validator_assert_enum_MonthlyPaymentStatusEnum(value0)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_enum$_SpaceStatusEnum_$9060__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        validator_assert_enum_MonthlyPaymentStatusEnum(value3)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_bytes_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_3)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_2, 32), calldataload(_2), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value6, tail_2)\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC5805_$2970__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Governor: onlyGovernance\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: proposal not successfu\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Governor: unknown proposal id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_397853bd9e6f0888f5fdcc37d267617a8f74b5e4540887757482a2da22f4cdfc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Governor: too late to cancel\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3fd25dc9791b847d14d0815e84967e87bbf815be3a68ecdd58e99f67196ddc7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Governor: only proposer can canc\")\n        mstore(add(headStart, 96), \"el\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Governor: proposer votes below p\")\n        mstore(add(headStart, 96), \"roposal threshold\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: invalid proposal lengt\")\n        mstore(add(headStart, 96), \"h\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Governor: empty proposal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Governor: proposal already exist\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_bytes_dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let tail := add(add(pos_1, shl(5, length)), _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), not(31)))\n            tail := abi_encode_string(mload(srcPtr), tail)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, value0)\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_array_address_dyn(value2, add(headStart, _1))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value4)\n        mstore(tail_2, length)\n        pos := add(tail_2, _2)\n        let tail_3 := add(add(tail_2, shl(5, length)), _2)\n        let srcPtr := add(value4, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_3, tail_2), not(31)))\n            tail_3 := abi_encode_string(mload(srcPtr), tail_3)\n            srcPtr := add(srcPtr, _2)\n            pos := add(pos, _2)\n        }\n        mstore(add(headStart, 160), sub(tail_3, headStart))\n        let tail_4 := abi_encode_array_bytes_dyn(value5, tail_3)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), sub(tail_4, headStart))\n        tail := abi_encode_string(value8, tail_4)\n    }\n    function abi_decode_tuple_t_uint48_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_bytes_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 2\")\n        mstore(add(headStart, 96), \"24 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 4\")\n        mstore(add(headStart, 96), \"8 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Governor: vote not currently act\")\n        mstore(add(headStart, 96), \"ive\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        let tail_1 := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        tail := abi_encode_string(value4, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"GovernorVotesQuorumFraction: quo\")\n        mstore(add(headStart, 96), \"rumNumerator over quorumDenomina\")\n        mstore(add(headStart, 128), \"tor\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Governor: proposal not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 6\")\n        mstore(add(headStart, 96), \"4 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"GovernorSettings: voting period \")\n        mstore(add(headStart, 96), \"too low\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Checkpoint: decreasing keys\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"GovernorVotingSimple: vote alrea\")\n        mstore(add(headStart, 96), \"dy cast\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"GovernorVotingSimple: invalid va\")\n        mstore(add(headStart, 96), \"lue for enum VoteType\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2553":[{"length":32,"start":3261},{"length":32,"start":5197},{"length":32,"start":7229},{"length":32,"start":11116},{"length":32,"start":11526}],"5949":[{"length":32,"start":12413}],"5951":[{"length":32,"start":12371}],"5953":[{"length":32,"start":12329}],"5955":[{"length":32,"start":12494}],"5957":[{"length":32,"start":12534}],"5960":[{"length":32,"start":7060}],"5963":[{"length":32,"start":7102}]},"linkReferences":{},"object":"60806040526004361061037a5760003560e01c806360c4247f116101d1578063a87430ba11610102578063dd4e2ba5116100a0578063ece40cc11161006f578063ece40cc114610c3f578063f23a6e6114610c5f578063f8ce560a14610c8b578063fc0c546a14610cab57600080fd5b8063dd4e2ba514610b85578063deaaa7cc14610bcb578063ea0217cf14610bff578063eb9019d414610c1f57600080fd5b8063c01f9e37116100dc578063c01f9e3714610af9578063c28bc2fa14610b32578063c59057e414610b45578063d547741f14610b6557600080fd5b8063a87430ba14610a89578063b58131b014610ab8578063bc197c8114610acd57600080fd5b806391d148541161016f5780639a802a6d116101495780639a802a6d14610a1f578063a217fddf14610a3f578063a71e9a9c14610a54578063a7713a7014610a7457600080fd5b806391d14854146109bf57806391ddadf4146109df57806397c3d33414610a0b57600080fd5b8063797669c9116101ab578063797669c9146109235780637b3c71d3146109575780637d5e81e21461097757806384b0196e1461099757600080fd5b806360c4247f146108b357806370b0f660146108d35780637586353b146108f357600080fd5b80632fe3e261116102ab5780634385963211610249578063544ffc9c11610223578063544ffc9c146107f457806354fd4d501461084957806356781388146108735780635f398a141461089357600080fd5b80634385963214610775578063452115d6146107bf5780634bf5d7e9146107df57600080fd5b80633bccf4fd116102855780633bccf4fd1461067e5780633e4f49e61461069e5780633ef4cc8b146106cb57806340dd07b91461072757600080fd5b80632fe3e2611461061557806336568abe146106495780633932abb11461066957600080fd5b8063143489d0116103185780632656227d116102f25780632656227d1461057c57806328bdcde81461058f5780632d63f693146105bf5780632f2ff15d146105f557600080fd5b8063143489d0146104b3578063150b7a0214610508578063248a9ca31461054c57600080fd5b80630342018111610354578063034201811461041d57806306f3f9e61461043d57806306fdde031461045d578063131191611461047f57600080fd5b806301ffc9a71461039157806302a251a3146103c6578063033e6f4d146103e957600080fd5b3661038c57005b60405180910390fd5b005b600080fd5b34801561039d57600080fd5b506103b16103ac366004613a43565b610cdf565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610cf0565b6040519081526020016103bd565b3480156103f557600080fd5b506103db7f53b89ac75efe2c37162cd6795f5bf8b9c749f1d0387576893c1d2d0c23a326f381565b34801561042957600080fd5b506103db610438366004613b91565b610d00565b34801561044957600080fd5b5061038a610458366004613c37565b610df8565b34801561046957600080fd5b50610472610e3f565b6040516103bd9190613cac565b34801561048b57600080fd5b506103db7f14823911f2da1b49f045a0929a60b8c1f2a7fc8c06c7284ca3e8ab4e193a08c881565b3480156104bf57600080fd5b506104f06104ce366004613c37565b600090815260036020526040902054600160401b90046001600160a01b031690565b6040516001600160a01b0390911681526020016103bd565b34801561051457600080fd5b50610533610523366004613cd6565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016103bd565b34801561055857600080fd5b506103db610567366004613c37565b6000908152600c602052604090206001015490565b6103db61058a366004613ea7565b610ed1565b34801561059b57600080fd5b506105af6105aa366004613c37565b610ffd565b6040516103bd9493929190613f36565b3480156105cb57600080fd5b506103db6105da366004613c37565b6000908152600360205260409020546001600160401b031690565b34801561060157600080fd5b5061038a610610366004613f6f565b6110d2565b34801561062157600080fd5b506103db7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561065557600080fd5b5061038a610664366004613f6f565b6110fc565b34801561067557600080fd5b506103db61117a565b34801561068a57600080fd5b506103db610699366004613f9b565b611185565b3480156106aa57600080fd5b506106be6106b9366004613c37565b6111fb565b6040516103bd9190613fff565b3480156106d757600080fd5b506107196106e6366004614019565b601260209081526000928352604080842090915290825290206001015460ff81169061010090046001600160a01b031682565b6040516103bd92919061404b565b34801561073357600080fd5b50610719610742366004614019565b601360209081526000928352604080842090915290825290206001015460ff81169061010090046001600160a01b031682565b34801561078157600080fd5b506103b1610790366004613f6f565b60008281526009602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156107cb57600080fd5b506103db6107da366004613ea7565b611338565b3480156107eb57600080fd5b50610472611449565b34801561080057600080fd5b5061082e61080f366004613c37565b6000908152600960205260409020805460018201546002909201549092565b604080519384526020840192909252908201526060016103bd565b34801561085557600080fd5b506040805180820190915260018152603160f81b6020820152610472565b34801561087f57600080fd5b506103db61088e366004614070565b61151a565b34801561089f57600080fd5b506103db6108ae366004614093565b611543565b3480156108bf57600080fd5b506103db6108ce366004613c37565b61158d565b3480156108df57600080fd5b5061038a6108ee366004613c37565b61163c565b3480156108ff57600080fd5b5061091361090e366004613c37565b611680565b6040516103bd9493929190614116565b34801561092f57600080fd5b506103db7f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f81565b34801561096357600080fd5b506103db61097236600461415c565b6117bc565b34801561098357600080fd5b506103db6109923660046141b5565b611804565b3480156109a357600080fd5b506109ac611b86565b6040516103bd97969594939291906142a4565b3480156109cb57600080fd5b506103b16109da366004613f6f565b611c0e565b3480156109eb57600080fd5b506109f4611c39565b60405165ffffffffffff90911681526020016103bd565b348015610a1757600080fd5b5060646103db565b348015610a2b57600080fd5b506103db610a3a366004614306565b611cd1565b348015610a4b57600080fd5b506103db600081565b348015610a6057600080fd5b506105af610a6f366004613c37565b611ce8565b348015610a8057600080fd5b506103db611cf8565b348015610a9557600080fd5b50610aa9610aa436600461435c565b611d22565b6040516103bd93929190614377565b348015610ac457600080fd5b506103db611dd2565b348015610ad957600080fd5b50610533610ae83660046143a1565b63bc197c8160e01b95945050505050565b348015610b0557600080fd5b506103db610b14366004613c37565b6000908152600360205260409020600101546001600160401b031690565b61038a610b40366004614430565b611ddd565b348015610b5157600080fd5b506103db610b60366004613ea7565b611ea9565b348015610b7157600080fd5b5061038a610b80366004613f6f565b611ee3565b348015610b9157600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610472565b348015610bd757600080fd5b506103db7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610c0b57600080fd5b5061038a610c1a366004613c37565b611f08565b348015610c2b57600080fd5b506103db610c3a366004614471565b611f4c565b348015610c4b57600080fd5b5061038a610c5a366004613c37565b611f6d565b348015610c6b57600080fd5b50610533610c7a36600461449b565b63f23a6e6160e01b95945050505050565b348015610c9757600080fd5b506103db610ca6366004613c37565b611fb1565b348015610cb757600080fd5b506104f07f000000000000000000000000000000000000000000000000000000000000000081565b6000610cea82612191565b92915050565b6000610cfb60075490565b905090565b600080610da4610d9c7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c604051610d3c9291906144ff565b60405180910390208b80519060200120604051602001610d81959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b604051602081830303815290604052805190602001206121b6565b8686866121e3565b9050610dea8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250612201915050565b9a9950505050505050505050565b333014610e175760405162461bcd60e51b81526004016103819061450f565b610e33565b80610e276004612353565b14610e3157610e1c565b505b610e3c816123d2565b50565b606060028054610e4e90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7a90614546565b8015610ec75780601f10610e9c57610100808354040283529160200191610ec7565b820191906000526020600020905b815481529060010190602001808311610eaa57829003601f168201915b5050505050905090565b600080610ee086868686611ea9565b90506000610eed826111fb565b90506004816007811115610f0357610f03613fe9565b1480610f2057506005816007811115610f1e57610f1e613fe9565b145b610f765760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610381565b60008281526003602052604090819020600201805460ff19166001179055517f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90610fc49084815260200190565b60405180910390a1610fd98288888888612540565b610fe682888888886125ce565b610ff38288888888612540565b5095945050505050565b600d818154811061100d57600080fd5b906000526020600020906004020160009150905080600001805461103090614546565b80601f016020809104026020016040519081016040528092919081815260200182805461105c90614546565b80156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b5050505060018301546002840154600390940154929390926001600160a01b0391821692501684565b6000828152600c60205260409020600101546110ed816126c4565b6110f783836126ce565b505050565b6001600160a01b038116331461116c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610381565b6111768282612754565b5050565b6000610cfb60065490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff8516606082015260009081906111d390610d9c90608001610d81565b90506111f0878288604051806020016040528060008152506127bb565b979650505050505050565b6000818152600360205260408120600281015460ff161561121f5750600792915050565b6002810154610100900460ff161561123a5750600292915050565b6000838152600360205260409020546001600160401b03168061129f5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610381565b60006112a9611c39565b65ffffffffffff1690508082106112c557506000949350505050565b6000858152600360205260409020600101546001600160401b03168181106112f35750600195945050505050565b6112fc866127e7565b801561131b575060008681526009602052604090208054600190910154115b1561132c5750600495945050505050565b50600395945050505050565b60008061134786868686611ea9565b90506000611354826111fb565b600781111561136557611365613fe9565b146113b25760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20746f6f206c61746520746f2063616e63656c000000006044820152606401610381565b600081815260036020526040902054600160401b90046001600160a01b0316336001600160a01b0316146114335760405162461bcd60e51b815260206004820152602260248201527f476f7665726e6f723a206f6e6c792070726f706f7365722063616e2063616e63604482015261195b60f21b6064820152608401610381565b61143f86868686612833565b9695505050505050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634bf5d7e96040518163ffffffff1660e01b815260040160006040518083038186803b1580156114a457600080fd5b505afa9250505080156114d957506040513d6000823e601f3d908101601f191682016040526114d69190810190614581565b60015b611515575060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b919050565b60008033905061153b848285604051806020016040528060008152506127bb565b949350505050565b6000803390506111f087828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250612201915050565b600b54600090806115a2575050600a54919050565b6000600b6115b1600184614604565b815481106115c1576115c161461b565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b0316928201929092529150841061161757602001516001600160e01b03169392505050565b61162b61162385612063565b600b90612951565b6001600160e01b0316949350505050565b33301461165b5760405162461bcd60e51b81526004016103819061450f565b611677565b8061166b6004612353565b1461167557611660565b505b610e3c816129f6565b60116020526000908152604090208054819061169b90614546565b80601f01602080910402602001604051908101604052809291908181526020018280546116c790614546565b80156117145780601f106116e957610100808354040283529160200191611714565b820191906000526020600020905b8154815290600101906020018083116116f757829003601f168201915b50505050509080600101805461172990614546565b80601f016020809104026020016040519081016040528092919081815260200182805461175590614546565b80156117a25780601f10611777576101008083540402835291602001916117a2565b820191906000526020600020905b81548152906001019060200180831161178557829003601f168201915b50505050600383015460049093015491929160ff16905084565b60008033905061143f86828787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506127bb92505050565b60003381611810611c39565b65ffffffffffff169050611822611dd2565b61183183610c3a600185614604565b10156118995760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610381565b60006118ae8888888880519060200120611ea9565b905086518851146118d15760405162461bcd60e51b815260040161038190614631565b85518851146118f25760405162461bcd60e51b815260040161038190614631565b60008851116119435760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610381565b6000818152600360205260409020546001600160401b0316156119b25760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610381565b60006119bc61117a565b6119c69084614672565b905060006119d2610cf0565b6119dc9083614672565b90506040518060e001604052806119f284612a37565b6001600160401b031681526001600160a01b038716602082015260006040820152606001611a1f83612a37565b6001600160401b039081168252600060208084018290526040808501839052606094850183905288835260038252918290208551815492870151878501519186166001600160e01b031990941693909317600160401b6001600160a01b039094168402176001600160e01b0316600160e01b60e09290921c91909102178155938501516080860151908416921c0217600183015560a08301516002909201805460c09094015161ffff1990941692151561ff00191692909217610100931515939093029290921790558a517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e091859188918e918e91811115611b2357611b23613ac6565b604051908082528060200260200182016040528015611b5657816020015b6060815260200190600190039081611b415790505b508d88888f604051611b709998979695949392919061471b565b60405180910390a1509098975050505050505050565b600060608082808083611bb97f000000000000000000000000000000000000000000000000000000000000000083612a9f565b611be47f00000000000000000000000000000000000000000000000000000000000000006001612a9f565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391ddadf46040518163ffffffff1660e01b815260040160206040518083038186803b158015611c9457600080fd5b505afa925050508015611cc4575060408051601f3d908101601f19168201909252611cc1918101906147f2565b60015b61151557610cfb4361212a565b6000611cde848484612b43565b90505b9392505050565b600e818154811061100d57600080fd5b600b5460009015611d1b57611d0d600b6120e3565b6001600160e01b0316905090565b50600a5490565b600f60205260009081526040902080548190611d3d90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6990614546565b8015611db65780601f10611d8b57610100808354040283529160200191611db6565b820191906000526020600020905b815481529060010190602001808311611d9957829003601f168201915b5050506001909301549192505060ff8082169161010090041683565b6000610cfb60085490565b333014611dfc5760405162461bcd60e51b81526004016103819061450f565b611e18565b80611e0c6004612353565b14611e1657611e01565b505b600080856001600160a01b0316858585604051611e369291906144ff565b60006040518083038185875af1925050503d8060008114611e73576040519150601f19603f3d011682016040523d82523d6000602084013e611e78565b606091505b5091509150611ea08282604051806060016040528060288152602001614a2b60289139612be8565b50505050505050565b600084848484604051602001611ec2949392919061481a565b60408051601f19818403018152919052805160209091012095945050505050565b6000828152600c6020526040902060010154611efe816126c4565b6110f78383612754565b333014611f275760405162461bcd60e51b81526004016103819061450f565b611f43565b80611f376004612353565b14611f4157611f2c565b505b610e3c81612c01565b6000611ce18383611f6860408051602081019091526000815290565b612b43565b333014611f8c5760405162461bcd60e51b81526004016103819061450f565b611fa8565b80611f9c6004612353565b14611fa657611f91565b505b610e3c81612ca2565b6000610cea82612ce3565b6000602083511015611fd857611fd183612d9c565b9050610cea565b82828151611fe992602001906139b3565b5060ff9050610cea565b90565b60006001600160e01b0382111561205f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610381565b5090565b600063ffffffff82111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610381565b6000806120d6858585612dda565b915091505b935093915050565b805460009080156121215761210b836120fd600184614604565b600091825260209091200190565b54600160201b90046001600160e01b0316611ce1565b60009392505050565b600065ffffffffffff82111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610381565b60006001600160e01b03198216637965db0b60e01b1480610cea5750610cea82612f80565b6000610cea6121c361301c565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006121f487878787613147565b91509150610ff38161320b565b6000858152600360205260408120600161221a886111fb565b600781111561222b5761222b613fe9565b146122845760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610381565b805460009061229e9088906001600160401b031686612b43565b90506122ad8888888488613359565b83516122ff57866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516122f29493929190614865565b60405180910390a26111f0565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb8712898884898960405161234095949392919061488d565b60405180910390a2979650505050505050565b600061236e8254600f81810b600160801b909204900b131590565b1561238c57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60648111156124555760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610381565b600061245f611cf8565b905080158015906124705750600b54155b156124d4576040805180820190915260008152600b906020810161249384611ff6565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b6125016124ef6124e2611c39565b65ffffffffffff16612063565b6124f884611ff6565b600b91906120c8565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6125c7565b84518110156125c557306001600160a01b031685828151811061256a5761256a61461b565b60200260200101516001600160a01b031614156125b5576125b58382815181106125965761259661461b565b60200260200101518051906020012060046134d890919063ffffffff16565b6125be816148d3565b9050612545565b505b5050505050565b6000604051806060016040528060278152602001614a5360279139905060005b8551811015611ea05760008087838151811061260c5761260c61461b565b60200260200101516001600160a01b031687848151811061262f5761262f61461b565b60200260200101518785815181106126495761264961461b565b602002602001015160405161265e91906148ee565b60006040518083038185875af1925050503d806000811461269b576040519150601f19603f3d011682016040523d82523d6000602084013e6126a0565b606091505b50915091506126b0828286612be8565b505050806126bd906148d3565b90506125ee565b610e3c8133613514565b6126d88282611c0e565b611176576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff191660011790556127103390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61275e8282611c0e565b15611176576000828152600c602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006127de858585856127d960408051602081019091526000815290565b612201565b95945050505050565b6000818152600960205260408120600281015460018201546128099190614672565b60008481526003602052604090205461282a906001600160401b0316611fb1565b11159392505050565b60008061284286868686611ea9565b9050600061284f826111fb565b9050600281600781111561286557612865613fe9565b141580156128855750600681600781111561288257612882613fe9565b14155b80156128a3575060078160078111156128a0576128a0613fe9565b14155b6128ef5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f74206163746976650000006044820152606401610381565b60008281526003602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9061293f9084815260200190565b60405180910390a15095945050505050565b8154600090818160058111156129ae57600061296c8461356d565b6129769085614604565b60008881526020902090915081015463ffffffff908116908716101561299e578091506129ac565b6129a9816001614672565b92505b505b60006129bc87878585613652565b905080156129e9576129d3876120fd600184614604565b54600160201b90046001600160e01b03166111f0565b6000979650505050505050565b60065460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600655565b60006001600160401b0382111561205f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610381565b606060ff8314612ab257611fd1836136b0565b818054612abe90614546565b80601f0160208091040260200160405190810160405280929190818152602001828054612aea90614546565b8015612b375780601f10612b0c57610100808354040283529160200191612b37565b820191906000526020600020905b815481529060010190602001808311612b1a57829003601f168201915b50505050509050610cea565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015612bb057600080fd5b505afa158015612bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde919061490a565b60608315612bf7575081611ce1565b611ce183836136ef565b60008111612c615760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610381565b60075460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600755565b60085460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600855565b60006064612cf08361158d565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b158015612d5057600080fd5b505afa158015612d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d88919061490a565b612d929190614923565b610cea9190614958565b600080829050601f81511115612dc7578260405163305a27a960e01b81526004016103819190613cac565b8051612dd28261497a565b179392505050565b825460009081908015612f27576000612df8876120fd600185614604565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b031660208401529192509087161015612e795760405162461bcd60e51b815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610381565b8563ffffffff16816000015163ffffffff161415612ec85784612ea1886120fd600186614604565b80546001600160e01b0392909216600160201b0263ffffffff909216919091179055612f17565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506120db9050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050816120db565b600063288ace0360e11b6318df743f60e31b63bf26d89760e01b6379dd796f60e01b6001600160e01b03198616821480612fc657506001600160e01b0319868116908216145b80612fdd57506001600160e01b0319868116908516145b80612ff857506001600160e01b03198616630271189760e51b145b8061143f57506301ffc9a760e01b6001600160e01b03198716149695505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561307557507f000000000000000000000000000000000000000000000000000000000000000046145b1561309f57507f000000000000000000000000000000000000000000000000000000000000000090565b610cfb604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561317e5750600090506003613202565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131d2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166131fb57600060019250925050613202565b9150600090505b94509492505050565b600081600481111561321f5761321f613fe9565b14156132285750565b600181600481111561323c5761323c613fe9565b141561328a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610381565b600281600481111561329e5761329e613fe9565b14156132ec5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610381565b600381600481111561330057613300613fe9565b1415610e3c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610381565b60008581526009602090815260408083206001600160a01b0388168452600381019092529091205460ff16156133e15760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608401610381565b6001600160a01b03851660009081526003820160205260408120805460ff1916600117905560ff168460ff16141561343257828160000160008282546134279190614672565b909155506125c59050565b60ff84166001141561345257828160010160008282546134279190614672565b60ff84166002141561347257828160020160008282546134279190614672565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610381565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b61351e8282611c0e565b6111765761352b81613719565b61353683602061372b565b60405160200161354792919061499e565b60408051601f198184030181529082905262461bcd60e51b825261038191600401613cac565b60008161357c57506000919050565b60006001613589846138c6565b901c6001901b905060018184816135a2576135a2614942565b048201901c905060018184816135ba576135ba614942565b048201901c905060018184816135d2576135d2614942565b048201901c905060018184816135ea576135ea614942565b048201901c9050600181848161360257613602614942565b048201901c9050600181848161361a5761361a614942565b048201901c9050600181848161363257613632614942565b048201901c9050611ce18182858161364c5761364c614942565b0461395a565b60005b818310156136a85760006136698484613970565b60008781526020902090915063ffffffff86169082015463ffffffff161115613694578092506136a2565b61369f816001614672565b93505b50613655565b509392505050565b606060006136bd8361398b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b8151156136ff5781518083602001fd5b8060405162461bcd60e51b81526004016103819190613cac565b6060610cea6001600160a01b03831660145b6060600061373a836002614923565b613745906002614672565b6001600160401b0381111561375c5761375c613ac6565b6040519080825280601f01601f191660200182016040528015613786576020820181803683370190505b509050600360fc1b816000815181106137a1576137a161461b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106137d0576137d061461b565b60200101906001600160f81b031916908160001a90535060006137f4846002614923565b6137ff906001614672565b90505b6001811115613877576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106138335761383361461b565b1a60f81b8282815181106138495761384961461b565b60200101906001600160f81b031916908160001a90535060049490941c9361387081614a13565b9050613802565b508315611ce15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610381565b600080608083901c156138db57608092831c92015b604083901c156138ed57604092831c92015b602083901c156138ff57602092831c92015b601083901c1561391157601092831c92015b600883901c1561392357600892831c92015b600483901c1561393557600492831c92015b600283901c1561394757600292831c92015b600183901c15610cea5760010192915050565b60008183106139695781611ce1565b5090919050565b600061397f6002848418614958565b611ce190848416614672565b600060ff8216601f811115610cea57604051632cd44ac360e21b815260040160405180910390fd5b8280546139bf90614546565b90600052602060002090601f0160209004810192826139e15760008555613a27565b82601f106139fa57805160ff1916838001178555613a27565b82800160010185558215613a27579182015b82811115613a27578251825591602001919060010190613a0c565b5061205f9291505b8082111561205f5760008155600101613a2f565b600060208284031215613a5557600080fd5b81356001600160e01b031981168114611ce157600080fd5b803560ff8116811461151557600080fd5b60008083601f840112613a9057600080fd5b5081356001600160401b03811115613aa757600080fd5b602083019150836020828501011115613abf57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613b0457613b04613ac6565b604052919050565b60006001600160401b03821115613b2557613b25613ac6565b50601f01601f191660200190565b6000613b46613b4184613b0c565b613adc565b9050828152838383011115613b5a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112613b8257600080fd5b611ce183833560208501613b33565b60008060008060008060008060e0898b031215613bad57600080fd5b88359750613bbd60208a01613a6d565b965060408901356001600160401b0380821115613bd957600080fd5b613be58c838d01613a7e565b909850965060608b0135915080821115613bfe57600080fd5b50613c0b8b828c01613b71565b945050613c1a60808a01613a6d565b925060a0890135915060c089013590509295985092959890939650565b600060208284031215613c4957600080fd5b5035919050565b60005b83811015613c6b578181015183820152602001613c53565b83811115613c7a576000848401525b50505050565b60008151808452613c98816020860160208601613c50565b601f01601f19169290920160200192915050565b602081526000611ce16020830184613c80565b80356001600160a01b038116811461151557600080fd5b60008060008060808587031215613cec57600080fd5b613cf585613cbf565b9350613d0360208601613cbf565b92506040850135915060608501356001600160401b03811115613d2557600080fd5b613d3187828801613b71565b91505092959194509250565b60006001600160401b03821115613d5657613d56613ac6565b5060051b60200190565b600082601f830112613d7157600080fd5b81356020613d81613b4183613d3d565b82815260059290921b84018101918181019086841115613da057600080fd5b8286015b84811015613dc257613db581613cbf565b8352918301918301613da4565b509695505050505050565b600082601f830112613dde57600080fd5b81356020613dee613b4183613d3d565b82815260059290921b84018101918181019086841115613e0d57600080fd5b8286015b84811015613dc25780358352918301918301613e11565b600082601f830112613e3957600080fd5b81356020613e49613b4183613d3d565b82815260059290921b84018101918181019086841115613e6857600080fd5b8286015b84811015613dc25780356001600160401b03811115613e8b5760008081fd5b613e998986838b0101613b71565b845250918301918301613e6c565b60008060008060808587031215613ebd57600080fd5b84356001600160401b0380821115613ed457600080fd5b613ee088838901613d60565b95506020870135915080821115613ef657600080fd5b613f0288838901613dcd565b94506040870135915080821115613f1857600080fd5b50613f2587828801613e28565b949793965093946060013593505050565b608081526000613f496080830187613c80565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b60008060408385031215613f8257600080fd5b82359150613f9260208401613cbf565b90509250929050565b600080600080600060a08688031215613fb357600080fd5b85359450613fc360208701613a6d565b9350613fd160408701613a6d565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061401357614013613fe9565b91905290565b6000806040838503121561402c57600080fd5b50508035926020909101359150565b60048110610e3c57610e3c613fe9565b604081016140588461403b565b9281526001600160a01b039190911660209091015290565b6000806040838503121561408357600080fd5b82359150613f9260208401613a6d565b6000806000806000608086880312156140ab57600080fd5b853594506140bb60208701613a6d565b935060408601356001600160401b03808211156140d757600080fd5b6140e389838a01613a7e565b909550935060608801359150808211156140fc57600080fd5b5061410988828901613b71565b9150509295509295909350565b6080815260006141296080830187613c80565b828103602084015261413b8187613c80565b91505083604083015261414d8361403b565b82606083015295945050505050565b6000806000806060858703121561417257600080fd5b8435935061418260208601613a6d565b925060408501356001600160401b0381111561419d57600080fd5b6141a987828801613a7e565b95989497509550505050565b600080600080608085870312156141cb57600080fd5b84356001600160401b03808211156141e257600080fd5b6141ee88838901613d60565b9550602087013591508082111561420457600080fd5b61421088838901613dcd565b9450604087013591508082111561422657600080fd5b61423288838901613e28565b9350606087013591508082111561424857600080fd5b508501601f8101871361425a57600080fd5b613d3187823560208401613b33565b600081518084526020808501945080840160005b838110156142995781518752958201959082019060010161427d565b509495945050505050565b60ff60f81b8816815260e0602082015260006142c360e0830189613c80565b82810360408401526142d58189613c80565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501529050610dea8185614269565b60008060006060848603121561431b57600080fd5b61432484613cbf565b92506020840135915060408401356001600160401b0381111561434657600080fd5b61435286828701613b71565b9150509250925092565b60006020828403121561436e57600080fd5b611ce182613cbf565b60608152600061438a6060830186613c80565b931515602083015250901515604090910152919050565b600080600080600060a086880312156143b957600080fd5b6143c286613cbf565b94506143d060208701613cbf565b935060408601356001600160401b03808211156143ec57600080fd5b6143f889838a01613dcd565b9450606088013591508082111561440e57600080fd5b61441a89838a01613dcd565b935060808801359150808211156140fc57600080fd5b6000806000806060858703121561444657600080fd5b61444f85613cbf565b93506020850135925060408501356001600160401b0381111561419d57600080fd5b6000806040838503121561448457600080fd5b61448d83613cbf565b946020939093013593505050565b600080600080600060a086880312156144b357600080fd5b6144bc86613cbf565b94506144ca60208701613cbf565b9350604086013592506060860135915060808601356001600160401b038111156144f357600080fd5b61410988828901613b71565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c9082168061455a57607f821691505b6020821081141561457b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561459357600080fd5b81516001600160401b038111156145a957600080fd5b8201601f810184136145ba57600080fd5b80516145c8613b4182613b0c565b8181528560208385010111156145dd57600080fd5b6127de826020830160208601613c50565b634e487b7160e01b600052601160045260246000fd5b600082821015614616576146166145ee565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60008219821115614685576146856145ee565b500190565b600081518084526020808501945080840160005b838110156142995781516001600160a01b03168752958201959082019060010161469e565b600082825180855260208086019550808260051b84010181860160005b8481101561470e57601f198684030189526146fc838351613c80565b988401989250908301906001016146e0565b5090979650505050505050565b60006101208b8352602060018060a01b038c16818501528160408501526147448285018c61468a565b91508382036060850152614758828b614269565b915083820360808501528189518084528284019150828160051b850101838c0160005b838110156147a957601f19878403018552614797838351613c80565b9486019492509085019060010161477b565b505086810360a08801526147bd818c6146c3565b9450505050508560c08401528460e08401528281036101008401526147e28185613c80565b9c9b505050505050505050505050565b60006020828403121561480457600080fd5b815165ffffffffffff81168114611ce157600080fd5b60808152600061482d608083018761468a565b828103602084015261483f8187614269565b9050828103604084015261485381866146c3565b91505082606083015295945050505050565b84815260ff8416602082015282604082015260806060820152600061143f6080830184613c80565b85815260ff8516602082015283604082015260a0606082015260006148b560a0830185613c80565b82810360808401526148c78185613c80565b98975050505050505050565b60006000198214156148e7576148e76145ee565b5060010190565b60008251614900818460208701613c50565b9190910192915050565b60006020828403121561491c57600080fd5b5051919050565b600081600019048311821515161561493d5761493d6145ee565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261497557634e487b7160e01b600052601260045260246000fd5b500490565b8051602080830151919081101561457b5760001960209190910360031b1b16919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516149d6816017850160208801613c50565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351614a07816028840160208801613c50565b01602801949350505050565b600081614a2257614a226145ee565b50600019019056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a2646970667358221220827ac346b24897929dfa34ff2416ba523b19422583d3243ebe8b2fdd35a08dcd64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60C4247F GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA87430BA GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDD4E2BA5 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xECE40CC1 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xECE40CC1 EQ PUSH2 0xC3F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xC5F JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0xBCB JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0xBFF JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01F9E37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0xAF9 JUMPI DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0xB32 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0xB45 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA87430BA EQ PUSH2 0xA89 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0xAB8 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x9A802A6D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x9A802A6D EQ PUSH2 0xA1F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xA71E9A9C EQ PUSH2 0xA54 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9BF JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0x97C3D334 EQ PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x797669C9 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x797669C9 EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x977 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60C4247F EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0x7586353B EQ PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FE3E261 GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x43859632 GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x544FFC9C GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x7F4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0x5F398A14 EQ PUSH2 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43859632 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x452115D6 EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BCCF4FD GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0x3EF4CC8B EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0x40DD07B9 EQ PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FE3E261 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x143489D0 GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x2656227D GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x28BDCDE8 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x143489D0 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3420181 GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x3420181 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x13119161 EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x33E6F4D EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3A43 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x53B89AC75EFE2C37162CD6795F5BF8B9C749F1D0387576893C1D2D0C23A326F3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B91 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x14823911F2DA1B49F045A0929A60B8C1F2A7FC8C06C7284CA3E8AB4E193A08C8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD6 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x117A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F9B JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x6B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3FFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP3 SWAP2 SWAP1 PUSH2 0x404B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x4019 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x790 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x1338 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0x1449 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH2 0x80F CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x472 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x88E CALLDATASIZE PUSH1 0x4 PUSH2 0x4070 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4093 JUMP JUMPDEST PUSH2 0x1543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x8EE CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x163C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x913 PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4116 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x71F3D55856E4058ED06EE057D79ADA615F65CDF5F9EE88181B914225088F834F DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x972 CALLDATASIZE PUSH1 0x4 PUSH2 0x415C JUMP JUMPDEST PUSH2 0x17BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x41B5 JUMP JUMPDEST PUSH2 0x1804 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AC PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x1C0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F4 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x3DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xA3A CALLDATASIZE PUSH1 0x4 PUSH2 0x4306 JUMP JUMPDEST PUSH2 0x1CD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0xA6F CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1CE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA9 PUSH2 0xAA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x435C JUMP JUMPDEST PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1DD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0xAE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x43A1 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xB14 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x38A PUSH2 0xB40 CALLDATASIZE PUSH1 0x4 PUSH2 0x4430 JUMP JUMPDEST PUSH2 0x1DDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xB60 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x1EA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xB80 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6F JUMP JUMPDEST PUSH2 0x1EE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E SWAP1 DUP3 ADD MSTORE PUSH2 0x472 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1F08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xC3A CALLDATASIZE PUSH1 0x4 PUSH2 0x4471 JUMP JUMPDEST PUSH2 0x1F4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xC5A CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1F6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0xC7A CALLDATASIZE PUSH1 0x4 PUSH2 0x449B JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xCA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C37 JUMP JUMPDEST PUSH2 0x1FB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDA4 PUSH2 0xD9C PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP13 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP3 SWAP2 SWAP1 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP12 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD81 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x21B6 JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x21E3 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEA DUP11 DUP3 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP PUSH2 0x2201 SWAP2 POP POP JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xE17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST DUP1 PUSH2 0xE27 PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0xE31 JUMPI PUSH2 0xE1C JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x23D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xE4E SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE9C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEE0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEED DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF03 PUSH2 0x3FE9 JUMP JUMPDEST EQ DUP1 PUSH2 0xF20 JUMPI POP PUSH1 0x5 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1E PUSH2 0x3FE9 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F SWAP1 PUSH2 0xFC4 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFD9 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0xFE6 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xFF3 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2540 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1030 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x105C SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x107E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x108C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 POP AND DUP5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10ED DUP2 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 PUSH2 0x26CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x116C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x1176 DUP3 DUP3 PUSH2 0x2754 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x11D3 SWAP1 PUSH2 0xD9C SWAP1 PUSH1 0x80 ADD PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH2 0x11F0 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27BB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x121F JUMPI POP PUSH1 0x7 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x123A JUMPI POP PUSH1 0x2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A9 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 LT PUSH2 0x12C5 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 DUP2 LT PUSH2 0x12F3 JUMPI POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12FC DUP7 PUSH2 0x27E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x131B JUMPI POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x132C JUMPI POP PUSH1 0x4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1347 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1354 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1365 PUSH2 0x3FE9 JUMP JUMPDEST EQ PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20746F6F206C61746520746F2063616E63656C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A206F6E6C792070726F706F7365722063616E2063616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x143F DUP7 DUP7 DUP7 DUP7 PUSH2 0x2833 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BF5D7E9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14D9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14D6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4581 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1515 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x153B DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x11F0 DUP8 DUP3 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x2201 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x15A2 JUMPI POP POP PUSH1 0xA SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH2 0x15B1 PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15C1 JUMPI PUSH2 0x15C1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 POP DUP5 LT PUSH2 0x1617 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1623 DUP6 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0xB SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1677 JUMP JUMPDEST DUP1 PUSH2 0x166B PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1675 JUMPI PUSH2 0x1660 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x169B SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C7 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1729 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1755 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1785 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x143F DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x27BB SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x1810 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x1822 PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1831 DUP4 PUSH2 0xC3A PUSH1 0x1 DUP6 PUSH2 0x4604 JUMP JUMPDEST LT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73657220766F7465732062656C6F772070 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1C9BDC1BDCD85B081D1A1C995CDA1BDB19 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AE DUP9 DUP9 DUP9 DUP9 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP DUP7 MLOAD DUP9 MLOAD EQ PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x4631 JUMP JUMPDEST DUP6 MLOAD DUP9 MLOAD EQ PUSH2 0x18F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x4631 JUMP JUMPDEST PUSH1 0x0 DUP9 MLOAD GT PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20656D7074792070726F706F73616C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND ISZERO PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BC PUSH2 0x117A JUMP JUMPDEST PUSH2 0x19C6 SWAP1 DUP5 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19D2 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x19DC SWAP1 DUP4 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x19F2 DUP5 PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1A1F DUP4 PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE DUP9 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP3 DUP8 ADD MLOAD DUP8 DUP6 ADD MLOAD SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 MUL OR DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 DUP5 AND SWAP3 SHR MUL OR PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xC0 SWAP1 SWAP5 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE DUP11 MLOAD PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 SWAP2 DUP6 SWAP2 DUP9 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B56 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B41 JUMPI SWAP1 POP JUMPDEST POP DUP14 DUP9 DUP9 DUP16 PUSH1 0x40 MLOAD PUSH2 0x1B70 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x1BB9 PUSH32 0x0 DUP4 PUSH2 0x2A9F JUMP JUMPDEST PUSH2 0x1BE4 PUSH32 0x0 PUSH1 0x1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x91DDADF4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1CC4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1CC1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x47F2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1515 JUMPI PUSH2 0xCFB NUMBER PUSH2 0x212A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDE DUP5 DUP5 DUP5 PUSH2 0x2B43 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D0D PUSH1 0xB PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1D3D SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D69 SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DB6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DB6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D99 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1E18 JUMP JUMPDEST DUP1 PUSH2 0x1E0C PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1E16 JUMPI PUSH2 0x1E01 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E36 SWAP3 SWAP2 SWAP1 PUSH2 0x44FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1EA0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A2B PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x2BE8 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EC2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x481A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1EFE DUP2 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 PUSH2 0x2754 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1F27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1F43 JUMP JUMPDEST DUP1 PUSH2 0x1F37 PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1F41 JUMPI PUSH2 0x1F2C JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 DUP4 DUP4 PUSH2 0x1F68 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2B43 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1F8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH2 0x1FA8 JUMP JUMPDEST DUP1 PUSH2 0x1F9C PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST EQ PUSH2 0x1FA6 JUMPI PUSH2 0x1F91 JUMP JUMPDEST POP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA DUP3 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD1 DUP4 PUSH2 0x2D9C JUMP JUMPDEST SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD PUSH2 0x1FE9 SWAP3 PUSH1 0x20 ADD SWAP1 PUSH2 0x39B3 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20D6 DUP6 DUP6 DUP6 PUSH2 0x2DDA JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x2121 JUMPI PUSH2 0x210B DUP4 PUSH2 0x20FD PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x382062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xCEA JUMPI POP PUSH2 0xCEA DUP3 PUSH2 0x2F80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA PUSH2 0x21C3 PUSH2 0x301C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x21F4 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFF3 DUP2 PUSH2 0x320B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH2 0x221A DUP9 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222B PUSH2 0x3FE9 JUMP JUMPDEST EQ PUSH2 0x2284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x229E SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP7 PUSH2 0x2B43 JUMP JUMPDEST SWAP1 POP PUSH2 0x22AD DUP9 DUP9 DUP9 DUP5 DUP9 PUSH2 0x3359 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x22FF JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP10 DUP9 DUP5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x22F2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x11F0 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2BABFBAC5889A709B63BB7F598B324E08BC5A4FB9EC647FB3CBC9EC07EB8712 DUP10 DUP9 DUP5 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2340 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236E DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x238C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x3A37B9 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245F PUSH2 0x1CF8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2470 JUMPI POP PUSH1 0xB SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xB SWAP1 PUSH1 0x20 DUP2 ADD PUSH2 0x2493 DUP5 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST PUSH2 0x2501 PUSH2 0x24EF PUSH2 0x24E2 PUSH2 0x1C39 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x24F8 DUP5 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0xB SWAP2 SWAP1 PUSH2 0x20C8 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x25C7 JUMP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25C5 JUMPI ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x256A PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2596 JUMPI PUSH2 0x2596 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 PUSH2 0x34D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25BE DUP2 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2545 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A53 PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x260C JUMPI PUSH2 0x260C PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x262F JUMPI PUSH2 0x262F PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2649 JUMPI PUSH2 0x2649 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x265E SWAP2 SWAP1 PUSH2 0x48EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x269B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x26B0 DUP3 DUP3 DUP7 PUSH2 0x2BE8 JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x26BD SWAP1 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x25EE JUMP JUMPDEST PUSH2 0xE3C DUP2 CALLER PUSH2 0x3514 JUMP JUMPDEST PUSH2 0x26D8 DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1176 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2710 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x275E DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27DE DUP6 DUP6 DUP6 DUP6 PUSH2 0x27D9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2201 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x2809 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x282A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1FB1 JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2842 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x284F DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2865 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x2885 JUMPI POP PUSH1 0x6 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2882 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x28A3 JUMPI POP PUSH1 0x7 DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x28A0 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x28EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE MLOAD PUSH32 0x789CF55BE980739DAD1D0699B93B58E806B51C9D96619BFA8FE0A28ABAA7B30C SWAP1 PUSH2 0x293F SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x29AE JUMPI PUSH1 0x0 PUSH2 0x296C DUP5 PUSH2 0x356D JUMP JUMPDEST PUSH2 0x2976 SWAP1 DUP6 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x299E JUMPI DUP1 SWAP2 POP PUSH2 0x29AC JUMP JUMPDEST PUSH2 0x29A9 DUP2 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x29BC DUP8 DUP8 DUP6 DUP6 PUSH2 0x3652 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x29E9 JUMPI PUSH2 0x29D3 DUP8 PUSH2 0x20FD PUSH1 0x1 DUP5 PUSH2 0x4604 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x342062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x2AB2 JUMPI PUSH2 0x1FD1 DUP4 PUSH2 0x36B0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x2ABE SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AEA SWAP1 PUSH2 0x4546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B37 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B0C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B37 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B1A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x748D635 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x3A46B1A8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CDE SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2BF7 JUMPI POP DUP2 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1CE1 DUP4 DUP4 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2C61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x746F6F206C6F77 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x2CF0 DUP4 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2394E7A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E539E8C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D88 SWAP2 SWAP1 PUSH2 0x490A JUMP JUMPDEST PUSH2 0x2D92 SWAP2 SWAP1 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x4958 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x2DC7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2DD2 DUP3 PUSH2 0x497A JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x2F27 JUMPI PUSH1 0x0 PUSH2 0x2DF8 DUP8 PUSH2 0x20FD PUSH1 0x1 DUP6 PUSH2 0x4604 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND LT ISZERO PUSH2 0x2E79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B706F696E743A2064656372656173696E67206B6579730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x2EC8 JUMPI DUP5 PUSH2 0x2EA1 DUP9 PUSH2 0x20FD PUSH1 0x1 DUP7 PUSH2 0x4604 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP12 SLOAD PUSH1 0x1 DUP2 ADD DUP14 SSTORE PUSH1 0x0 DUP14 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x20 ADD MLOAD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x20DB SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x20 SHL MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH4 0x288ACE03 PUSH1 0xE1 SHL PUSH4 0x18DF743F PUSH1 0xE3 SHL PUSH4 0xBF26D897 PUSH1 0xE0 SHL PUSH4 0x79DD796F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND DUP3 EQ DUP1 PUSH2 0x2FC6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 DUP2 AND SWAP1 DUP3 AND EQ JUMPDEST DUP1 PUSH2 0x2FDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 DUP2 AND SWAP1 DUP6 AND EQ JUMPDEST DUP1 PUSH2 0x2FF8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ JUMPDEST DUP1 PUSH2 0x143F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP8 AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x3075 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x309F JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xCFB PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x317E JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x3202 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x31FB JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x3202 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x321F JUMPI PUSH2 0x321F PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x3228 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x323C JUMPI PUSH2 0x323C PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x328A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329E PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0x32EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3300 JUMPI PUSH2 0x3300 PUSH2 0x3FE9 JUMP JUMPDEST EQ ISZERO PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x33E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x191E4818D85CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xFF AND DUP5 PUSH1 0xFF AND EQ ISZERO PUSH2 0x3432 JUMPI DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x25C5 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x1 EQ ISZERO PUSH2 0x3452 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x2 EQ ISZERO PUSH2 0x3472 JUMPI DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3427 SWAP2 SWAP1 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6C756520666F7220656E756D20566F746554797065 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP4 SWAP1 SWAP2 ADD AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x351E DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1176 JUMPI PUSH2 0x352B DUP2 PUSH2 0x3719 JUMP JUMPDEST PUSH2 0x3536 DUP4 PUSH1 0x20 PUSH2 0x372B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3547 SWAP3 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x381 SWAP2 PUSH1 0x4 ADD PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x357C JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3589 DUP5 PUSH2 0x38C6 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35A2 JUMPI PUSH2 0x35A2 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35BA JUMPI PUSH2 0x35BA PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35D2 JUMPI PUSH2 0x35D2 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x35EA JUMPI PUSH2 0x35EA PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x3602 JUMPI PUSH2 0x3602 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x361A JUMPI PUSH2 0x361A PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x3632 JUMPI PUSH2 0x3632 PUSH2 0x4942 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1CE1 DUP2 DUP3 DUP6 DUP2 PUSH2 0x364C JUMPI PUSH2 0x364C PUSH2 0x4942 JUMP JUMPDEST DIV PUSH2 0x395A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x36A8 JUMPI PUSH1 0x0 PUSH2 0x3669 DUP5 DUP5 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3694 JUMPI DUP1 SWAP3 POP PUSH2 0x36A2 JUMP JUMPDEST PUSH2 0x369F DUP2 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x3655 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x36BD DUP4 PUSH2 0x398B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x36FF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCEA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x373A DUP4 PUSH1 0x2 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0x3745 SWAP1 PUSH1 0x2 PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x375C JUMPI PUSH2 0x375C PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3786 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x37A1 JUMPI PUSH2 0x37A1 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x37D0 JUMPI PUSH2 0x37D0 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x37F4 DUP5 PUSH1 0x2 PUSH2 0x4923 JUMP JUMPDEST PUSH2 0x37FF SWAP1 PUSH1 0x1 PUSH2 0x4672 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3877 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x3833 JUMPI PUSH2 0x3833 PUSH2 0x461B JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3849 JUMPI PUSH2 0x3849 PUSH2 0x461B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x3870 DUP2 PUSH2 0x4A13 JUMP JUMPDEST SWAP1 POP PUSH2 0x3802 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1CE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x38DB JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x38ED JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x38FF JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x3911 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x3923 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x3935 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x3947 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0xCEA JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3969 JUMPI DUP2 PUSH2 0x1CE1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x4958 JUMP JUMPDEST PUSH2 0x1CE1 SWAP1 DUP5 DUP5 AND PUSH2 0x4672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x39BF SWAP1 PUSH2 0x4546 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x39E1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3A27 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x39FA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3A27 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3A27 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3A27 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3A0C JUMP JUMPDEST POP PUSH2 0x205F SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3ABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3B04 JUMPI PUSH2 0x3B04 PUSH2 0x3AC6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3B25 JUMPI PUSH2 0x3B25 PUSH2 0x3AC6 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B46 PUSH2 0x3B41 DUP5 PUSH2 0x3B0C JUMP JUMPDEST PUSH2 0x3ADC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3BAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH2 0x3BBD PUSH1 0x20 DUP11 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE5 DUP13 DUP4 DUP14 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0B DUP12 DUP3 DUP13 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x3C1A PUSH1 0x80 DUP11 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C6B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C53 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3C98 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CF5 DUP6 PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH2 0x3D03 PUSH1 0x20 DUP7 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D31 DUP8 DUP3 DUP9 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3D56 JUMPI PUSH2 0x3D56 PUSH2 0x3AC6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D81 PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI PUSH2 0x3DB5 DUP2 PUSH2 0x3CBF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3DA4 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3DEE PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3E0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3E49 PUSH2 0x3B41 DUP4 PUSH2 0x3D3D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x3E68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3DC2 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3E8B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3E99 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x3B71 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3E6C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EE0 DUP9 DUP4 DUP10 ADD PUSH2 0x3D60 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F02 DUP9 DUP4 DUP10 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F25 DUP8 DUP3 DUP9 ADD PUSH2 0x3E28 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3F49 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3C80 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3F92 PUSH1 0x20 DUP5 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x3FC3 PUSH1 0x20 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP4 POP PUSH2 0x3FD1 PUSH1 0x40 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x8 DUP4 LT PUSH2 0x4013 JUMPI PUSH2 0x4013 PUSH2 0x3FE9 JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x402C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3C PUSH2 0x3FE9 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x4058 DUP5 PUSH2 0x403B JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x3F92 PUSH1 0x20 DUP5 ADD PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x40AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x40BB PUSH1 0x20 DUP8 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x40D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E3 DUP10 DUP4 DUP11 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4109 DUP9 DUP3 DUP10 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4129 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x413B DUP2 DUP8 PUSH2 0x3C80 JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x414D DUP4 PUSH2 0x403B JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x4182 PUSH1 0x20 DUP7 ADD PUSH2 0x3A6D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x419D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41A9 DUP8 DUP3 DUP9 ADD PUSH2 0x3A7E JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x41CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x41E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41EE DUP9 DUP4 DUP10 ADD PUSH2 0x3D60 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4210 DUP9 DUP4 DUP10 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4232 DUP9 DUP4 DUP10 ADD PUSH2 0x3E28 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x425A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D31 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4299 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x427D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x42C3 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x42D5 DUP2 DUP10 PUSH2 0x3C80 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0xDEA DUP2 DUP6 PUSH2 0x4269 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x431B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4324 DUP5 PUSH2 0x3CBF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4352 DUP7 DUP3 DUP8 ADD PUSH2 0x3B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE1 DUP3 PUSH2 0x3CBF JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x438A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3C80 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x43B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43C2 DUP7 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 POP PUSH2 0x43D0 PUSH1 0x20 DUP8 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x43EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43F8 DUP10 DUP4 DUP11 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x440E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x441A DUP10 DUP4 DUP11 ADD PUSH2 0x3DCD JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x444F DUP6 PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x419D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448D DUP4 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x44B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44BC DUP7 PUSH2 0x3CBF JUMP JUMPDEST SWAP5 POP PUSH2 0x44CA PUSH1 0x20 DUP8 ADD PUSH2 0x3CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4109 DUP9 DUP3 DUP10 ADD PUSH2 0x3B71 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A206F6E6C79476F7665726E616E63650000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x455A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x457B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x45BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x45C8 PUSH2 0x3B41 DUP3 PUSH2 0x3B0C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x45DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27DE DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4616 JUMPI PUSH2 0x4616 PUSH2 0x45EE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4685 JUMPI PUSH2 0x4685 PUSH2 0x45EE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4299 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x469E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x470E JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x46FC DUP4 DUP4 MLOAD PUSH2 0x3C80 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46E0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP13 AND DUP2 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x4744 DUP3 DUP6 ADD DUP13 PUSH2 0x468A JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x4758 DUP3 DUP12 PUSH2 0x4269 JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x80 DUP6 ADD MSTORE DUP2 DUP10 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD DUP4 DUP13 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47A9 JUMPI PUSH1 0x1F NOT DUP8 DUP5 SUB ADD DUP6 MSTORE PUSH2 0x4797 DUP4 DUP4 MLOAD PUSH2 0x3C80 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x477B JUMP JUMPDEST POP POP DUP7 DUP2 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x47BD DUP2 DUP13 PUSH2 0x46C3 JUMP JUMPDEST SWAP5 POP POP POP POP POP DUP6 PUSH1 0xC0 DUP5 ADD MSTORE DUP5 PUSH1 0xE0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x47E2 DUP2 DUP6 PUSH2 0x3C80 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x482D PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x468A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x483F DUP2 DUP8 PUSH2 0x4269 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4853 DUP2 DUP7 PUSH2 0x46C3 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x143F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x48B5 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x3C80 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x48C7 DUP2 DUP6 PUSH2 0x3C80 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x48E7 JUMPI PUSH2 0x48E7 PUSH2 0x45EE JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4900 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3C50 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x493D JUMPI PUSH2 0x493D PUSH2 0x45EE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4975 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x457B JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x49D6 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3C50 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x4A07 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3C50 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4A22 JUMPI PUSH2 0x4A22 PUSH2 0x45EE JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID SELFBALANCE PUSH16 0x7665726E6F723A2072656C6179207265 PUSH23 0x657274656420776974686F7574206D657373616765476F PUSH23 0x65726E6F723A2063616C6C207265766572746564207769 PUSH21 0x686F7574206D657373616765A26469706673582212 KECCAK256 DUP3 PUSH27 0xC346B24897929DFA34FF2416BA523B19422583D3243EBE8B2FDD35 LOG0 DUP14 0xCD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMapi;:::-;;:::i;:::-;;;830:14:31;;823:22;805:41;;793:2;778:18;3580:182:30;;;;;;;;2994:172;;;;;;;;;;;;;:::i;:::-;;;1003:25:31;;;991:2;976:18;2994:172:30;857:177:31;1031:68:30;;;;;;;;;;;;1072:27;1031:68;;18197:784:2;;;;;;;;;;-1:-1:-1;18197:784:2;;;;;:::i;:::-;;:::i;3221:150:7:-;;;;;;;;;;-1:-1:-1;3221:150:7;;;;;:::i;:::-;;:::i;5368:98:2:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;967:58:30:-;;;;;;;;;;;;1003:22;967:58;;8660:148:2;;;;;;;;;;-1:-1:-1;8660:148:2;;;;;:::i;:::-;8744:7;8770:22;;;:10;:22;;;;;:31;-1:-1:-1;;;8770:31:2;;-1:-1:-1;;;;;8770:31:2;;8660:148;;;;-1:-1:-1;;;;;4987:32:31;;;4969:51;;4957:2;4942:18;8660:148:2;4823:203:31;21689:162:2;;;;;;;;;;-1:-1:-1;21689:162:2;;;;;:::i;:::-;-1:-1:-1;;;21689:162:2;;;;;;;;;;-1:-1:-1;;;;;;5913:33:31;;;5895:52;;5883:2;5868:18;21689:162:2;5751:202:31;4504:129:0;;;;;;;;;;-1:-1:-1;4504:129:0;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;11938:885:2;;;;;;:::i;:::-;;:::i;1998:28:30:-;;;;;;;;;;-1:-1:-1;1998:28:30;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;8211:149:2:-;;;;;;;;;;-1:-1:-1;8211:149:2;;;;;:::i;:::-;8295:7;8321:22;;;:10;:22;;;;;:32;-1:-1:-1;;;;;8321:32:2;;8211:149;4929:145:0;;;;;;;;;;-1:-1:-1;4929:145:0;;;;;:::i;:::-;;:::i;1235:147:2:-;;;;;;;;;;;;1294:88;1235:147;;6038:214:0;;;;;;;;;;-1:-1:-1;6038:214:0;;;;;:::i;:::-;;:::i;2818:170:30:-;;;;;;;;;;;;;:::i;17686:427:2:-;;;;;;;;;;-1:-1:-1;17686:427:2;;;;;:::i;:::-;;:::i;6934:967::-;;;;;;;;;;-1:-1:-1;6934:967:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2208:100:30:-;;;;;;;;;;-1:-1:-1;2208:100:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2208:100:30;;;;;;;;;;;:::i;2314:::-;;;;;;;;;;-1:-1:-1;2314:100:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2314:100:30;;;1039:167:4;;;;;;;;;;-1:-1:-1;1039:167:4;;;;;:::i;:::-;1132:4;1155:26;;;:14;:26;;;;;;;;-1:-1:-1;;;;;1155:44:4;;;;:35;;:44;;;;;;;;1039:167;;;;;12881:559:2;;;;;;;;;;-1:-1:-1;12881:559:2;;;;;:::i;:::-;;:::i;1124:259:6:-;;;;;;;;;;;;;:::i;1278:321:4:-;;;;;;;;;;-1:-1:-1;1278:321:4;;;;;:::i;:::-;1364:20;1472:26;;;:14;:26;;;;;1516:25;;1543:21;;;;1566:25;;;;;1516;;1278:321;;;;;12285:25:31;;;12341:2;12326:18;;12319:34;;;;12369:18;;;12362:34;12273:2;12258:18;1278:321:4;12083:319:31;5525:99:2;;;;;;;;;;-1:-1:-1;5607:10:2;;;;;;;;;;;;-1:-1:-1;;;5607:10:2;;;;5525:99;;16696:198;;;;;;;;;;-1:-1:-1;16696:198:2;;;;;:::i;:::-;;:::i;17309:312::-;;;;;;;;;;-1:-1:-1;17309:312:2;;;;;:::i;:::-;;:::i;1752:664:7:-;;;;;;;;;;-1:-1:-1;1752:664:7;;;;;:::i;:::-;;:::i;1723:126:5:-;;;;;;;;;;-1:-1:-1;1723:126:5;;;;;:::i;:::-;;:::i;2163:39:30:-;;;;;;;;;;-1:-1:-1;2163:39:30;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1105:68::-;;;;;;;;;;;;1146:27;1105:68;;16964:266:2;;;;;;;;;;-1:-1:-1;16964:266:2;;;;;:::i;:::-;;:::i;10259:1620::-;;;;;;;;;;-1:-1:-1;10259:1620:2;;;;;:::i;:::-;;:::i;5021:633:23:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3021:145:0:-;;;;;;;;;;-1:-1:-1;3021:145:0;;;;;:::i;:::-;;:::i;734:235:6:-;;;;;;;;;;;;;:::i;:::-;;;17304:14:31;17292:27;;;17274:46;;17262:2;17247:18;734:235:6;17130:196:31;2522:94:7;;;;;;;;;;-1:-1:-1;2606:3:7;2522:94;;16413:223:2;;;;;;;;;;-1:-1:-1;16413:223:2;;;;;:::i;:::-;;:::i;2153:49:0:-;;;;;;;;;;-1:-1:-1;2153:49:0;2198:4;2153:49;;2032:36:30;;;;;;;;;;-1:-1:-1;2032:36:30;;;;;:::i;:::-;;:::i;1448:191:7:-;;;;;;;;;;;;;:::i;2074:37:30:-;;;;;;;;;;-1:-1:-1;2074:37:30;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3393:181::-;;;;;;;;;;;;;:::i;22227:247:2:-;;;;;;;;;;-1:-1:-1;22227:247:2;;;;;:::i;:::-;-1:-1:-1;;;22227:247:2;;;;;;;;8428:147;;;;;;;;;;-1:-1:-1;8428:147:2;;;;;:::i;:::-;8512:7;8538:22;;;:10;:22;;;;;:30;;;-1:-1:-1;;;;;8538:30:2;;8428:147;21033:296;;;;;;:::i;:::-;;:::i;6569:308::-;;;;;;;;;;-1:-1:-1;6569:308:2;;;;;:::i;:::-;;:::i;5354:147:0:-;;;;;;;;;;-1:-1:-1;5354:147:0;;;;;:::i;:::-;;:::i;843:136:4:-;;;;;;;;;;-1:-1:-1;931:41:4;;;;;;;;;;;;;;;;;;843:136;;1134:95:2;;;;;;;;;;;;1176:53;1134:95;;2024:130:5;;;;;;;;;;-1:-1:-1;2024:130:5;;;;;:::i;:::-;;:::i;16171:172:2:-;;;;;;;;;;-1:-1:-1;16171:172:2;;;;;:::i;:::-;;:::i;2339:150:5:-;;;;;;;;;;-1:-1:-1;2339:150:5;;;;;:::i;:::-;;:::i;21927:219:2:-;;;;;;;;;;-1:-1:-1;21927:219:2;;;;;:::i;:::-;-1:-1:-1;;;21927:219:2;;;;;;;;3172:215:30;;;;;;;;;;-1:-1:-1;3172:215:30;;;;;:::i;:::-;;:::i;430:31:6:-;;;;;;;;;;;;;;;3580:182:30;3696:4;3719:36;3743:11;3719:23;:36::i;:::-;3712:43;3580:182;-1:-1:-1;;3580:182:30:o;2994:172::-;3109:7;3139:20;1344:13:5;;;1256:108;3139:20:30;3132:27;;2994:172;:::o;18197:784:2:-;18445:7;18464:13;18480:423;18507:341;1294:88;18658:10;18694:7;18743:6;;18727:24;;;;;;;:::i;:::-;;;;;;;;18787:6;18777:17;;;;;;18572:244;;;;;;;;;;;21507:25:31;;;21563:2;21548:18;;21541:34;;;;21623:4;21611:17;;;;21606:2;21591:18;;21584:45;21660:2;21645:18;;21638:34;21703:3;21688:19;;21681:35;21494:3;21479:19;;21252:470;18572:244:2;;;;;;;;;;;;;18541:293;;;;;;18507:16;:341::i;:::-;18862:1;18877;18892;18480:13;:423::i;:::-;18464:439;;18921:53;18931:10;18943:5;18950:7;18959:6;;18921:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18967:6:2;;-1:-1:-1;18921:9:2;;-1:-1:-1;;18921:53:2:i;:::-;18914:60;18197:784;-1:-1:-1;;;;;;;;;;18197:784:2:o;3221:150:7:-;719:10:17;21603:4:2;3337:27;3329:64;;;;-1:-1:-1;;;3329:64:2;;;;;;;:::i;:::-;3403:277;;3618:52;3655:11;3625:26;:15;:24;:26::i;:::-;:41;3618:52;;;;;3437:243;3403:277;3322:42:7::1;3345:18;3322:22;:42::i;:::-;3221:150:::0;:::o;5368:98:2:-;5422:13;5454:5;5447:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5368:98;:::o;11938:885::-;12136:7;12155:18;12176:57;12189:7;12198:6;12206:9;12217:15;12176:12;:57::i;:::-;12155:78;;12244:26;12273:17;12279:10;12273:5;:17::i;:::-;12244:46;-1:-1:-1;12337:23:2;12321:12;:39;;;;;;;;:::i;:::-;;:79;;;-1:-1:-1;12380:20:2;12364:12;:36;;;;;;;;:::i;:::-;;12321:79;12300:159;;;;-1:-1:-1;;;12300:159:2;;22667:2:31;12300:159:2;;;22649:21:31;22706:2;22686:18;;;22679:30;22745:34;22725:18;;;22718:62;-1:-1:-1;;;22796:18:31;;;22789:31;22837:19;;12300:159:2;22465:397:31;12300:159:2;12469:22;;;;:10;:22;;;;;;;:31;;:38;;-1:-1:-1;;12469:38:2;12503:4;12469:38;;;12523:28;;;;;12480:10;1003:25:31;;991:2;976:18;;857:177;12523:28:2;;;;;;;;12562:71;12577:10;12589:7;12598:6;12606:9;12617:15;12562:14;:71::i;:::-;12643:65;12652:10;12664:7;12673:6;12681:9;12692:15;12643:8;:65::i;:::-;12718:70;12732:10;12744:7;12753:6;12761:9;12772:15;12718:13;:70::i;:::-;-1:-1:-1;12806:10:2;11938:885;-1:-1:-1;;;;;11938:885:2:o;1998:28:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1998:28:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1998:28:30;;;;-1:-1:-1;1998:28:30;;:::o;4929:145:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:0;;719:10:17;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;23069:2:31;6125:83:0;;;23051:21:31;23108:2;23088:18;;;23081:30;23147:34;23127:18;;;23120:62;-1:-1:-1;;;23198:18:31;;;23191:45;23253:19;;6125:83:0;22867:411:31;6125:83:0;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;2818:170:30:-;2932:7;2962:19;1173:12:5;;;1086:106;17686:427:2;17943:48;;;1176:53;17943:48;;;23481:25:31;23522:18;;;23515:34;;;23597:4;23585:17;;23565:18;;;23558:45;17854:7:2;;;;17889:159;;17916:77;;23454:18:31;;17943:48:2;23283:326:31;17889:159:2;17873:175;;18065:41;18075:10;18087:5;18094:7;18065:41;;;;;;;;;;;;:9;:41::i;:::-;18058:48;17686:427;-1:-1:-1;;;;;;;17686:427:2:o;6934:967::-;7007:13;7064:22;;;:10;:22;;;;;7101:17;;;;;;7097:77;;;-1:-1:-1;7141:22:2;;6934:967;-1:-1:-1;;6934:967:2:o;7097:77::-;7188:17;;;;;;;;;7184:77;;;-1:-1:-1;7228:22:2;;6934:967;-1:-1:-1;;6934:967:2:o;7184:77::-;7271:16;8321:22;;;:10;:22;;;;;:32;-1:-1:-1;;;;;8321:32:2;;7329:83;;7362:39;;-1:-1:-1;;;7362:39:2;;23816:2:31;7362:39:2;;;23798:21:31;23855:2;23835:18;;;23828:30;23894:31;23874:18;;;23867:59;23943:18;;7362:39:2;23614:353:31;7329:83:2;7422:24;7449:7;:5;:7::i;:::-;7422:34;;;;7483:16;7471:8;:28;7467:87;;-1:-1:-1;7522:21:2;;6934:967;-1:-1:-1;;;;6934:967:2:o;7467:87::-;7564:16;8538:22;;;:10;:22;;;;;:30;;;-1:-1:-1;;;;;8538:30:2;7626:28;;;7622:86;;-1:-1:-1;7677:20:2;;6934:967;-1:-1:-1;;;;;6934:967:2:o;7622:86::-;7722:26;7737:10;7722:14;:26::i;:::-;:56;;;;-1:-1:-1;2158:4:4;2210:26;;;:14;:26;;;;;2278:25;;2254:21;;;;;:49;7752:26:2;7718:177;;;-1:-1:-1;7801:23:2;;6934:967;-1:-1:-1;;;;;6934:967:2:o;7718:177::-;-1:-1:-1;7862:22:2;;6934:967;-1:-1:-1;;;;;6934:967:2:o;12881:559::-;13070:7;13089:18;13110:57;13123:7;13132:6;13140:9;13151:15;13110:12;:57::i;:::-;13089:78;-1:-1:-1;13206:21:2;13185:17;13191:10;13185:5;:17::i;:::-;:42;;;;;;;;:::i;:::-;;13177:83;;;;-1:-1:-1;;;13177:83:2;;24174:2:31;13177:83:2;;;24156:21:31;24213:2;24193:18;;;24186:30;24252;24232:18;;;24225:58;24300:18;;13177:83:2;23972:352:31;13177:83:2;13294:22;;;;:10;:22;;;;;:31;-1:-1:-1;;;13294:31:2;;-1:-1:-1;;;;;13294:31:2;719:10:17;-1:-1:-1;;;;;13278:47:2;;13270:94;;;;-1:-1:-1;;;13270:94:2;;24531:2:31;13270:94:2;;;24513:21:31;24570:2;24550:18;;;24543:30;24609:34;24589:18;;;24582:62;-1:-1:-1;;;24660:18:31;;;24653:32;24702:19;;13270:94:2;24329:398:31;13270:94:2;13381:52;13389:7;13398:6;13406:9;13417:15;13381:7;:52::i;:::-;13374:59;12881:559;-1:-1:-1;;;;;;12881:559:2:o;1124:259:6:-;1184:13;1213:5;-1:-1:-1;;;;;1213:16:6;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1213:18:6;;;;;;;;;;;;:::i;:::-;;;1209:168;;-1:-1:-1;1328:38:6;;;;;;;;;;;;;;;;;;1124:259::o;1209:168::-;1287:9;1124:259;-1:-1:-1;1124:259:6:o;16696:198:2:-;16782:7;;719:10:17;16801:28:2;;16846:41;16856:10;16868:5;16875:7;16846:41;;;;;;;;;;;;:9;:41::i;:::-;16839:48;16696:198;-1:-1:-1;;;;16696:198:2:o;17309:312::-;17497:7;;719:10:17;17516:28:2;;17561:53;17571:10;17583:5;17590:7;17599:6;;17561:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17607:6:2;;-1:-1:-1;17561:9:2;;-1:-1:-1;;17561:53:2:i;1752:664:7:-;1917:23;:43;1825:7;;1974:11;1970:65;;-1:-1:-1;;2008:16:7;;;1752:664;-1:-1:-1;1752:664:7:o;1970:65::-;2103:39;2145:23;2182:10;2191:1;2182:6;:10;:::i;:::-;2145:48;;;;;;;;:::i;:::-;;;;;;;;;;2103:90;;;;;;;;;2145:48;;2103:90;;;;;;;-1:-1:-1;;;2103:90:7;;;-1:-1:-1;;;;;2103:90:7;;;;;;;;;-1:-1:-1;;;2203:75:7;;2254:13;;;-1:-1:-1;;;;;2247:20:7;;1752:664;-1:-1:-1;;;1752:664:7:o;2203:75::-;2338:71;2380:28;2398:9;2380:17;:28::i;:::-;2338:23;;:41;:71::i;:::-;-1:-1:-1;;;;;2331:78:7;;1752:664;-1:-1:-1;;;;1752:664:7:o;1723:126:5:-;719:10:17;21603:4:2;3337:27;3329:64;;;;-1:-1:-1;;;3329:64:2;;;;;;;:::i;:::-;3403:277;;3618:52;3655:11;3625:26;:15;:24;:26::i;:::-;:41;3618:52;;;;;3437:243;3403:277;1811:31:5::1;1827:14;1811:15;:31::i;2163:39:30:-:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2163:39:30;;;;;;;;;;;;;;;-1:-1:-1;2163:39:30;:::o;16964:266:2:-;17114:7;;719:10:17;17133:28:2;;17178:45;17188:10;17200:5;17207:7;17216:6;;17178:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17178:9:2;;-1:-1:-1;;;17178:45:2:i;10259:1620::-;10451:7;719:10:17;10451:7:2;10538;:5;:7::i;:::-;10511:34;;;;10621:19;:17;:19::i;:::-;10577:40;10586:8;10596:20;10615:1;10596:16;:20;:::i;10577:40::-;:63;;10556:159;;;;-1:-1:-1;;;10556:159:2;;25968:2:31;10556:159:2;;;25950:21:31;26007:2;25987:18;;;25980:30;26046:34;26026:18;;;26019:62;-1:-1:-1;;;26097:18:31;;;26090:47;26154:19;;10556:159:2;25766:413:31;10556:159:2;10726:18;10747:71;10760:7;10769:6;10777:9;10804:11;10788:29;;;;;;10747:12;:71::i;:::-;10726:92;;10855:6;:13;10837:7;:14;:31;10829:77;;;;-1:-1:-1;;;10829:77:2;;;;;;;:::i;:::-;10942:9;:16;10924:7;:14;:34;10916:80;;;;-1:-1:-1;;;10916:80:2;;;;;;;:::i;:::-;11031:1;11014:7;:14;:18;11006:55;;;;-1:-1:-1;;;11006:55:2;;26788:2:31;11006:55:2;;;26770:21:31;26827:2;26807:18;;;26800:30;26866:26;26846:18;;;26839:54;26910:18;;11006:55:2;26586:348:31;11006:55:2;11079:22;;;;:10;:22;;;;;:32;-1:-1:-1;;;;;11079:32:2;:37;11071:83;;;;-1:-1:-1;;;11071:83:2;;27141:2:31;11071:83:2;;;27123:21:31;27180:2;27160:18;;;27153:30;27219:34;27199:18;;;27192:62;-1:-1:-1;;;27270:18:31;;;27263:31;27311:19;;11071:83:2;26939:397:31;11071:83:2;11165:16;11203:13;:11;:13::i;:::-;11184:32;;:16;:32;:::i;:::-;11165:51;;11226:16;11256:14;:12;:14::i;:::-;11245:25;;:8;:25;:::i;:::-;11226:44;;11306:276;;;;;;;;11376:27;11394:8;11376:17;:27::i;:::-;-1:-1:-1;;;;;11306:276:2;;;-1:-1:-1;;;;;11306:276:2;;;;;;-1:-1:-1;11306:276:2;;;;;;11426:27;11444:8;11426:17;:27::i;:::-;-1:-1:-1;;;;;11306:276:2;;;;;11570:1;11306:276;;;;;;;;;;;;;;;;;;;;;11281:22;;;:10;:22;;;;;;:301;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11281:301:2;;;;;;;-1:-1:-1;;;;;;;;11281:301:2;;;;;;-1:-1:-1;;;;;11281:301:2;-1:-1:-1;;;11281:301:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11281:301:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;11281:301:2;;;;;;-1:-1:-1;;11281:301:2;;;;;;;;;;;;;;;;;;;11727:14;;11598:246;;11281:22;;11651:8;;11727:14;;11694:6;;11714:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11756:9;11779:8;11801;11823:11;11598:246;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;11862:10:2;;10259:1620;-1:-1:-1;;;;;;;;10259:1620:2:o;5021:633:23:-;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5136:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:23;;;-1:-1:-1;5376:271:23;;-1:-1:-1;5543:13:23;;-1:-1:-1;5578:4:23;;-1:-1:-1;5605:1:23;-1:-1:-1;5621:16:23;-1:-1:-1;5376:271:23;-1:-1:-1;5021:633:23:o;3021:145:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;734:235:6:-;789:6;811:5;-1:-1:-1;;;;;811:11:6;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;811:13:6;;;;;;;;-1:-1:-1;;811:13:6;;;;;;;;;;;;:::i;:::-;;;807:156;;921:31;939:12;921:17;:31::i;16413:223:2:-;16566:7;16592:37;16602:7;16611:9;16622:6;16592:9;:37::i;:::-;16585:44;;16413:223;;;;;;:::o;2032:36:30:-;;;;;;;;;;;;1448:191:7;1530:23;:43;1504:7;;1530:48;:102;;1600:32;:23;:30;:32::i;:::-;-1:-1:-1;;;;;1530:102:7;3132:27:30;;2994:172;:::o;1530:102:7:-;-1:-1:-1;1581:16:7;;;1448:191::o;2074:37:30:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2074:37:30;;;;;;;-1:-1:-1;;2074:37:30;;;;;;;;;;:::o;3393:181::-;3512:7;3542:25;1525:18:5;;;1432:118;21033:296:2;719:10:17;21603:4:2;3337:27;3329:64;;;;-1:-1:-1;;;3329:64:2;;;;;;;:::i;:::-;3403:277;;3618:52;3655:11;3625:26;:15;:24;:26::i;:::-;:41;3618:52;;;;;3437:243;3403:277;21151:12:::1;21165:23:::0;21192:6:::1;-1:-1:-1::0;;;;;21192:11:2::1;21211:5;21218:4;;21192:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21150:73;;;;21233:89;21258:7;21267:10;21233:89;;;;;;;;;;;;;;;;;:24;:89::i;:::-;;21140:189;;21033:296:::0;;;;:::o;6569:308::-;6769:7;6824;6833:6;6841:9;6852:15;6813:55;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6813:55:2;;;;;;;;;6803:66;;6813:55;6803:66;;;;;6569:308;-1:-1:-1;;;;;6569:308:2:o;5354:147:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;2024:130:5:-:0;719:10:17;21603:4:2;3337:27;3329:64;;;;-1:-1:-1;;;3329:64:2;;;;;;;:::i;:::-;3403:277;;3618:52;3655:11;3625:26;:15;:24;:26::i;:::-;:41;3618:52;;;;;3437:243;3403:277;2114:33:5::1;2131:15;2114:16;:33::i;16171:172:2:-:0;16263:7;16289:47;16299:7;16308:9;16319:16;10184:9;;;;;;;;;-1:-1:-1;10184:9:2;;;10103:97;16319:16;16289:9;:47::i;2339:150:5:-;719:10:17;21603:4:2;3337:27;3329:64;;;;-1:-1:-1;;;3329:64:2;;;;;;;:::i;:::-;3403:277;;3618:52;3655:11;3625:26;:15;:24;:26::i;:::-;:41;3618:52;;;;;3437:243;3403:277;2439:43:5::1;2461:20;2439:21;:43::i;3172:215:30:-:0;3325:7;3355:25;3368:11;3355:12;:25::i;2895:341:19:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3157:5;3142;3116:46;;;;;;;;:::i;:::-;-1:-1:-1;1371:66:19;;-1:-1:-1;3176:43:19;;3310:202:20;3486:10;3310:202::o;2836:192:27:-;2893:7;-1:-1:-1;;;;;2920:26:27;;;2912:78;;;;-1:-1:-1;;;2912:78:27;;31659:2:31;2912:78:27;;;31641:21:31;31698:2;31678:18;;;31671:30;31737:34;31717:18;;;31710:62;-1:-1:-1;;;31788:18:31;;;31781:37;31835:19;;2912:78:27;31457:403:31;2912:78:27;-1:-1:-1;3015:5:27;2836:192::o;15264:187::-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:27;;32067:2:31;15338:76:27;;;32049:21:31;32106:2;32086:18;;;32079:30;32145:34;32125:18;;;32118:62;-1:-1:-1;;;32196:18:31;;;32189:36;32242:19;;15338:76:27;31865:402:31;8063:162:16;8145:7;;8180:38;8188:4;8207:3;8212:5;8180:7;:38::i;:::-;8173:45;;;;8063:162;;;;;;;:::o;10152:206::-;10247:24;;10214:7;;10288:8;;:63;;10303:41;10317:4;10336:7;10342:1;10336:3;:7;:::i;:::-;13936:28;13999:20;;;14064:4;14051:18;;;14047:28;;13826:265;10303:41;:48;-1:-1:-1;;;10303:48:16;;-1:-1:-1;;;;;10303:48:16;10288:63;;;10299:1;10281:70;10152:206;-1:-1:-1;;;10152:206:16:o;14240:187:27:-;14296:6;14331:16;14322:25;;;14314:76;;;;-1:-1:-1;;;14314:76:27;;32474:2:31;14314:76:27;;;32456:21:31;32513:2;32493:18;;;32486:30;32552:34;32532:18;;;32525:62;-1:-1:-1;;;32603:18:31;;;32596:36;32649:19;;14314:76:27;32272:402:31;2732:202:0;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;;2891:36;2915:11;2891:23;:36::i;4768:165:23:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:22;8530:11;-1:-1:-1;;;8554:23:22;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;19827:755:2:-;20013:7;20064:22;;;:10;:22;;;;;20125:20;20104:17;20110:10;20104:5;:17::i;:::-;:41;;;;;;;;:::i;:::-;;20096:89;;;;-1:-1:-1;;;20096:89:2;;32881:2:31;20096:89:2;;;32863:21:31;32920:2;32900:18;;;32893:30;32959:34;32939:18;;;32932:62;-1:-1:-1;;;33010:18:31;;;33003:33;33053:19;;20096:89:2;32679:399:31;20096:89:2;20232:18;;20196:14;;20213:46;;20223:7;;-1:-1:-1;;;;;20232:18:2;20252:6;20213:9;:46::i;:::-;20196:63;;20269:56;20280:10;20292:7;20301;20310:6;20318;20269:10;:56::i;:::-;20340:13;;20336:216;;20388:7;-1:-1:-1;;;;;20379:54:2;;20397:10;20409:7;20418:6;20426;20379:54;;;;;;;;;:::i;:::-;;;;;;;;20336:216;;;20488:7;-1:-1:-1;;;;;20469:72:2;;20497:10;20509:7;20518:6;20526;20534;20469:72;;;;;;;;;;:::i;:::-;;;;;;;;20569:6;19827:755;-1:-1:-1;;;;;;;19827:755:2:o;3295:324:29:-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:29;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:29;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:29;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:29;3588:14;;-1:-1:-1;;;;;3573:29:29;;;;;;;;3476:23;3295:324::o;3592:930:7:-;2606:3;3700:18;:41;;3679:155;;;;-1:-1:-1;;;3679:155:7;;34341:2:31;3679:155:7;;;34323:21:31;34380:2;34360:18;;;34353:30;34419:34;34399:18;;;34392:62;34490:34;34470:18;;;34463:62;-1:-1:-1;;;34541:19:31;;;34534:34;34585:19;;3679:155:7;34139:471:31;3679:155:7;3845:26;3874:17;:15;:17::i;:::-;3845:46;-1:-1:-1;4025:23:7;;;;;:75;;-1:-1:-1;4052:23:7;:43;:48;4025:75;4021:263;;;4175:84;;;;;;;;;4116:36;4175:84;;4116:23;;4175:84;;;4219:38;4238:18;4219;:38::i;:::-;-1:-1:-1;;;;;4175:84:7;;;;;;4116:157;;;;;;;-1:-1:-1;4116:157:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4116:157:7;;;;;;;;;;;;4021:263;4341:96;4370:26;4388:7;:5;:7::i;:::-;4370:26;;:17;:26::i;:::-;4398:38;4417:18;4398;:38::i;:::-;4341:23;;:96;:28;:96::i;:::-;-1:-1:-1;;4453:62:7;;;34789:25:31;;;34845:2;34830:18;;34823:34;;;4453:62:7;;34762:18:31;4453:62:7;;;;;;;3669:853;3592:930;:::o;14176:499:2:-;14411:258;;14459:200;14483:7;:14;14479:1;:18;14459:200;;;14548:4;-1:-1:-1;;;;;14526:27:2;:7;14534:1;14526:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14526:27:2;;14522:123;;;14577:49;14612:9;14622:1;14612:12;;;;;;;;:::i;:::-;;;;;;;14602:23;;;;;;14577:15;:24;;:49;;;;:::i;:::-;14499:3;;;:::i;:::-;;;14459:200;;;;14411:258;14176:499;;;;;:::o;13565:541::-;13788:26;:70;;;;;;;;;;;;;;;;;;;13873:9;13868:232;13892:7;:14;13888:1;:18;13868:232;;;13928:12;13942:23;13969:7;13977:1;13969:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13969:15:2;13992:6;13999:1;13992:9;;;;;;;;:::i;:::-;;;;;;;14003;14013:1;14003:12;;;;;;;;:::i;:::-;;;;;;;13969:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13927:89;;;;14030:59;14055:7;14064:10;14076:12;14030:24;:59::i;:::-;;13913:187;;13908:3;;;;:::i;:::-;;;13868:232;;3460:103:0;3526:30;3537:4;719:10:17;3526::0;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:17;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:17;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;19290:255:2:-;19447:7;19473:65;19483:10;19495:7;19504;19513:6;19521:16;10184:9;;;;;;;;;-1:-1:-1;10184:9:2;;;10103:97;19521:16;19473:9;:65::i;:::-;19466:72;19290:255;-1:-1:-1;;;;;19290:255:2:o;1664:276:4:-;1748:4;1800:26;;;:14;:26;;;;;1908:25;;;;1884:21;;;;:49;;1908:25;1884:49;:::i;:::-;8295:7:2;8321:22;;;:10;:22;;;;;:32;1844:36:4;;-1:-1:-1;;;;;8321:32:2;3172:215:30;:::i;1844:36:4:-;:89;;;1664:276;-1:-1:-1;;;1664:276:4:o;15407:704:2:-;15590:7;15609:18;15630:57;15643:7;15652:6;15660:9;15671:15;15630:12;:57::i;:::-;15609:78;;15698:26;15727:17;15733:10;15727:5;:17::i;:::-;15698:46;-1:-1:-1;15792:22:2;15776:12;:38;;;;;;;;:::i;:::-;;;:95;;;;-1:-1:-1;15850:21:2;15834:12;:37;;;;;;;;:::i;:::-;;;15776:95;:153;;;;-1:-1:-1;15907:22:2;15891:12;:38;;;;;;;;:::i;:::-;;;15776:153;15755:229;;;;-1:-1:-1;;;15755:229:2;;35489:2:31;15755:229:2;;;35471:21:31;35528:2;35508:18;;;35501:30;35567:31;35547:18;;;35540:59;35616:18;;15755:229:2;35287:353:31;15755:229:2;15994:22;;;;:10;:22;;;;;;;:31;;:38;;-1:-1:-1;;15994:38:2;;;;;16048:28;;;;;16005:10;1003:25:31;;991:2;976:18;;857:177;16048:28:2;;;;;;;;-1:-1:-1;16094:10:2;15407:704;-1:-1:-1;;;;;15407:704:2:o;9426:606:16:-;9544:24;;9511:7;;;9544:24;9643:1;9637:7;;9633:234;;;9660:11;9680:14;9690:3;9680:9;:14::i;:::-;9674:20;;:3;:20;:::i;:::-;13936:28;13999:20;;;14064:4;14051:18;;9660:34;;-1:-1:-1;14047:28:16;;9718:42;;;;;9712:48;;;;9708:149;;;9787:3;9780:10;;9708:149;;;9835:7;:3;9841:1;9835:7;:::i;:::-;9829:13;;9708:149;9646:221;9633:234;9877:11;9891:53;9910:4;9929:3;9934;9939:4;9891:18;:53::i;:::-;9877:67;-1:-1:-1;9962:8:16;;:63;;9977:41;9991:4;10010:7;10016:1;10010:3;:7;:::i;9977:41::-;:48;-1:-1:-1;;;9977:48:16;;-1:-1:-1;;;;;9977:48:16;9962:63;;;9973:1;9955:70;9426:606;-1:-1:-1;;;;;;;9426:606:16:o;2607:171:5:-;2703:12;;2688:44;;;34789:25:31;;;34845:2;34830:18;;34823:34;;;2688:44:5;;34762:18:31;2688:44:5;;;;;;;2742:12;:29;2607:171::o;13216:187:27:-;13272:6;-1:-1:-1;;;;;13298:25:27;;;13290:76;;;;-1:-1:-1;;;13290:76:27;;35847:2:31;13290:76:27;;;35829:21:31;35886:2;35866:18;;;35859:30;35925:34;35905:18;;;35898:62;-1:-1:-1;;;35976:18:31;;;35969:36;36022:19;;13290:76:27;35645:402:31;3367:268:19;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;3486:143::-;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:221:6;1684:38;;-1:-1:-1;;;1684:38:6;;-1:-1:-1;;;;;36244:32:31;;;1684:38:6;;;36226:51:31;36293:18;;;36286:34;;;1658:7:6;;1684:5;:18;;;;;;36199::31;;1684:38:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8520:295:15:-;8666:12;8694:7;8690:119;;;-1:-1:-1;8724:10:15;8717:17;;8690:119;8765:33;8773:10;8785:12;8765:7;:33::i;2898:316:5:-;3059:1;3041:15;:19;3033:71;;;;-1:-1:-1;;;3033:71:5;;36722:2:31;3033:71:5;;;36704:21:31;36761:2;36741:18;;;36734:30;36800:34;36780:18;;;36773:62;-1:-1:-1;;;36851:18:31;;;36844:37;36898:19;;3033:71:5;36520:403:31;3033:71:5;3135:13;;3119:47;;;34789:25:31;;;34845:2;34830:18;;34823:34;;;3119:47:5;;34762:18:31;3119:47:5;;;;;;;3176:13;:31;2898:316::o;3344:213::-;3458:18;;3437:62;;;34789:25:31;;;34845:2;34830:18;;34823:34;;;3437:62:5;;34762:18:31;3437:62:5;;;;;;;3509:18;:41;3344:213::o;2751:194:7:-;2824:7;2606:3;2889:26;2905:9;2889:15;:26::i;:::-;2851:35;;-1:-1:-1;;;2851:35:7;;;;;1003:25:31;;;2851:5:7;-1:-1:-1;;;;;2851:24:7;;;;976:18:31;;2851:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;:::i;:::-;2850:88;;;;:::i;1689:286:19:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:19;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:19:o;11288:836:16:-;11421:11;;11379:7;;;;11447;;11443:675;;11522:25;11550:28;11564:4;11570:7;11576:1;11570:3;:7;:::i;11550:28::-;11522:56;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11522:56:16;;;-1:-1:-1;;;;;11522:56:16;;;;;;;-1:-1:-1;11656:16:16;;;-1:-1:-1;11656:16:16;11648:56;;;;-1:-1:-1;;;11648:56:16;;37959:2:31;11648:56:16;;;37941:21:31;37998:2;37978:18;;;37971:30;38037:29;38017:18;;;38010:57;38084:18;;11648:56:16;37757:351:31;11648:56:16;11781:3;11768:16;;:4;:9;;;:16;;;11764:189;;;11842:5;11804:28;11818:4;11824:7;11830:1;11824:3;:7;:::i;11804:28::-;:43;;-1:-1:-1;;;;;11804:43:16;;;;-1:-1:-1;;;11804:43:16;;;;;;;;;;;11764:189;;;11896:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;11896:41:16;;;;;;;;;;11886:52;;;;;;;-1:-1:-1;11886:52:16;;;;;;;;;;;;;;-1:-1:-1;;;11886:52:16;;;;;;;;;;11764:189;11974:11;;;;-1:-1:-1;11987:5:16;;-1:-1:-1;11966:27:16;;-1:-1:-1;11966:27:16;11443:675;-1:-1:-1;;12034:41:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;12034:41:16;;;;;;;;;;12024:52;;;;;;;-1:-1:-1;12024:52:16;;;;;;;;;;;;;-1:-1:-1;;;12024:52:16;;;;;;;;;;;;-1:-1:-1;;12068:5:16;12090:17;;4194:1118:2;4296:4;-1:-1:-1;;;;;;;;;;;;;;;;;;5071:27:2;;;;;:70;;-1:-1:-1;;;;;;;5114:27:2;;;;;;;5071:70;:117;;;-1:-1:-1;;;;;;;5157:31:2;;;;;;;5071:117;:182;;;-1:-1:-1;;;;;;;5204:49:2;;-1:-1:-1;;;5204:49:2;5071:182;:234;;;-1:-1:-1;;;;;;;;;;937:40:24;;;5052:253:2;4194:1118;-1:-1:-1;;;;;;4194:1118:2:o;3695:262:23:-;3748:7;3779:4;-1:-1:-1;;;;;3788:11:23;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:23;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;41512:25:31;4077:11:23;41553:18:31;;;41546:34;;;;4090:14:23;41596:18:31;;;41589:34;4106:13:23;41639:18:31;;;41632:34;4129:4:23;41682:19:31;;;41675:61;4018:7:23;;41484:19:31;;4054:81:23;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;5009:1456:22;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:22;;-1:-1:-1;6123:30:22;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;38340:25:31;;;38413:4;38401:17;;38381:18;;;38374:45;;;;38435:18;;;38428:34;;;38478:18;;;38471:34;;;6276:24:22;;38312:19:31;;6276:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:22;;-1:-1:-1;;6276:24:22;;;-1:-1:-1;;;;;;;6314:20:22;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:22;;-1:-1:-1;5009:1456:22;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;;788:34;;-1:-1:-1;;;788:34:22;;38718:2:31;788:34:22;;;38700:21:31;38757:2;38737:18;;;38730:30;38796:26;38776:18;;;38769:54;38840:18;;788:34:22;38516:348:31;730:345:22;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;;903:41;;-1:-1:-1;;;903:41:22;;39071:2:31;903:41:22;;;39053:21:31;39110:2;39090:18;;;39083:30;39149:33;39129:18;;;39122:61;39200:18;;903:41:22;38869:355:31;839:236:22;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;;1020:44;;-1:-1:-1;;;1020:44:22;;39431:2:31;1020:44:22;;;39413:21:31;39470:2;39450:18;;;39443:30;39509:34;39489:18;;;39482:62;-1:-1:-1;;;39560:18:31;;;39553:32;39602:19;;1020:44:22;39229:398:31;2450:812:4;2644:33;2680:26;;;:14;:26;;;;;;;;-1:-1:-1;;;;;2726:30:4;;;;:21;;;:30;;;;;;;;;2725:31;2717:83;;;;-1:-1:-1;;;2717:83:4;;39834:2:31;2717:83:4;;;39816:21:31;39873:2;39853:18;;;39846:30;39912:34;39892:18;;;39885:62;-1:-1:-1;;;39963:18:31;;;39956:37;40010:19;;2717:83:4;39632:403:31;2717:83:4;-1:-1:-1;;;;;2810:30:4;;;;;;:21;;;:30;;;;;:37;;-1:-1:-1;;2810:37:4;2843:4;2810:37;;;2862:34;;:7;:34;;;2858:398;;;2941:6;2912:12;:25;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;2858:398:4;;-1:-1:-1;2858:398:4;;2968:30;;;2985:12;2968:30;2964:292;;;3039:6;3014:12;:21;;;:31;;;;;;;:::i;2964:292::-;3066:34;;;3083:16;3066:34;3062:194;;;3145:6;3116:12;:25;;;:35;;;;;;;:::i;3062:194::-;3182:63;;-1:-1:-1;;;3182:63:4;;40242:2:31;3182:63:4;;;40224:21:31;40281:2;40261:18;;;40254:30;40320:34;40300:18;;;40293:62;-1:-1:-1;;;40371:18:31;;;40364:51;40432:19;;3182:63:4;40040:417:31;2096:226:29;2195:10;;-1:-1:-1;;;2195:10:29;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:29;;;2292:13;;;;2279:26;;;;;2096:226::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;6530:1642:26:-;6578:7;6601:6;6597:45;;-1:-1:-1;6630:1:26;;6530:1642;-1:-1:-1;6530:1642:26:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;12470:433:16:-;12627:7;12646:230;12659:4;12653:3;:10;12646:230;;;12679:11;12693:23;12706:3;12711:4;12693:12;:23::i;:::-;13936:28;13999:20;;;14064:4;14051:18;;12679:37;;-1:-1:-1;12734:35:16;;;;14047:28;;12734:29;;;:35;12730:136;;;12796:3;12789:10;;12730:136;;;12844:7;:3;12850:1;12844:7;:::i;:::-;12838:13;;12730:136;12665:211;12646:230;;;-1:-1:-1;12892:4:16;12470:433;-1:-1:-1;;;12470:433:16:o;2059:405:19:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:19;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:19;;;-1:-1:-1;2416:4:19;2407:14;;2400:28;;;;-1:-1:-1;2371:16:19;2059:405::o;8821:540:15:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:15;;;;;;;;:::i;2407:149:21:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:21;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:21;;1918:47;;-1:-1:-1;;;1975:6:21;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:21;;;;;;;;;-1:-1:-1;;;2000:6:21;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:21;;;;;;;;-1:-1:-1;2030:9:21;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:21;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:21;;;;;;;;-1:-1:-1;2141:1:21;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:21;;2162:55;;;;-1:-1:-1;;;2162:55:21;;42090:2:31;2162:55:21;;;42072:21:31;;;42109:18;;;42102:30;42168:34;42148:18;;;42141:62;42220:18;;2162:55:21;41888:356:31;8633:983:26;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:26:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:26;;588:104;-1:-1:-1;588:104:26:o;805:153::-;867:7;940:11;950:1;941:5;;;940:11;:::i;:::-;930:21;;931:5;;;930:21;:::i;2536:245:19:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:19;;;;;;;;;;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:286:31;432:6;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;527:23;;-1:-1:-1;;;;;;579:32:31;;569:43;;559:71;;626:1;623;616:12;1221:156;1287:20;;1347:4;1336:16;;1326:27;;1316:55;;1367:1;1364;1357:12;1382:348;1434:8;1444:6;1498:3;1491:4;1483:6;1479:17;1475:27;1465:55;;1516:1;1513;1506:12;1465:55;-1:-1:-1;1539:20:31;;-1:-1:-1;;;;;1571:30:31;;1568:50;;;1614:1;1611;1604:12;1568:50;1651:4;1643:6;1639:17;1627:29;;1703:3;1696:4;1687:6;1679;1675:19;1671:30;1668:39;1665:59;;;1720:1;1717;1710:12;1665:59;1382:348;;;;;:::o;1735:127::-;1796:10;1791:3;1787:20;1784:1;1777:31;1827:4;1824:1;1817:15;1851:4;1848:1;1841:15;1867:275;1938:2;1932:9;2003:2;1984:13;;-1:-1:-1;;1980:27:31;1968:40;;-1:-1:-1;;;;;2023:34:31;;2059:22;;;2020:62;2017:88;;;2085:18;;:::i;:::-;2121:2;2114:22;1867:275;;-1:-1:-1;1867:275:31:o;2147:186::-;2195:4;-1:-1:-1;;;;;2220:6:31;2217:30;2214:56;;;2250:18;;:::i;:::-;-1:-1:-1;2316:2:31;2295:15;-1:-1:-1;;2291:29:31;2322:4;2287:40;;2147:186::o;2338:336::-;2402:5;2431:52;2447:35;2475:6;2447:35;:::i;:::-;2431:52;:::i;:::-;2422:61;;2506:6;2499:5;2492:21;2546:3;2537:6;2532:3;2528:16;2525:25;2522:45;;;2563:1;2560;2553:12;2522:45;2612:6;2607:3;2600:4;2593:5;2589:16;2576:43;2666:1;2659:4;2650:6;2643:5;2639:18;2635:29;2628:40;2338:336;;;;;:::o;2679:220::-;2721:5;2774:3;2767:4;2759:6;2755:17;2751:27;2741:55;;2792:1;2789;2782:12;2741:55;2814:79;2889:3;2880:6;2867:20;2860:4;2852:6;2848:17;2814:79;:::i;2904:978::-;3034:6;3042;3050;3058;3066;3074;3082;3090;3143:3;3131:9;3122:7;3118:23;3114:33;3111:53;;;3160:1;3157;3150:12;3111:53;3196:9;3183:23;3173:33;;3225:36;3257:2;3246:9;3242:18;3225:36;:::i;:::-;3215:46;;3312:2;3301:9;3297:18;3284:32;-1:-1:-1;;;;;3376:2:31;3368:6;3365:14;3362:34;;;3392:1;3389;3382:12;3362:34;3431:59;3482:7;3473:6;3462:9;3458:22;3431:59;:::i;:::-;3509:8;;-1:-1:-1;3405:85:31;-1:-1:-1;3597:2:31;3582:18;;3569:32;;-1:-1:-1;3613:16:31;;;3610:36;;;3642:1;3639;3632:12;3610:36;;3665:51;3708:7;3697:8;3686:9;3682:24;3665:51;:::i;:::-;3655:61;;;3735:37;3767:3;3756:9;3752:19;3735:37;:::i;:::-;3725:47;;3819:3;3808:9;3804:19;3791:33;3781:43;;3871:3;3860:9;3856:19;3843:33;3833:43;;2904:978;;;;;;;;;;;:::o;3887:180::-;3946:6;3999:2;3987:9;3978:7;3974:23;3970:32;3967:52;;;4015:1;4012;4005:12;3967:52;-1:-1:-1;4038:23:31;;3887:180;-1:-1:-1;3887:180:31:o;4072:258::-;4144:1;4154:113;4168:6;4165:1;4162:13;4154:113;;;4244:11;;;4238:18;4225:11;;;4218:39;4190:2;4183:10;4154:113;;;4285:6;4282:1;4279:13;4276:48;;;4320:1;4311:6;4306:3;4302:16;4295:27;4276:48;;4072:258;;;:::o;4335:::-;4377:3;4415:5;4409:12;4442:6;4437:3;4430:19;4458:63;4514:6;4507:4;4502:3;4498:14;4491:4;4484:5;4480:16;4458:63;:::i;:::-;4575:2;4554:15;-1:-1:-1;;4550:29:31;4541:39;;;;4582:4;4537:50;;4335:258;-1:-1:-1;;4335:258:31:o;4598:220::-;4747:2;4736:9;4729:21;4710:4;4767:45;4808:2;4797:9;4793:18;4785:6;4767:45;:::i;5031:173::-;5099:20;;-1:-1:-1;;;;;5148:31:31;;5138:42;;5128:70;;5194:1;5191;5184:12;5209:537;5304:6;5312;5320;5328;5381:3;5369:9;5360:7;5356:23;5352:33;5349:53;;;5398:1;5395;5388:12;5349:53;5421:29;5440:9;5421:29;:::i;:::-;5411:39;;5469:38;5503:2;5492:9;5488:18;5469:38;:::i;:::-;5459:48;;5554:2;5543:9;5539:18;5526:32;5516:42;;5609:2;5598:9;5594:18;5581:32;-1:-1:-1;;;;;5628:6:31;5625:30;5622:50;;;5668:1;5665;5658:12;5622:50;5691:49;5732:7;5723:6;5712:9;5708:22;5691:49;:::i;:::-;5681:59;;;5209:537;;;;;;;:::o;6143:183::-;6203:4;-1:-1:-1;;;;;6228:6:31;6225:30;6222:56;;;6258:18;;:::i;:::-;-1:-1:-1;6303:1:31;6299:14;6315:4;6295:25;;6143:183::o;6331:668::-;6385:5;6438:3;6431:4;6423:6;6419:17;6415:27;6405:55;;6456:1;6453;6446:12;6405:55;6492:6;6479:20;6518:4;6542:60;6558:43;6598:2;6558:43;:::i;6542:60::-;6636:15;;;6722:1;6718:10;;;;6706:23;;6702:32;;;6667:12;;;;6746:15;;;6743:35;;;6774:1;6771;6764:12;6743:35;6810:2;6802:6;6798:15;6822:148;6838:6;6833:3;6830:15;6822:148;;;6904:23;6923:3;6904:23;:::i;:::-;6892:36;;6948:12;;;;6855;;6822:148;;;-1:-1:-1;6988:5:31;6331:668;-1:-1:-1;;;;;;6331:668:31:o;7004:662::-;7058:5;7111:3;7104:4;7096:6;7092:17;7088:27;7078:55;;7129:1;7126;7119:12;7078:55;7165:6;7152:20;7191:4;7215:60;7231:43;7271:2;7231:43;:::i;7215:60::-;7309:15;;;7395:1;7391:10;;;;7379:23;;7375:32;;;7340:12;;;;7419:15;;;7416:35;;;7447:1;7444;7437:12;7416:35;7483:2;7475:6;7471:15;7495:142;7511:6;7506:3;7503:15;7495:142;;;7577:17;;7565:30;;7615:12;;;;7528;;7495:142;;7671:886;7723:5;7776:3;7769:4;7761:6;7757:17;7753:27;7743:55;;7794:1;7791;7784:12;7743:55;7830:6;7817:20;7856:4;7880:60;7896:43;7936:2;7896:43;:::i;7880:60::-;7974:15;;;8060:1;8056:10;;;;8044:23;;8040:32;;;8005:12;;;;8084:15;;;8081:35;;;8112:1;8109;8102:12;8081:35;8148:2;8140:6;8136:15;8160:368;8176:6;8171:3;8168:15;8160:368;;;8262:3;8249:17;-1:-1:-1;;;;;8285:11:31;8282:35;8279:125;;;8358:1;8387:2;8383;8376:14;8279:125;8429:56;8481:3;8476:2;8462:11;8454:6;8450:24;8446:33;8429:56;:::i;:::-;8417:69;;-1:-1:-1;8506:12:31;;;;8193;;8160:368;;8562:897;8732:6;8740;8748;8756;8809:3;8797:9;8788:7;8784:23;8780:33;8777:53;;;8826:1;8823;8816:12;8777:53;8866:9;8853:23;-1:-1:-1;;;;;8936:2:31;8928:6;8925:14;8922:34;;;8952:1;8949;8942:12;8922:34;8975:61;9028:7;9019:6;9008:9;9004:22;8975:61;:::i;:::-;8965:71;;9089:2;9078:9;9074:18;9061:32;9045:48;;9118:2;9108:8;9105:16;9102:36;;;9134:1;9131;9124:12;9102:36;9157:63;9212:7;9201:8;9190:9;9186:24;9157:63;:::i;:::-;9147:73;;9273:2;9262:9;9258:18;9245:32;9229:48;;9302:2;9292:8;9289:16;9286:36;;;9318:1;9315;9308:12;9286:36;;9341:61;9394:7;9383:8;9372:9;9368:24;9341:61;:::i;:::-;8562:897;;;;-1:-1:-1;9331:71:31;;9449:2;9434:18;9421:32;;-1:-1:-1;;;8562:897:31:o;9464:491::-;9697:3;9686:9;9679:22;9660:4;9718:46;9759:3;9748:9;9744:19;9736:6;9718:46;:::i;:::-;9795:2;9780:18;;9773:34;;;;-1:-1:-1;;;;;;9881:15:31;;;9876:2;9861:18;;9854:43;9933:15;;9928:2;9913:18;;;9906:43;9710:54;9464:491;-1:-1:-1;9464:491:31:o;9960:254::-;10028:6;10036;10089:2;10077:9;10068:7;10064:23;10060:32;10057:52;;;10105:1;10102;10095:12;10057:52;10141:9;10128:23;10118:33;;10170:38;10204:2;10193:9;10189:18;10170:38;:::i;:::-;10160:48;;9960:254;;;;;:::o;10219:458::-;10310:6;10318;10326;10334;10342;10395:3;10383:9;10374:7;10370:23;10366:33;10363:53;;;10412:1;10409;10402:12;10363:53;10448:9;10435:23;10425:33;;10477:36;10509:2;10498:9;10494:18;10477:36;:::i;:::-;10467:46;;10532:36;10564:2;10553:9;10549:18;10532:36;:::i;:::-;10219:458;;;;-1:-1:-1;10522:46:31;;10615:2;10600:18;;10587:32;;-1:-1:-1;10666:3:31;10651:19;10638:33;;10219:458;-1:-1:-1;;10219:458:31:o;10682:127::-;10743:10;10738:3;10734:20;10731:1;10724:31;10774:4;10771:1;10764:15;10798:4;10795:1;10788:15;10814:249;10964:2;10949:18;;10997:1;10986:13;;10976:47;;11003:18;;:::i;:::-;11032:25;;;10814:249;:::o;11068:248::-;11136:6;11144;11197:2;11185:9;11176:7;11172:23;11168:32;11165:52;;;11213:1;11210;11203:12;11165:52;-1:-1:-1;;11236:23:31;;;11306:2;11291:18;;;11278:32;;-1:-1:-1;11068:248:31:o;11321:129::-;11418:1;11411:5;11408:12;11398:46;;11424:18;;:::i;11455:364::-;11644:2;11629:18;;11656:54;11703:6;11656:54;:::i;:::-;11719:25;;;-1:-1:-1;;;;;11780:32:31;;;;11775:2;11760:18;;;11753:60;11455:364;:::o;12407:250::-;12473:6;12481;12534:2;12522:9;12513:7;12509:23;12505:32;12502:52;;;12550:1;12547;12540:12;12502:52;12586:9;12573:23;12563:33;;12615:36;12647:2;12636:9;12632:18;12615:36;:::i;12662:769::-;12767:6;12775;12783;12791;12799;12852:3;12840:9;12831:7;12827:23;12823:33;12820:53;;;12869:1;12866;12859:12;12820:53;12905:9;12892:23;12882:33;;12934:36;12966:2;12955:9;12951:18;12934:36;:::i;:::-;12924:46;;13021:2;13010:9;13006:18;12993:32;-1:-1:-1;;;;;13085:2:31;13077:6;13074:14;13071:34;;;13101:1;13098;13091:12;13071:34;13140:59;13191:7;13182:6;13171:9;13167:22;13140:59;:::i;:::-;13218:8;;-1:-1:-1;13114:85:31;-1:-1:-1;13306:2:31;13291:18;;13278:32;;-1:-1:-1;13322:16:31;;;13319:36;;;13351:1;13348;13341:12;13319:36;;13374:51;13417:7;13406:8;13395:9;13391:24;13374:51;:::i;:::-;13364:61;;;12662:769;;;;;;;;:::o;13436:608::-;13707:3;13696:9;13689:22;13670:4;13734:46;13775:3;13764:9;13760:19;13752:6;13734:46;:::i;:::-;13828:9;13820:6;13816:22;13811:2;13800:9;13796:18;13789:50;13856:33;13882:6;13874;13856:33;:::i;:::-;13848:41;;;13925:6;13920:2;13909:9;13905:18;13898:34;13941:54;13988:6;13941:54;:::i;:::-;14031:6;14026:2;14015:9;14011:18;14004:34;13436:608;;;;;;;:::o;14049:549::-;14136:6;14144;14152;14160;14213:2;14201:9;14192:7;14188:23;14184:32;14181:52;;;14229:1;14226;14219:12;14181:52;14265:9;14252:23;14242:33;;14294:36;14326:2;14315:9;14311:18;14294:36;:::i;:::-;14284:46;;14381:2;14370:9;14366:18;14353:32;-1:-1:-1;;;;;14400:6:31;14397:30;14394:50;;;14440:1;14437;14430:12;14394:50;14479:59;14530:7;14521:6;14510:9;14506:22;14479:59;:::i;:::-;14049:549;;;;-1:-1:-1;14557:8:31;-1:-1:-1;;;;14049:549:31:o;14603:1157::-;14783:6;14791;14799;14807;14860:3;14848:9;14839:7;14835:23;14831:33;14828:53;;;14877:1;14874;14867:12;14828:53;14917:9;14904:23;-1:-1:-1;;;;;14987:2:31;14979:6;14976:14;14973:34;;;15003:1;15000;14993:12;14973:34;15026:61;15079:7;15070:6;15059:9;15055:22;15026:61;:::i;:::-;15016:71;;15140:2;15129:9;15125:18;15112:32;15096:48;;15169:2;15159:8;15156:16;15153:36;;;15185:1;15182;15175:12;15153:36;15208:63;15263:7;15252:8;15241:9;15237:24;15208:63;:::i;:::-;15198:73;;15324:2;15313:9;15309:18;15296:32;15280:48;;15353:2;15343:8;15340:16;15337:36;;;15369:1;15366;15359:12;15337:36;15392:61;15445:7;15434:8;15423:9;15419:24;15392:61;:::i;:::-;15382:71;;15506:2;15495:9;15491:18;15478:32;15462:48;;15535:2;15525:8;15522:16;15519:36;;;15551:1;15548;15541:12;15519:36;-1:-1:-1;15574:24:31;;15629:4;15621:13;;15617:27;-1:-1:-1;15607:55:31;;15658:1;15655;15648:12;15607:55;15681:73;15746:7;15741:2;15728:16;15723:2;15719;15715:11;15681:73;:::i;15765:435::-;15818:3;15856:5;15850:12;15883:6;15878:3;15871:19;15909:4;15938:2;15933:3;15929:12;15922:19;;15975:2;15968:5;15964:14;15996:1;16006:169;16020:6;16017:1;16014:13;16006:169;;;16081:13;;16069:26;;16115:12;;;;16150:15;;;;16042:1;16035:9;16006:169;;;-1:-1:-1;16191:3:31;;15765:435;-1:-1:-1;;;;;15765:435:31:o;16205:920::-;16611:3;16606;16602:13;16594:6;16590:26;16579:9;16572:45;16653:3;16648:2;16637:9;16633:18;16626:31;16553:4;16680:46;16721:3;16710:9;16706:19;16698:6;16680:46;:::i;:::-;16774:9;16766:6;16762:22;16757:2;16746:9;16742:18;16735:50;16808:33;16834:6;16826;16808:33;:::i;:::-;16872:2;16857:18;;16850:34;;;-1:-1:-1;;;;;16921:32:31;;16915:3;16900:19;;16893:61;16941:3;16970:19;;16963:35;;;17035:22;;;17029:3;17014:19;;17007:51;16794:47;-1:-1:-1;17075:44:31;16794:47;17104:6;17075:44;:::i;17331:462::-;17417:6;17425;17433;17486:2;17474:9;17465:7;17461:23;17457:32;17454:52;;;17502:1;17499;17492:12;17454:52;17525:29;17544:9;17525:29;:::i;:::-;17515:39;;17601:2;17590:9;17586:18;17573:32;17563:42;;17656:2;17645:9;17641:18;17628:32;-1:-1:-1;;;;;17675:6:31;17672:30;17669:50;;;17715:1;17712;17705:12;17669:50;17738:49;17779:7;17770:6;17759:9;17755:22;17738:49;:::i;:::-;17728:59;;;17331:462;;;;;:::o;17798:186::-;17857:6;17910:2;17898:9;17889:7;17885:23;17881:32;17878:52;;;17926:1;17923;17916:12;17878:52;17949:29;17968:9;17949:29;:::i;17989:382::-;18182:2;18171:9;18164:21;18145:4;18202:45;18243:2;18232:9;18228:18;18220:6;18202:45;:::i;:::-;18290:14;;18283:22;18278:2;18263:18;;18256:50;-1:-1:-1;18349:14:31;;18342:22;18337:2;18322:18;;;18315:50;18194:53;17989:382;-1:-1:-1;17989:382:31:o;18376:943::-;18530:6;18538;18546;18554;18562;18615:3;18603:9;18594:7;18590:23;18586:33;18583:53;;;18632:1;18629;18622:12;18583:53;18655:29;18674:9;18655:29;:::i;:::-;18645:39;;18703:38;18737:2;18726:9;18722:18;18703:38;:::i;:::-;18693:48;;18792:2;18781:9;18777:18;18764:32;-1:-1:-1;;;;;18856:2:31;18848:6;18845:14;18842:34;;;18872:1;18869;18862:12;18842:34;18895:61;18948:7;18939:6;18928:9;18924:22;18895:61;:::i;:::-;18885:71;;19009:2;18998:9;18994:18;18981:32;18965:48;;19038:2;19028:8;19025:16;19022:36;;;19054:1;19051;19044:12;19022:36;19077:63;19132:7;19121:8;19110:9;19106:24;19077:63;:::i;:::-;19067:73;;19193:3;19182:9;19178:19;19165:33;19149:49;;19223:2;19213:8;19210:16;19207:36;;;19239:1;19236;19229:12;19324:552;19412:6;19420;19428;19436;19489:2;19477:9;19468:7;19464:23;19460:32;19457:52;;;19505:1;19502;19495:12;19457:52;19528:29;19547:9;19528:29;:::i;:::-;19518:39;;19604:2;19593:9;19589:18;19576:32;19566:42;;19659:2;19648:9;19644:18;19631:32;-1:-1:-1;;;;;19678:6:31;19675:30;19672:50;;;19718:1;19715;19708:12;19881:254;19949:6;19957;20010:2;19998:9;19989:7;19985:23;19981:32;19978:52;;;20026:1;20023;20016:12;19978:52;20049:29;20068:9;20049:29;:::i;:::-;20039:39;20125:2;20110:18;;;;20097:32;;-1:-1:-1;;;19881:254:31:o;20140:606::-;20244:6;20252;20260;20268;20276;20329:3;20317:9;20308:7;20304:23;20300:33;20297:53;;;20346:1;20343;20336:12;20297:53;20369:29;20388:9;20369:29;:::i;:::-;20359:39;;20417:38;20451:2;20440:9;20436:18;20417:38;:::i;:::-;20407:48;;20502:2;20491:9;20487:18;20474:32;20464:42;;20553:2;20542:9;20538:18;20525:32;20515:42;;20608:3;20597:9;20593:19;20580:33;-1:-1:-1;;;;;20628:6:31;20625:30;20622:50;;;20668:1;20665;20658:12;20622:50;20691:49;20732:7;20723:6;20712:9;20708:22;20691:49;:::i;20976:271::-;21159:6;21151;21146:3;21133:33;21115:3;21185:16;;21210:13;;;21185:16;20976:271;-1:-1:-1;20976:271:31:o;21727:348::-;21929:2;21911:21;;;21968:2;21948:18;;;21941:30;22007:26;22002:2;21987:18;;21980:54;22066:2;22051:18;;21727:348::o;22080:380::-;22159:1;22155:12;;;;22202;;;22223:61;;22277:4;22269:6;22265:17;22255:27;;22223:61;22330:2;22322:6;22319:14;22299:18;22296:38;22293:161;;;22376:10;22371:3;22367:20;22364:1;22357:31;22411:4;22408:1;22401:15;22439:4;22436:1;22429:15;22293:161;;22080:380;;;:::o;24732:635::-;24812:6;24865:2;24853:9;24844:7;24840:23;24836:32;24833:52;;;24881:1;24878;24871:12;24833:52;24914:9;24908:16;-1:-1:-1;;;;;24939:6:31;24936:30;24933:50;;;24979:1;24976;24969:12;24933:50;25002:22;;25055:4;25047:13;;25043:27;-1:-1:-1;25033:55:31;;25084:1;25081;25074:12;25033:55;25113:2;25107:9;25138:48;25154:31;25182:2;25154:31;:::i;25138:48::-;25209:2;25202:5;25195:17;25249:7;25244:2;25239;25235;25231:11;25227:20;25224:33;25221:53;;;25270:1;25267;25260:12;25221:53;25283:54;25334:2;25329;25322:5;25318:14;25313:2;25309;25305:11;25283:54;:::i;25372:127::-;25433:10;25428:3;25424:20;25421:1;25414:31;25464:4;25461:1;25454:15;25488:4;25485:1;25478:15;25504:125;25544:4;25572:1;25569;25566:8;25563:34;;;25577:18;;:::i;:::-;-1:-1:-1;25614:9:31;;25504:125::o;25634:127::-;25695:10;25690:3;25686:20;25683:1;25676:31;25726:4;25723:1;25716:15;25750:4;25747:1;25740:15;26184:397;26386:2;26368:21;;;26425:2;26405:18;;;26398:30;26464:34;26459:2;26444:18;;26437:62;-1:-1:-1;;;26530:2:31;26515:18;;26508:31;26571:3;26556:19;;26184:397::o;27341:128::-;27381:3;27412:1;27408:6;27405:1;27402:13;27399:39;;;27418:18;;:::i;:::-;-1:-1:-1;27454:9:31;;27341:128::o;27474:461::-;27527:3;27565:5;27559:12;27592:6;27587:3;27580:19;27618:4;27647:2;27642:3;27638:12;27631:19;;27684:2;27677:5;27673:14;27705:1;27715:195;27729:6;27726:1;27723:13;27715:195;;;27794:13;;-1:-1:-1;;;;;27790:39:31;27778:52;;27850:12;;;;27885:15;;;;27826:1;27744:9;27715:195;;27940:591;27991:3;28022;28054:5;28048:12;28081:6;28076:3;28069:19;28107:4;28136:2;28131:3;28127:12;28120:19;;28192:2;28182:6;28179:1;28175:14;28168:5;28164:26;28160:35;28229:2;28222:5;28218:14;28250:1;28260:245;28274:6;28271:1;28268:13;28260:245;;;28361:2;28357:7;28349:5;28343:4;28339:16;28335:30;28330:3;28323:43;28387:38;28420:4;28411:6;28405:13;28387:38;:::i;:::-;28483:12;;;;28379:46;-1:-1:-1;28448:15:31;;;;28296:1;28289:9;28260:245;;;-1:-1:-1;28521:4:31;;27940:591;-1:-1:-1;;;;;;;27940:591:31:o;28536:1864::-;29110:4;29139:3;29169:6;29158:9;29151:25;29195:2;29262:1;29258;29253:3;29249:11;29245:19;29237:6;29233:32;29228:2;29217:9;29213:18;29206:60;29302:2;29297;29286:9;29282:18;29275:30;29328:56;29380:2;29369:9;29365:18;29357:6;29328:56;:::i;:::-;29314:70;;29432:9;29424:6;29420:22;29415:2;29404:9;29400:18;29393:50;29466:44;29503:6;29495;29466:44;:::i;:::-;29452:58;;29559:9;29551:6;29547:22;29541:3;29530:9;29526:19;29519:51;29590:6;29625;29619:13;29656:6;29648;29641:22;29691:2;29683:6;29679:15;29672:22;;29750:2;29740:6;29737:1;29733:14;29725:6;29721:27;29717:36;29788:2;29780:6;29776:15;29809:1;29819:252;29833:6;29830:1;29827:13;29819:252;;;29923:2;29919:7;29910:6;29902;29898:19;29894:33;29889:3;29882:46;29951:40;29984:6;29975;29969:13;29951:40;:::i;:::-;30049:12;;;;29941:50;-1:-1:-1;30014:15:31;;;;29855:1;29848:9;29819:252;;;29823:3;;30120:9;30112:6;30108:22;30102:3;30091:9;30087:19;30080:51;30154:42;30189:6;30181;30154:42;:::i;:::-;30140:56;;;;;;30233:6;30227:3;30216:9;30212:19;30205:35;30277:6;30271:3;30260:9;30256:19;30249:35;30333:9;30325:6;30321:22;30315:3;30304:9;30300:19;30293:51;30361:33;30387:6;30379;30361:33;:::i;:::-;30353:41;28536:1864;-1:-1:-1;;;;;;;;;;;;28536:1864:31:o;30405:284::-;30474:6;30527:2;30515:9;30506:7;30502:23;30498:32;30495:52;;;30543:1;30540;30533:12;30495:52;30575:9;30569:16;30625:14;30618:5;30614:26;30607:5;30604:37;30594:65;;30655:1;30652;30645:12;30694:758;31075:3;31064:9;31057:22;31038:4;31102:57;31154:3;31143:9;31139:19;31131:6;31102:57;:::i;:::-;31207:9;31199:6;31195:22;31190:2;31179:9;31175:18;31168:50;31241:44;31278:6;31270;31241:44;:::i;:::-;31227:58;;31333:9;31325:6;31321:22;31316:2;31305:9;31301:18;31294:50;31361:42;31396:6;31388;31361:42;:::i;:::-;31353:50;;;31439:6;31434:2;31423:9;31419:18;31412:34;30694:758;;;;;;;:::o;33083:442::-;33312:6;33301:9;33294:25;33367:4;33359:6;33355:17;33350:2;33339:9;33335:18;33328:45;33409:6;33404:2;33393:9;33389:18;33382:34;33452:3;33447:2;33436:9;33432:18;33425:31;33275:4;33473:46;33514:3;33503:9;33499:19;33491:6;33473:46;:::i;33530:604::-;33805:6;33794:9;33787:25;33860:4;33852:6;33848:17;33843:2;33832:9;33828:18;33821:45;33902:6;33897:2;33886:9;33882:18;33875:34;33945:3;33940:2;33929:9;33925:18;33918:31;33768:4;33972:46;34013:3;34002:9;33998:19;33990:6;33972:46;:::i;:::-;34067:9;34059:6;34055:22;34049:3;34038:9;34034:19;34027:51;34095:33;34121:6;34113;34095:33;:::i;:::-;34087:41;33530:604;-1:-1:-1;;;;;;;;33530:604:31:o;34868:135::-;34907:3;-1:-1:-1;;34928:17:31;;34925:43;;;34948:18;;:::i;:::-;-1:-1:-1;34995:1:31;34984:13;;34868:135::o;35008:274::-;35137:3;35175:6;35169:13;35191:53;35237:6;35232:3;35225:4;35217:6;35213:17;35191:53;:::i;:::-;35260:16;;;;;35008:274;-1:-1:-1;;35008:274:31:o;36331:184::-;36401:6;36454:2;36442:9;36433:7;36429:23;36425:32;36422:52;;;36470:1;36467;36460:12;36422:52;-1:-1:-1;36493:16:31;;36331:184;-1:-1:-1;36331:184:31:o;36928:168::-;36968:7;37034:1;37030;37026:6;37022:14;37019:1;37016:21;37011:1;37004:9;36997:17;36993:45;36990:71;;;37041:18;;:::i;:::-;-1:-1:-1;37081:9:31;;36928:168::o;37101:127::-;37162:10;37157:3;37153:20;37150:1;37143:31;37193:4;37190:1;37183:15;37217:4;37214:1;37207:15;37233:217;37273:1;37299;37289:132;;37343:10;37338:3;37334:20;37331:1;37324:31;37378:4;37375:1;37368:15;37406:4;37403:1;37396:15;37289:132;-1:-1:-1;37435:9:31;;37233:217::o;37455:297::-;37573:12;;37620:4;37609:16;;;37603:23;;37573:12;37638:16;;37635:111;;;-1:-1:-1;;37712:4:31;37708:17;;;;37705:1;37701:25;37697:38;37686:50;;37455:297;-1:-1:-1;37455:297:31:o;40462:786::-;40873:25;40868:3;40861:38;40843:3;40928:6;40922:13;40944:62;40999:6;40994:2;40989:3;40985:12;40978:4;40970:6;40966:17;40944:62;:::i;:::-;-1:-1:-1;;;41065:2:31;41025:16;;;41057:11;;;41050:40;41115:13;;41137:63;41115:13;41186:2;41178:11;;41171:4;41159:17;;41137:63;:::i;:::-;41220:17;41239:2;41216:26;;40462:786;-1:-1:-1;;;;40462:786:31:o;41747:136::-;41786:3;41814:5;41804:39;;41823:18;;:::i;:::-;-1:-1:-1;;;41859:18:31;;41747:136::o"},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","CARETAKER_ROLE()":"033e6f4d","CLOCK_MODE()":"4bf5d7e9","COUNTING_MODE()":"dd4e2ba5","DEFAULT_ADMIN_ROLE()":"a217fddf","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","MODERATOR_ROLE()":"797669c9","USER_ROLE()":"13119161","apartamentToDateToMonthlyPayments(uint256,uint256)":"3ef4cc8b","archivedBills(uint256)":"a71e9a9c","bills(uint256)":"28bdcde8","cancel(address[],uint256[],bytes[],bytes32)":"452115d6","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","clock()":"91ddadf4","dateToApartamentToMonthlyPayments(uint256,uint256)":"40dd07b9","eip712Domain()":"84b0196e","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalProposer(uint256)":"143489d0","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","proposalVotes(uint256)":"544ffc9c","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","quorumDenominator()":"97c3d334","quorumNumerator()":"a7713a70","quorumNumerator(uint256)":"60c4247f","relay(address,uint256,bytes)":"c28bc2fa","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setProposalThreshold(uint256)":"ece40cc1","setVotingDelay(uint256)":"70b0f660","setVotingPeriod(uint256)":"ea0217cf","spaces(uint256)":"7586353b","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","updateQuorumNumerator(uint256)":"06f3f9e6","users(address)":"a87430ba","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CARETAKER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MODERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apartamentToDateToMonthlyPayments\",\"outputs\":[{\"internalType\":\"enum SinDAO.MonthlyPaymentStatusEnum\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"archivedBills\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bills\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dateToApartamentToMonthlyPayments\",\"outputs\":[{\"internalType\":\"enum SinDAO.MonthlyPaymentStatusEnum\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"spaces\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reservationValue\",\"type\":\"uint256\"},{\"internalType\":\"enum SinDAO.SpaceStatusEnum\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC5805\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canInteract\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"cancel(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-cancel}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"clock()\":{\"details\":\"Clock (as specified in EIP-6372) is set to match the token's clock. Fallback to block numbers if the token does not implement EIP-6372.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalProposer(uint256)\":{\"details\":\"Returns the account that created a given proposal.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorumDenominator()\":{\"details\":\"Returns the quorum denominator. Defaults to 100, but may be overridden.\"},\"quorumNumerator()\":{\"details\":\"Returns the current quorum numerator. See {quorumDenominator}.\"},\"quorumNumerator(uint256)\":{\"details\":\"Returns the quorum numerator at a specific timepoint. See {quorumDenominator}.\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setProposalThreshold(uint256)\":{\"details\":\"Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.\"},\"setVotingDelay(uint256)\":{\"details\":\"Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.\"},\"setVotingPeriod(uint256)\":{\"details\":\"Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"updateQuorumNumerator(uint256)\":{\"details\":\"Changes the quorum numerator. Emits a {QuorumNumeratorUpdated} event. Requirements: - Must be called through a governance proposal. - New numerator must be smaller or equal to the denominator.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SinDAO.sol\":\"SinDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x0f2eba43521df85d589f36b298cc6cd7f3853341f91ca56fc6a221d3e2795489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b65bdd97280765c02e04551088899fc6c83f039ea64561ecf55a6a1bbfce774a\",\"dweb:/ipfs/QmPtD1U9tt9Zrw9EQhzSwEB5PdPDc5uRcx7y4U8nexPT11\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x42f5e97a7010e44b312beeadbf5e5e183bc8a08f8953ee9e270b69f16249a632\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57667020ad6ab50f89b1cd6865644f34532d0d617abf4ea292c393c8a0d9b3d6\",\"dweb:/ipfs/QmV2eENAmJfmAKSKjUMtGEscYTB2L5giUxVeA9fNeXmgQC\"]},\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0x75ee4199a73c91478c00b6ce5eba3d2c36f965db01bd3462c6e3e47785b4cab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8f2a61669d7796054d0f7751f6a48a188f96ae571770982a4bdc39a941dd013\",\"dweb:/ipfs/QmfFNfdnKjkDJNQGKm6FTXbap3bTuLRfGExQXE5S6BnMvy\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0x0272a2c5aff31e5f2398369598c2694eee19986f3b1c43a578b4252555ba2a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df8bca39a5ba89bfd8becbc09dc5f66dc2bde7c0a3722d6c7452f1395609fac9\",\"dweb:/ipfs/QmXqwvZWPLTAS7LrPJS7LBAywc3JWoLGhah1eSM4JvqzFW\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x806f81d08cf596c55f544d1d7b09fb2636e9fb7f2625020a301b288379635252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ae93259b78896d323ebbf520e8c59384c7a48a9f279272bd7ff40b4966b0aa3\",\"dweb:/ipfs/QmSJQVjYnoFYM4Go8URnzjfkYkPwBTrbiyQRwUTQAApsBK\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"contracts/SinDAO.sol\":{\"keccak256\":\"0xb21fd7f9217fc039d5c86ddd62745287fc4b871631cb6f28e38394606407ba63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb108462279cbefae2d5d2709aa91ae1540ec69a8a334497b02830c2d107510\",\"dweb:/ipfs/QmXDxgR9w2VSeT5ptJWcSnagyDHsixYAhGHdTvzXcsFUXo\"]}},\"version\":1}"}}}}}